{"version":3,"sources":["webpack:///library.min.js","webpack:///webpack/bootstrap 07184a1730f8bd1629aa","webpack:///./src/logs.js","webpack:///./src/config.js","webpack:///./~/rx-lite/rx.lite.js","webpack:///./src/ajax.js","webpack:///./src/events/setup.js","webpack:///./src/helper.js","webpack:///./~/superagent/lib/is-object.js","webpack:///./src/Test.js","webpack:///./src/doRedirect.js","webpack:///./src/socketReceive.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/index.js","webpack:///./~/component-emitter/index.js","webpack:///./src/APObjects.js","webpack:///./src/SocketAPI.js","webpack:///./src/accountEventsSubscribe.js","webpack:///./src/authenticate.js","webpack:///./src/authenticate2FA.js","webpack:///./src/cancelAllOrders.js","webpack:///./src/cancelOrder.js","webpack:///./src/cancelReplaceOrder.js","webpack:///./src/confirmRequestTransfers.js","webpack:///./src/createAPIKeys.js","webpack:///./src/createAccount.js","webpack:///./src/createDepositTicket.js","webpack:///./src/createWithdrawTicket.js","webpack:///./src/disable2FA.js","webpack:///./src/enableGoogle2fa.js","webpack:///./src/formatOrders.js","webpack:///./src/get-logout.js","webpack:///./src/getAPIKeys.js","webpack:///./src/getAccountDepositHistory.js","webpack:///./src/getAccountHistory.js","webpack:///./src/getAccountInfo.js","webpack:///./src/getAccountPositions.js","webpack:///./src/getAccountTrades.js","webpack:///./src/getAccountTransactions.js","webpack:///./src/getAccountWithDrawHistory.js","webpack:///./src/getDepositInfo.js","webpack:///./src/getDepositRequestInfoTemplate.js","webpack:///./src/getInstruments.js","webpack:///./src/getLanguage.js","webpack:///./src/getOMSs.js","webpack:///./src/getOpenOrders.js","webpack:///./src/getOrderFee.js","webpack:///./src/getOrderHistory.js","webpack:///./src/getProducts.js","webpack:///./src/getRequestTransfers.js","webpack:///./src/getUserAccounts.js","webpack:///./src/getUserConfig.js","webpack:///./src/getUserConfigValue.js","webpack:///./src/getUserInfo.js","webpack:///./src/getUserReportTickets.js","webpack:///./src/getUserReportWriterResultRecords.js","webpack:///./src/getWithdrawTemplate.js","webpack:///./src/getWithdrawTemplateTypes.js","webpack:///./src/library.js","webpack:///./src/logout.js","webpack:///./src/modifyOrder.js","webpack:///./src/orderBookCreate.js","webpack:///./src/rejectRequestTransfers.js","webpack:///./src/removeAPIKeys.js","webpack:///./src/requestFunds.js","webpack:///./src/resetPassword.js","webpack:///./src/sendOrder.js","webpack:///./src/setUserConfig.js","webpack:///./src/setUserInfo.js","webpack:///./src/setUserKYCData.js","webpack:///./src/submitBlockTrade.js","webpack:///./src/subscribe1.js","webpack:///./src/subscribe2.js","webpack:///./src/subscribeTrades.js","webpack:///./src/transferFunds.js","webpack:///./src/translation.js","webpack:///./src/unsubscribe1.js","webpack:///./src/unsubscribe2.js","webpack:///./src/unsubscribeTrades.js","webpack:///./src/validateUserRegistration.js","webpack:///./src/webAuthenticate.js","webpack:///./src/withdraw.js","webpack:///./~/object-assign/index.js","webpack:///./~/process/browser.js","webpack:///./~/query-string/index.js","webpack:///./~/strict-uri-encode/index.js","webpack:///./~/superagent/lib/client.js","webpack:///./~/superagent/lib/is-function.js","webpack:///./~/superagent/lib/request-base.js","webpack:///./~/superagent/lib/response-base.js","webpack:///./~/superagent/lib/should-retry.js","webpack:///./~/superagent/lib/utils.js","webpack:///(webpack)/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Rx","config","socketOpen","BehaviorSubject","userData","session","initial","prodPair","localStorage","SessionPair","orderBook","tickerBook","tickerData","prodProduct","language","logoutV2","loginStatusRedirect","instrumentChange","synched","logs","global","ws_method_url","methodName","this","use_sim","ws_url_sim","ws_url","api_version","APConfig","exchange","defaultConfig","displayBalancesHeaders","noBalanceFilter","BalanceHover","showDepositBankDetails","depositFileUpload","nonFavIconSpinner","showWidgetPageNumbers","showTermsandConditions","registerFormModal","siteName","templateStyle","clefLogin","useClef","clefFix","clefRedirectURL","companyName","companyCopyright","kycURL_NetVerify_SingleDocument","loginRedirect","apiKeysLevel","withdrawLevel","debugging","kycType","kycClientId","kycURL","API_V2_URL","OperatorId","decimalPlaces","growlwerPosition","growlwerDelay","authy2FA","authGoogle","defaultLanguage","languagesLocation","app_version","app_url_sim","app_url","ws_apis","ws","http","chart","charting_url","charting_library","deposit","types","bitcoin","usd","eur","pm","items","type","title","instrument","parameters","currencies","account","payeeName","withdraw","fiat","digital","perfectMoney","forEach","url","field","process","__WEBPACK_AMD_DEFINE_RESULT__","undefined","checkGlobal","cloneArray","arr","len","length","a","Array","tryCatcherGen","tryCatchTarget","apply","arguments","e","errorObj","thrower","makeStackTraceLong","error","observable","hasStacks","stack","indexOf","STACK_JUMP_SEPARATOR","stacks","source","unshift","concatedStacks","join","filterStackString","stackString","lines","split","desiredLines","line","isInternalFrame","isNodeFrame","push","stackLine","fileNameAndLineNumber","getFileNameAndLineNumber","fileName","lineNumber","rFileName","rStartingLine","rEndingLine","captureLine","Error","firstLine","attempt1","exec","Number","attempt2","attempt3","equalObjects","other","equalFunc","isLoose","stackA","stackB","objProps","keys","objLength","key","index","skipCtor","objValue","othValue","result","objCtor","constructor","othCtor","equalByTag","tag","boolTag","dateTag","errorTag","message","numberTag","regexpTag","stringTag","isObjectLike","isLength","MAX_SAFE_INTEGER","isTypedArray","typedArrayTags","objToString","arraySome","array","predicate","equalArrays","arrLength","othLength","arrValue","baseIsEqualDeep","objIsArr","isArray","othIsArr","objTag","arrayTag","othTag","argsTag","objectTag","objIsObj","isHostObject","othIsObj","isSameTag","objIsWrapped","othIsWrapped","pop","baseIsEqual","isObject","arrayInitialize","count","factory","IndexedItem","id","IsDisposedDisposable","state","_s","isDisposed","StringIterable","StringIterator","_l","_i","ArrayIterable","_a","ArrayIterator","toLength","numberIsFinite","root","isFinite","getIterable","it","$iterator$","TypeError","sign","number","isNaN","Math","floor","abs","maxSafeInteger","observableOf","scheduler","isScheduler","currentThreadScheduler","FromArrayObservable","RepeatSink","observer","parent","falseFactory","argumentsToArray","args","emptyArrayFactory","asObservable","subscribe","repeat","@@iterator","next","done","plucker","x","currentProp","createCbObservable","fn","ctx","selector","AsyncSubject","createCbHandler","results","isFunction","tryCatch","onError","onNext","onCompleted","createNodeObservable","createNodeHandler","err","isNodeList","el","StaticNodeList","NodeList","toString","ListenDisposable","_e","_n","_fn","addEventListener","createEventListener","eventName","handler","disposables","CompositeDisposable","elemToString","add","item","_observableTimer","dueTime","TimerObservable","observableTimerDateAndPeriod","period","AnonymousObservable","normalizeTime","scheduleRecursiveFuture","self","now","Date","getTime","observableTimerTimeSpanAndPeriod","schedulePeriodic","observableDefer","observableDelayRelative","subscription","active","cancelable","SerialDisposable","exception","q","running","materialize","timestamp","notification","shouldRun","kind","SingleAssignmentDisposable","setDisposable","_","recurseDueTime","shouldRecurse","shift","accept","max","BinaryDisposable","observableDelayAbsolute","delayWithSelector","subscriptionDelay","delayDurationSelector","subDelay","start","delay","delays","remove","atEnd","dispose","debounceWithSelector","durationSelector","hasValue","throttle","isPromise","observableFromPromise","currentid","timeoutWithSelector","firstTimeout","timeoutDurationSelector","observableNever","Observable","isObservable","observableThrow","TimeoutError","setTimer","timeout","timerWins","switched","myId","timer","oWins","res","original","defaultScheduler","createTimer","scheduleFuture","combineLatestSource","subject","resultSelector","values","hasValueAll","every","identity","isDone","transformForObserver","@@transducer/init","@@transducer/step","obs","input","@@transducer/result","objectTypes","function","freeExports","nodeType","freeModule","freeGlobal","freeSelf","freeWindow","window","moduleExports","thisGlobal","Function","internals","Promise","helpers","noop","defaultNow","defaultComparer","y","isEqual","defaultSubComparer","defaultError","defaultKeySerializer","then","isFn","longStackSupport","EmptyError","create","ObjectDisposedError","ArgumentOutOfRangeError","NotSupportedError","NotImplementedError","notImplemented","notSupported","Symbol","iterator","Set","doneEnumerator","isIterable","isArrayLike","bindCallback","func","thisArg","argCount","arg","collection","dontEnums","objectProto","pow","hasDontEnumBug","propertyIsEnumerable","dontEnumsLength","obj","prop","inherits","slice","child","__","addProperties","sources","idx","ln","addRef","xs","r","getDisposable","CompositeDisposablePrototype","shouldDispose","splice","currentDisposables","Disposable","action","disposableCreate","disposableEmpty","empty","isDisposable","checkDisposed","disposable","disposableFixup","_fixup","current","old","first","second","_first","_second","old1","old2","NAryDisposable","_disposables","ScheduledItem","RefCountDisposable","InnerDisposable","isInnerDisposed","underlyingDisposable","isPrimaryDisposed","comparer","invoke","invokeCore","compareTo","isCancelled","Scheduler","schedulerProto","schedule","dt","normalize","_scheduleFuture","timeSpan","invokeRecImmediate","pair","innerAction","state2","scheduleWork","state3","isAdded","group","invokeRecDate","dueTime1","scheduleRecursive","setInterval","clearInterval","scheduleMethod","clearMethod","ImmediateScheduler","__super__","immediateScheduler","immediate","CurrentThreadScheduler","runTrampoline","queue","dequeue","si","enqueue","PriorityQueue","scheduleRequired","currentThread","localTimer","SchedulePeriodicRecursive","createTick","command","recurse","_period","_action","_state","_cancel","_scheduler","localSetTimeout","localClearTimeout","setTimeout","clearTimeout","WScript","time","Sleep","runTask","handle","currentlyRunning","task","tasksByHandle","nextHandle","reNative","RegExp","String","replace","setImmediate","test","nextTick","postMessage","importScripts","isAsync","oldHandler","onmessage","MSG_PREFIX","random","onGlobalPostMessage","event","data","substring","MessageChannel","channel","port1","port2","document","createElement","scriptElement","onreadystatechange","parentNode","removeChild","documentElement","appendChild","DefaultScheduler","scheduleAction","ClearDisposable","_id","LocalClearDisposable","async","capacity","priorityProto","isHigherPriority","left","right","percolate","temp","heapify","peek","removeAt","observableProto","Notification","_accept","_acceptObserver","observerOrOnNext","toObservable","OnNextNotification","OnErrorNotification","OnCompletedNotification","notificationCreateOnNext","createOnNext","notificationCreateOnError","createOnError","notificationCreateOnCompleted","createOnCompleted","Observer","observerCreate","AnonymousObserver","AbstractObserver","isStopped","completed","fail","_onNext","_onError","_onCompleted","makeSubscribe","oldOnError","oldSubscribe","_subscribe","oOrOnNext","subscribeOnNext","subscribeOnError","subscribeOnCompleted","ScheduledObserver","isAcquired","hasFaulted","enqueueNext","enqueueError","enqueueCompleted","work","ensureActive","isOwner","ObservableBase","fixSubscriber","subscriber","ado","sub","subscribeCore","AutoDetachObserver","FlatMapObservable","InnerObserver","_wrapResult","map","i2","from","Enumerable","ConcatEnumerableObservable","currentItem","currentValue","_recurse","concat","CatchErrorObservable","lastError","catchError","RepeatEnumerable","v","RepeatEnumerator","enumerableRepeat","repeatCount","OfEnumerable","OfEnumerator","enumerableOf","of","ToArrayObservable","toArray","Defer","_f","defer","observableFactory","EmptyObservable","EmptySink","scheduleItem","run","EMPTY_OBSERVABLE","observableEmpty","FromObservable","iterable","_iterable","createScheduleMethod","list","charAt","observableFrom","mapFn","mapper","_args","observableFromArray","fromArray","NeverObservable","NEVER_OBSERVABLE","never","ofWithScheduler","PairsObservable","_o","_keys","pairs","RangeObservable","rangeCount","loopRecursive","range","RepeatObservable","JustObservable","_value","ThrowObservable","just","_error","CatchObservable","d1","CatchObserver","handlerOrSecond","observableCatch","combineLatest","CombineLatestObservable","params","cb","_params","_cb","subscriptions","sad","CombineLatestObserver","notTheSame","j","filter","observableConcat","ConcatObserver","ConcatObservable","_sources","concatAll","merge","MergeObservable","maxConcurrent","g","MergeObserver","activeCount","handleSubscribe","innerSource","maxConcurrentOrOther","observableMerge","mergeAll","CompositeError","errors","innerErrors","MergeDelayErrorObservable","MergeDelayErrorObserver","_group","setCompletion","inner","_inner","mergeDelayError","MergeAllObservable","MergeAllObserver","SkipUntilObservable","_open","leftSubscription","SkipUntilSourceObserver","rightSubscription","SkipUntilOtherObserver","_p","_r","skipUntil","SwitchObservable","SwitchObserver","stopped","latest","hasLatest","switchLatest","TakeUntilObservable","TakeUntilObserver","takeUntil","WithLatestFromObservable","_ss","WithLatestFromOtherObserver","outerSad","WithLatestFromSourceObserver","allValues","withLatestFrom","ZipObservable","ZipObserver","_q","_d","notEmpty","shiftEach","queuedValues","zip","ZipIterableObservable","ZipIterableObserver","zipIterable","DematerializeObservable","DematerializeObserver","dematerialize","DistinctUntilChangedObservable","keyFn","DistinctUntilChangedObserver","hasCurrentKey","currentKey","comparerEquals","distinctUntilChanged","TapObservable","_oN","_oE","_oC","t","tap","doAction","doOnNext","tapOnNext","doOnError","tapOnError","doOnCompleted","tapOnCompleted","FinallyObservable","FinallyDisposable","IgnoreElementsObservable","ignoreElements","MaterializeObservable","MaterializeObserver","retry","retryCount","RetryWhenObservable","createDisposable","notifier","_notifier","exceptions","Subject","handled","notificationDisposable","outer","exn","ex","retryWhen","RepeatWhenObservable","completions","repeatWhen","ScanObservable","accumulator","hasSeed","seed","ScanObserver","_hs","_ha","_hv","scan","SkipLastObservable","_c","SkipLastObserver","skipLast","startWith","TakeLastObserver","takeLast","flatMapConcat","concatMap","MapObservable","innerMap","internalMap","select","selectorFn","pluck","flatMap","selectMany","flatMapLatest","SkipObservable","_count","SkipObserver","skip","SkipWhileObservable","SkipWhileObserver","skipWhile","TakeObservable","TakeObserver","take","TakeWhileObservable","TakeWhileObserver","takeWhile","FilterObservable","innerPredicate","internalFilter","shouldYield","where","fromCallback","fromNodeCallback","removeEventListener","useNativeEvents","EventObservable","_el","createHandler","fromEvent","element","addListener","fromEventPattern","h","removeListener","on","off","publish","refCount","EventPatternObservable","del","_add","_del","EventPatternDisposable","ret","_ret","returnValue","addHandler","removeHandler","FromPromiseObservable","scheduleNext","scheduleError","fromPromise","promise","toPromise","promiseCtor","resolve","reject","startAsync","functionAsync","MulticastObservable","fn1","fn2","_fn1","_fn2","connectable","multicast","connect","subjectOrSubjectSelector","ConnectableObservable","share","publishLast","publishValue","initialValueOrSelector","initialValue","shareValue","replay","bufferSize","windowSize","ReplaySubject","shareReplay","RefCountObservable","_connectableSubscription","_connection","_source","_subject","ConnectDisposable","_dt","observableinterval","interval","periodOrScheduler","firstArg","DebounceObservable","DebounceObserver","_v","currentId","debounce","TimestampObservable","TimestampObserver","SampleObservable","sampler","_sampler","sourceSubscription","SampleSourceObserver","SamplerObserver","_handleMessage","sample","intervalOrSampler","windowDuration","duration","RangeError","lastOnNext","PausableObservable","pauser","controller","conn","connection","pausable","b","pause","resume","PausableBufferedObservable","drainQueue","previousShouldFire","shouldFire","pausableBuffered","ControlledObservable","enableQueue","ControlledSubject","request","numberOfItems","requestedCount","requestedDisposable","hasFailed","hasCompleted","disposeCurrentRequest","_processRequest","remaining","controlled","pipe","dest","onDrain","write","emit","_isStdio","end","TransduceObserver","xform","_xform","transduce","transducer","__subscribe","AutoDetachObserverPrototype","InnerSubscription","observers","hasError","hasObservers","os","AnonymousSubject","getValue","createRemovableDisposable","so","_trim","Pauser","superagent","ajax","method","toLowerCase","post","send","body","userInformation","accountInformation","accountActions","openOrders","getL2AndTradesSubject","getL2AndTrades","realTimeData","tickers","getCookie","cname","ca","cookie","setCookie","cvalue","exminutes","setTime","expires","toUTCString","getRequest","callback","XMLHttpRequest","open","onload","status","responseText","onerror","setElementHtml","htmlElement","alert","insertAndExecute","getSortedKeys","sort","htmElem","text","innerHTML","scripts","childNodes","nodeName","script","evalScript","elem","toUpperCase","textContent","head","getElementsByTagName","createTextNode","insertBefore","firstChild","getSelectedRadioInput","radios","checked","hide","elements","style","display","show","specifiedDisplay","Event","sender","_sender","_listeners","updateArrayByPx","trade","Price","Quantity","attach","listener","notify","authenticateSubject","webAuthenticateSubject","products","instruments","oms","registerUser","resetPass","subscribe1","subscribe2","subscribe1Update","subscribe2Update","subscribe2UpdateBook","subscribeTradesSubject","getTickerHist","unsubscribe1","unsubscribe2","unsubscribeTrades","orderPrefillPriceAndSide","auth2FA","Disable2FA","EnableGoogle2FA","getUser","setUser","setUserConfig","getUserConfig","getUserConfigVal","reqVerifyEmail","openorders","tradeReports","openquotes","accountTrades","accountTransactions","accountHistory","accountDepositHistory","accountWithDrawHistory","accountPositions","accountEvents","accountInfo","userAccounts","selectedAccount","orderHistory","orderfee","sendorder","submitBlockTradeEvent","cancel","cancelReplace","cancelAll","modify","rejectedOrders","sellOrders","buyOrders","sellOrdersUpdate","buyOrdersUpdate","lvl2Sells","lvl2Buys","lvl2SellsUpdate","lvl2BuysUpdate","lvl2RawUpdate","lvl2Update","deposits","withdrawTemplateTypes","withdrawTemplate","submitWithdraw","createWithdrawTicket","createDeposit","accountBalances","accountOrders","addApiKey","removeApiKey","myApiKeys","logoutEvent","openorderEvents","transfunds","requestfunds","getrequests","confirmrequests","rejectrequests","verifylevel","verificationLevelUpdate","sessionLoaded","userReports","userReportTickets","depositTemplate","redirect","myPath","console","log","SessionToken","setItem","$","bootstrapGrowl","allow_dismiss","align","AlphaPoint","offset","amount","location","JSON","parse","coindirectRedirect","userSettingsUpdate","init","APAPI","SubscribeToEvent","logout","level1Update","InstrumentId","ticker","orders","format","L2UpdateMethod","ProductPairCode","buys","Side","sells","buy","buys2","sell","sells2","newTrades","OrderState","newOrders","order","OrderId","OrderType","oldPositions","ProductId","find","VenueInstrumentId","NewStatus","assign","growlerDefaultOptions","trades","VerificationStatus","VerificationLevel","eval","AP_API","APObjects","initSubscriptions","library","wsConnection","Connect","getItem","OrderHelpers","initOrderHelpers","addOnOpenCallback","apiRef","Session","SessionClass","Init","IsConnectedEvent","token","WebAuthenticate","addOnCloseCallback","Emitter","mixin","_callbacks","once","removeAllListeners","callbacks","listeners","hasListeners","api","processUserAccounts","completedLoadingAcc","accountsLength","par","IsAuthenticatedEvent","UserObj","apexSite","changeCurrentAccount","accountId","newAcc","AccountClass","getAccountTransactions","getRequestTransfers","Accounts","getAccountInfo","AccountId","OMSId","OmsId","getAPIKey","UserId","getUserCon","querySelector","classList","userMenu","getElementById","accountIndicator","SelectedInstrumentId","Instruments","Products","completedCallback","sectionDoneInternal","completedSegments","RPCCall","Id","rv","product","ins","newIns","InstrumentClass","Info","IsAuthenticated","Authenticated","User","errorCallback","Requires2FA","usrRV","bind","currentAccount","AccountInfo","AccountName","otherAccount","listEl","orderTradeEvent_HandlerFcn","Trades","NewTradesUpdateEvent","orderStateEvent_HandlerFcn","containsKey","OpenOrders","InactiveOrders","InactiveOrdersCacheLength","InactiveOrdersUpdateEvent","eventArgs","OpenOrdersUpdateEvent_EventArgs","NewOrderState","OldOrderState","OpenOrdersUpdateEvent","accountPositionEvent_HandlerFcn","AccountPositionsUpdateEvent_EventArgs","NewAccountPosition","AccountPositions","OldAccountPosition","AccountPositionsUpdateEvent","IsSubscribed","taskCompleted","taskCount","IsQuote","OMSID","OpenTradeReports","side","OpenQuotes","debug","balance","Subscribed","SendOrder","orderSendData","CancelOrder","orderId","CancelAllOrders","instrumentId","OrderSendDataClass","ClientOrderId","DisplayQuantity","LimitPrice","OrderIdOCO","Unknown","PegPriceType","RefPrice","StopPrice","TimeInForce","GTC","Distance","CreateMarketOrderSendData","insId","accId","qty","osd","Market","CreateLimitOrderSendData","px","Limit","CreateStopMarketOrderSendData","stopPx","pegType","CreateStopLimitOrderSendData","CreateTrailingStopMarketOrderSendData","dist","refPx","CreateTrailingStopLimitOrderSendData","StopMarket","StopLimit","TrailingStopMarket","TrailingStopLimit","Buy","Sell","Short","IOC","FOK","Last","Bid","Ask","getBestSellPrice","minAskPrice","MAX_VALUE","L2Sells","getBestBuyPrice","maxBidPrice","L2Buys","Level2UpdateEvent_HandlerFcn","IsLevel2Subscribed","Level2DataClass_ArrayObj","l2Data","Level2DataClass","ActionType","L2BestBuyPrice","L2BestSellPrice","html","toFixed","L2ChangedEvent","Level1UpdateEvent_HandlerFcn","IsLevel1Subscribed","L1Data","L1ChangedEvent","updateTickerData","l1Data","LastTradedPx","Rolling24HrPxChange","Rolling24HrVolume","Product1Symbol","SessionLow","SessionHigh","TradesUpdateEvent_HandlerFcn","IsTradesSubscribed","NewTradesDataClass_ArrayObj","tradeData","TradesDataClass","RecentTrades","RecentTradesCacheLength","TradesChangedEvent","L2CacheLength","SubscribeLevel2","bSubscribe","completeCallback","req","Depth","SubscribeLevel1","SubscribeTrades","IncludeLastCount","TradeId","Order1Id","Order2Id","Timestamp","Direction","TakerSide","UpdateId","NumberOfAccounts","UpdateDateTime","LastTradePrice","NumberOfOrders","internalOpen","IsConnected","onOpenCallbacks","internalClose","onCloseCallbacks","internalOnMessage","ev","frame","rpcCallback","RPCCall_ReplyWaitObjects","RPCEvent_EventWaitObjects","internalOnError","evt","nextIvalue","wsUri","WebSocket","onopen","onclose","RPCCallLevel2","function_name","paramObject","level","stringify","closeConnection","close","subscribeAccountEvents","requestPayload","Authenticate","authenticate2FA","cancelAllOrders","cancelOrder","cancelReplaceOrder","confirmRequestTransfers","createAPIKey","registerNewUser","createDepositTicket","assetId","productId","assetName","currencyCode","RequestUser","Status","DepositInfo","depositInfo","disable2FA","enableGoogle2FA","arrayOrders","info","Account","TimeStamp","Orders","arrayTrades","Order1","Order2","TradeTime","IsBlockTrade","getLogout","logoutRedirect","getAccountDepositHistory","getAccountHistory","getAccountPositions","getAccountTrades","StartIndex","Count","getAccountWithDrawHistory","getDepositInfo","getDepositRequestInfoTemplate","getInstruments","events","cache","getLanguage","getOMS","getProducts","getUserAccounts","getOpenOrders","getOrderFee","getOrderHistory","PayerAccountId","getUserConfigValue","getUserInfo","getUserReportTickets","getUserReportWriterResultRecords","getWithdrawTemplate","templateType","getWithdrawTemplateTypes","queryString","resetPassword","subscribeLvl1","subscribeLvl2","subscribeTrades","unsubscribeLvl1","unsubscribeLvl2","unsubscribeTradesCall","setUserInfo","setUserCon","sendOrder","submitBlockTrade","modifyOrder","deleteAPIKey","transferFunds","requestFunds","rejectRequestTransfers","validateUserRegistration","setUserKYCData","translation","setProductPair","setProduct","reset","orderBookCreate","userName","UserName","newData","sessionToken","userKYC_KVP","idFrontB64","idBackB64","idHeldB64","SetUserKYCData","level1Trades","Payload","nested","attrString","path","templateForm","TemplateType","bankAddress","fullName","comment","bankAccountNumber","bankAccountName","swiftCode","Adress","sendToAddress","Address","PaymentId","Comment","ExternalAddress","toObject","val","getOwnPropertySymbols","propIsEnumerable","test1","getOwnPropertyNames","test2","fromCharCode","test3","letter","target","symbols","to","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","Item","browser","env","argv","version","versions","binding","cwd","chdir","dir","umask","encoderForArrayFormat","opts","arrayFormat","encode","parserForArrayFormat","strict","strictUriEncode","encodeURIComponent","keysSorter","objectAssign","extract","str","formatter","trim","param","parts","decodeURIComponent","reduce","Boolean","val2","charCodeAt","serialize","pushEncodedKeyValuePair","subkey","parseString","pos","parseHeader","fields","isJSON","mime","Response","xhr","responseType","statusText","_setStatusProperties","header","headers","getAllResponseHeaders","getResponseHeader","_setHeaderProperties","_responseType","response","_parseBody","Request","_query","_header","rawResponse","statusCode","new_err","_isResponseOK","warn","RequestBase","ResponseBase","shouldRetry","getXHR","protocol","ActiveXObject","serializeObject","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","_parser","toError","msg","set","auth","user","pass","options","btoa","username","password","query","file","_data","_getFormData","append","_formData","FormData","_maxRetries","_retries","_retry","_callback","retries","crossDomainError","crossDomain","buffer","agent","_appendQueryString","_sort","queryArr","_isHost","_endCalled","_end","_setTimeouts","readyState","_responseTimeoutTimer","timedout","_aborted","handleProgress","direction","total","percent","loaded","onprogress","upload","_withCredentials","withCredentials","contentType","_serializer","setRequestHeader","patch","put","_timer","_timeout","_responseTimeout","option","deadline","_fullfilledPromise","innerResolve","innerReject","catch","use","ok","_okCallback","getHeader","unset","abort","redirects","_maxRedirects","toJSON","isObj","sortQuery","_timeoutError","reason","errno","code","utils","ct","links","link","parseLinks","statusType","clientError","serverError","accepted","noContent","badRequest","unauthorized","notAcceptable","forbidden","notFound","ERROR_CODES","cleanHeader","shouldStripCookie","webpackPolyfill","deprecate","paths","children"],"mappings":"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","file":"library.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 91);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Rx = __webpack_require__(2);\r\nvar config = __webpack_require__(1);\r\nvar socketOpen = new Rx.BehaviorSubject(false);\r\nvar userData = new Rx.BehaviorSubject({});\r\nvar session = new Rx.BehaviorSubject({initial:true});\r\nvar prodPair = new Rx.BehaviorSubject(localStorage.SessionPair || config.prodPair)\r\nvar orderBook = new Rx.BehaviorSubject({})\r\nvar tickerBook = new Rx.BehaviorSubject([])\r\nvar tickerData = new Rx.BehaviorSubject({})\r\nvar prodProduct = new Rx.BehaviorSubject(1);\r\nvar language = new Rx.BehaviorSubject({});\r\nvar logoutV2 = new Rx.BehaviorSubject({});\r\nvar loginStatusRedirect = new Rx.BehaviorSubject(false);\r\nvar instrumentChange = new Rx.BehaviorSubject(1);\r\nvar synched = new Rx.BehaviorSubject(false);\r\n\r\nvar logs = {\r\n  socketOpen:socketOpen,\r\n  userData: userData,\r\n  session:session,\r\n  language: language,\r\n  prodPair:prodPair,\r\n  prodProduct:prodProduct,\r\n  orderBook :orderBook,\r\n  tickerBook :tickerBook,\r\n  tickerData: tickerData,\r\n  logoutV2 :logoutV2,\r\n  loginStatusRedirect:loginStatusRedirect,\r\n  instrumentChange: instrumentChange,\r\n  synched:synched,\r\n};\r\n\r\nmodule.exports = logs;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var config = global.APConfig || {};\n\nvar exchange = {};\nif (config.exchange) exchange = config.exchange;\n\nvar defaultConfig = {\n  displayBalancesHeaders: config.displayBalancesHeaders || false,\n  noBalanceFilter: config.noBalanceFilter || false,\n  BalanceHover: config.BalanceHover || true,\n  showDepositBankDetails: config.showDepositBankDetails || false,\n  depositFileUpload: config.depositFileUpload || false,\n  nonFavIconSpinner: config.nonFavIconSpinner || false, //used by CoinDirect when there is no fav icons used\n  showWidgetPageNumbers: config.showWidgetPageNumbers || true,\n  showTermsandConditions: config.showTermsandConditions || true,\n  registerFormModal: config.registerFormModal || true,\n\n  siteName: config.siteName || '',\n  templateStyle: config.templateStyle || '',\n  clefLogin: config.clefLogin || '',\n  useClef: config.useClef || false,\n  clefFix: config.clefFix || false,\n  clefRedirectURL: config.clefRedirectURL || '',\n  companyName: config.companyName || 'Alitin',\n  companyCopyright: config.companyCopyright || 'Bitcoin Co', // company copyright text\n  kycURL_NetVerify_SingleDocument: config.kycURL_NetVerify_SingleDocument || '',\n  loginRedirect: config.loginRedirect || '',\n  apiKeysLevel: config.apiKeysLevel || 0,\n  withdrawLevel: config.withdrawLevel || 0,\n  debugging: config.debugging || false,\n  kycType:  config.kycType || 'Identity Mind',\n  kycClientId:  config.kycClientId || '',\n  kycURL:  config.kycURL || 'http://dev-validation.alphapoint.com/api/im/ValidateUserRegistration_v2',\n\n  API_V2_URL:  config.API_V2_URL || 'ws://206.72.204.48:8086/WSGateway/',\n  OperatorId: config.OperatorId || 1,\n  prodPair:  config.prodPair || 'BTCUSD',\n  decimalPlaces: config.decimalPlaces || 4 ,\n  growlwerPosition: config.growlwerPosition || 'left',\n  growlwerDelay: config.growlwerDelay || 4000,\n\n  authy2FA: config.authy2FA, // enable authentication using 2FA\n  authGoogle: config.authGoogle, // enable authentication using Google\n\n  defaultLanguage: config.defaultLanguage || 'en',\n  languagesLocation: config.languagesLocation || 'dist/lang',\n\n  api_version: exchange.app_version || config.api_version || 'v1',\n  use_sim: exchange.use_sim || config.use_sim,\n\n  app_url_sim: exchange.app_url_sim ||'https://sim3.alphapoint.com:8400/ajax',\n  ws_url_sim: exchange.ws_url_sim ||'wss://sim3.alphapoint.com:8401',\n\n  app_url: exchange.app_url || config.app_url || 'https://sim3.alphapoint.com:8400/ajax',\n  ws_url: exchange.ws_url || config.ws_url || 'wss://sim3.alphapoint.com:8401',\n  ws_apis: [\n    'GetTicker',\n    'GetL2AndTrades',\n    'GetAccountInfo',\n    'GetAccountActions',\n  ],\n  ws: {},\n  http: {},\n\n  chart: config.chart || {},\n  charting_url: exchange.charting_url || config.charting_url || 'wss://dev2.alphapoint.com:8402/v1/GetRealTime/',\n  charting_library: config.charting_library || 'libs/charting_library_new/',\n\n  deposit: config.deposit || {\n    types: {\n      bitcoin: 1,\n      usd: 2,\n      eur: 3,\n      pm: 4\n    },\n    items: [\n      {\n        type: 1,\n        title: 'Digital Currency',\n      }, {\n        type: 2,\n        title: 'USD - United States Dollars',\n        instrument: 'USD',\n      }, {\n        type: 3,\n        title: 'EUR - Euro',\n        instrument: 'EUR',\n      }, {\n        type: 4,\n        title: 'Perfect Money',\n        parameters: { // Perfect Money parameters\n          currencies: [\n            {\n              title: 'USD',\n              account: 'XX'\n            }, {\n              title: 'EUR',\n              account: 'XX'\n            }\n          ],\n          payeeName: 'Alitin Exchange', // payee name\n        }\n      }\n    ]\n  },\n  withdraw: config.withdraw || {\n    types: {\n      fiat: 1,\n      digital: 2,\n      perfectMoney: 3\n    },\n    items: [\n      {\n        type: 2,\n        title: 'BTC - BitCoin',\n        instrument: 'BTC',\n      }, {\n        type: 2,\n        title: 'LTC - LiteCoin',\n        instrument: 'LTC',\n      }, {\n        type: 2,\n        title: 'PPC',\n        instrument: 'PPC',\n      }, {\n        type: 2,\n        title: 'NMC',\n        instrument: 'NMC',\n      }, {\n        type: 1,\n        title: 'EUR - Euro',\n        instrument: 'EUR',\n      }, {\n        type: 2,\n        title: 'CNY',\n        instrument: 'CNY',\n      }, {\n        type: 1,\n        title: 'USD - United States Dollar',\n        instrument: 'USD',\n      }, {\n        type: 3,\n        title: 'Perfect Money',\n      }\n    ]\n  }\n};\n\nfunction method_url(methodName) {\n  return (this.use_sim ? this.app_url_sim : this.app_url) + '/' + this.api_version + '/' + methodName;\n}\n\nfunction ws_method_url(methodName) {\n  return (this.use_sim ? this.ws_url_sim : this.ws_url) + '/' + this.api_version + '/' + methodName + '/';\n}\n\ndefaultConfig.ws_apis.forEach(function(url) {\n  defaultConfig.ws[url] = ws_method_url.call(defaultConfig, url);\n});\n\nfor (var field in defaultConfig) {\n  config[field] = defaultConfig[field];\n}\n\nmodule.exports = config;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module, global, process) {var __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) Microsoft, All rights reserved. See License.txt in the project root for license information.\n\n;(function (undefined) {\n\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  function checkGlobal(value) {\n    return (value && value.Object === Object) ? value : null;\n  }\n\n  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType) ? exports : null;\n  var freeModule = (objectTypes[typeof module] && module && !module.nodeType) ? module : null;\n  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global === 'object' && global);\n  var freeSelf = checkGlobal(objectTypes[typeof self] && self);\n  var freeWindow = checkGlobal(objectTypes[typeof window] && window);\n  var moduleExports = (freeModule && freeModule.exports === freeExports) ? freeExports : null;\n  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n  var root = freeGlobal || ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) || freeSelf || thisGlobal || Function('return this')();\n\n  var Rx = {\n    internals: {},\n    config: {\n      Promise: root.Promise\n    },\n    helpers: { }\n  };\n\n  // Defaults\n  var noop = Rx.helpers.noop = function () { },\n    identity = Rx.helpers.identity = function (x) { return x; },\n    defaultNow = Rx.helpers.defaultNow = Date.now,\n    defaultComparer = Rx.helpers.defaultComparer = function (x, y) { return isEqual(x, y); },\n    defaultSubComparer = Rx.helpers.defaultSubComparer = function (x, y) { return x > y ? 1 : (x < y ? -1 : 0); },\n    defaultKeySerializer = Rx.helpers.defaultKeySerializer = function (x) { return x.toString(); },\n    defaultError = Rx.helpers.defaultError = function (err) { throw err; },\n    isPromise = Rx.helpers.isPromise = function (p) { return !!p && typeof p.subscribe !== 'function' && typeof p.then === 'function'; },\n    isFunction = Rx.helpers.isFunction = (function () {\n\n      var isFn = function (value) {\n        return typeof value == 'function' || false;\n      };\n\n      // fallback for older versions of Chrome and Safari\n      if (isFn(/x/)) {\n        isFn = function(value) {\n          return typeof value == 'function' && toString.call(value) == '[object Function]';\n        };\n      }\n\n      return isFn;\n    }());\n\n    function cloneArray(arr) {\n      var len = arr.length, a = new Array(len);\n      for(var i = 0; i < len; i++) { a[i] = arr[i]; }\n      return a;\n    }\n\n  var errorObj = {e: {}};\n  \n  function tryCatcherGen(tryCatchTarget) {\n    return function tryCatcher() {\n      try {\n        return tryCatchTarget.apply(this, arguments);\n      } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n      }\n    };\n  }\n\n  var tryCatch = Rx.internals.tryCatch = function tryCatch(fn) {\n    if (!isFunction(fn)) { throw new TypeError('fn must be a function'); }\n    return tryCatcherGen(fn);\n  };\n\n  function thrower(e) {\n    throw e;\n  }\n\n  Rx.config.longStackSupport = false;\n  var hasStacks = false, stacks = tryCatch(function () { throw new Error(); })();\n  hasStacks = !!stacks.e && !!stacks.e.stack;\n\n  // All code after this point will be filtered from stack traces reported by RxJS\n  var rStartingLine = captureLine(), rFileName;\n\n  var STACK_JUMP_SEPARATOR = 'From previous event:';\n\n  function makeStackTraceLong(error, observable) {\n    // If possible, transform the error stack trace by removing Node and RxJS\n    // cruft, then concatenating with the stack trace of `observable`.\n    if (hasStacks &&\n        observable.stack &&\n        typeof error === 'object' &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n      var stacks = [];\n      for (var o = observable; !!o; o = o.source) {\n        if (o.stack) {\n          stacks.unshift(o.stack);\n        }\n      }\n      stacks.unshift(error.stack);\n\n      var concatedStacks = stacks.join('\\n' + STACK_JUMP_SEPARATOR + '\\n');\n      error.stack = filterStackString(concatedStacks);\n    }\n  }\n\n  function filterStackString(stackString) {\n    var lines = stackString.split('\\n'), desiredLines = [];\n    for (var i = 0, len = lines.length; i < len; i++) {\n      var line = lines[i];\n\n      if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n        desiredLines.push(line);\n      }\n    }\n    return desiredLines.join('\\n');\n  }\n\n  function isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n    if (!fileNameAndLineNumber) {\n      return false;\n    }\n    var fileName = fileNameAndLineNumber[0], lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === rFileName &&\n      lineNumber >= rStartingLine &&\n      lineNumber <= rEndingLine;\n  }\n\n  function isNodeFrame(stackLine) {\n    return stackLine.indexOf('(module.js:') !== -1 ||\n      stackLine.indexOf('(node.js:') !== -1;\n  }\n\n  function captureLine() {\n    if (!hasStacks) { return; }\n\n    try {\n      throw new Error();\n    } catch (e) {\n      var lines = e.stack.split('\\n');\n      var firstLine = lines[0].indexOf('@') > 0 ? lines[1] : lines[2];\n      var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n      if (!fileNameAndLineNumber) { return; }\n\n      rFileName = fileNameAndLineNumber[0];\n      return fileNameAndLineNumber[1];\n    }\n  }\n\n  function getFileNameAndLineNumber(stackLine) {\n    // Named functions: 'at functionName (filename:lineNumber:columnNumber)'\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) { return [attempt1[1], Number(attempt1[2])]; }\n\n    // Anonymous functions: 'at filename:lineNumber:columnNumber'\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) { return [attempt2[1], Number(attempt2[2])]; }\n\n    // Firefox style: 'function@filename:lineNumber or @filename:lineNumber'\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) { return [attempt3[1], Number(attempt3[2])]; }\n  }\n\n  var EmptyError = Rx.EmptyError = function() {\n    this.message = 'Sequence contains no elements.';\n    Error.call(this);\n  };\n  EmptyError.prototype = Object.create(Error.prototype);\n  EmptyError.prototype.name = 'EmptyError';\n\n  var ObjectDisposedError = Rx.ObjectDisposedError = function() {\n    this.message = 'Object has been disposed';\n    Error.call(this);\n  };\n  ObjectDisposedError.prototype = Object.create(Error.prototype);\n  ObjectDisposedError.prototype.name = 'ObjectDisposedError';\n\n  var ArgumentOutOfRangeError = Rx.ArgumentOutOfRangeError = function () {\n    this.message = 'Argument out of range';\n    Error.call(this);\n  };\n  ArgumentOutOfRangeError.prototype = Object.create(Error.prototype);\n  ArgumentOutOfRangeError.prototype.name = 'ArgumentOutOfRangeError';\n\n  var NotSupportedError = Rx.NotSupportedError = function (message) {\n    this.message = message || 'This operation is not supported';\n    Error.call(this);\n  };\n  NotSupportedError.prototype = Object.create(Error.prototype);\n  NotSupportedError.prototype.name = 'NotSupportedError';\n\n  var NotImplementedError = Rx.NotImplementedError = function (message) {\n    this.message = message || 'This operation is not implemented';\n    Error.call(this);\n  };\n  NotImplementedError.prototype = Object.create(Error.prototype);\n  NotImplementedError.prototype.name = 'NotImplementedError';\n\n  var notImplemented = Rx.helpers.notImplemented = function () {\n    throw new NotImplementedError();\n  };\n\n  var notSupported = Rx.helpers.notSupported = function () {\n    throw new NotSupportedError();\n  };\n\n  // Shim in iterator support\n  var $iterator$ = (typeof Symbol === 'function' && Symbol.iterator) ||\n    '_es6shim_iterator_';\n  // Bug for mozilla version\n  if (root.Set && typeof new root.Set()['@@iterator'] === 'function') {\n    $iterator$ = '@@iterator';\n  }\n\n  var doneEnumerator = Rx.doneEnumerator = { done: true, value: undefined };\n\n  var isIterable = Rx.helpers.isIterable = function (o) {\n    return o && o[$iterator$] !== undefined;\n  };\n\n  var isArrayLike = Rx.helpers.isArrayLike = function (o) {\n    return o && o.length !== undefined;\n  };\n\n  Rx.helpers.iterator = $iterator$;\n\n  var bindCallback = Rx.internals.bindCallback = function (func, thisArg, argCount) {\n    if (typeof thisArg === 'undefined') { return func; }\n    switch(argCount) {\n      case 0:\n        return function() {\n          return func.call(thisArg)\n        };\n      case 1:\n        return function(arg) {\n          return func.call(thisArg, arg);\n        };\n      case 2:\n        return function(value, index) {\n          return func.call(thisArg, value, index);\n        };\n      case 3:\n        return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n    }\n\n    return function() {\n      return func.apply(thisArg, arguments);\n    };\n  };\n\n  /** Used to determine if values are of the language type Object */\n  var dontEnums = ['toString',\n    'toLocaleString',\n    'valueOf',\n    'hasOwnProperty',\n    'isPrototypeOf',\n    'propertyIsEnumerable',\n    'constructor'],\n  dontEnumsLength = dontEnums.length;\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\nvar objectProto = Object.prototype,\n    hasOwnProperty = objectProto.hasOwnProperty,\n    objToString = objectProto.toString,\n    MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\nvar keys = Object.keys || (function() {\n    var hasOwnProperty = Object.prototype.hasOwnProperty,\n        hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\n        dontEnums = [\n          'toString',\n          'toLocaleString',\n          'valueOf',\n          'hasOwnProperty',\n          'isPrototypeOf',\n          'propertyIsEnumerable',\n          'constructor'\n        ],\n        dontEnumsLength = dontEnums.length;\n\n    return function(obj) {\n      if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n        throw new TypeError('Object.keys called on non-object');\n      }\n\n      var result = [], prop, i;\n\n      for (prop in obj) {\n        if (hasOwnProperty.call(obj, prop)) {\n          result.push(prop);\n        }\n      }\n\n      if (hasDontEnumBug) {\n        for (i = 0; i < dontEnumsLength; i++) {\n          if (hasOwnProperty.call(obj, dontEnums[i])) {\n            result.push(dontEnums[i]);\n          }\n        }\n      }\n      return result;\n    };\n  }());\n\nfunction equalObjects(object, other, equalFunc, isLoose, stackA, stackB) {\n  var objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength !== othLength && !isLoose) {\n    return false;\n  }\n  var index = objLength, key;\n  while (index--) {\n    key = objProps[index];\n    if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  var skipCtor = isLoose;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key],\n        result;\n\n    if (!(result === undefined ? equalFunc(objValue, othValue, isLoose, stackA, stackB) : result)) {\n      return false;\n    }\n    skipCtor || (skipCtor = key === 'constructor');\n  }\n  if (!skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    if (objCtor !== othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor === 'function' && objCtor instanceof objCtor &&\n          typeof othCtor === 'function' && othCtor instanceof othCtor)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction equalByTag(object, other, tag) {\n  switch (tag) {\n    case boolTag:\n    case dateTag:\n      return +object === +other;\n\n    case errorTag:\n      return object.name === other.name && object.message === other.message;\n\n    case numberTag:\n      return (object !== +object) ?\n        other !== +other :\n        object === +other;\n\n    case regexpTag:\n    case stringTag:\n      return object === (other + '');\n  }\n  return false;\n}\n\nvar isObject = Rx.internals.isObject = function(value) {\n  var type = typeof value;\n  return !!value && (type === 'object' || type === 'function');\n};\n\nfunction isObjectLike(value) {\n  return !!value && typeof value === 'object';\n}\n\nfunction isLength(value) {\n  return typeof value === 'number' && value > -1 && value % 1 === 0 && value <= MAX_SAFE_INTEGER;\n}\n\nvar isHostObject = (function() {\n  try {\n    Object({ 'toString': 0 } + '');\n  } catch(e) {\n    return function() { return false; };\n  }\n  return function(value) {\n    return typeof value.toString !== 'function' && typeof (value + '') === 'string';\n  };\n}());\n\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n}\n\nvar isArray = Array.isArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) === arrayTag;\n};\n\nfunction arraySome (array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction equalArrays(array, other, equalFunc, isLoose, stackA, stackB) {\n  var index = -1,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength !== othLength && !(isLoose && othLength > arrLength)) {\n    return false;\n  }\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index],\n        result;\n\n    if (result !== undefined) {\n      if (result) {\n        continue;\n      }\n      return false;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (isLoose) {\n      if (!arraySome(other, function(othValue) {\n            return arrValue === othValue || equalFunc(arrValue, othValue, isLoose, stackA, stackB);\n          })) {\n        return false;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, isLoose, stackA, stackB))) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction baseIsEqualDeep(object, other, equalFunc, isLoose, stackA, stackB) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = objToString.call(object);\n    if (objTag === argsTag) {\n      objTag = objectTag;\n    } else if (objTag !== objectTag) {\n      objIsArr = isTypedArray(object);\n    }\n  }\n  if (!othIsArr) {\n    othTag = objToString.call(other);\n    if (othTag === argsTag) {\n      othTag = objectTag;\n    }\n  }\n  var objIsObj = objTag === objectTag && !isHostObject(object),\n      othIsObj = othTag === objectTag && !isHostObject(other),\n      isSameTag = objTag === othTag;\n\n  if (isSameTag && !(objIsArr || objIsObj)) {\n    return equalByTag(object, other, objTag);\n  }\n  if (!isLoose) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, isLoose, stackA, stackB);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  // For more information on detecting circular references see https://es5.github.io/#JO.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] === object) {\n      return stackB[length] === other;\n    }\n  }\n  // Add `object` and `other` to the stack of traversed objects.\n  stackA.push(object);\n  stackB.push(other);\n\n  var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, isLoose, stackA, stackB);\n\n  stackA.pop();\n  stackB.pop();\n\n  return result;\n}\n\nfunction baseIsEqual(value, other, isLoose, stackA, stackB) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, isLoose, stackA, stackB);\n}\n\nvar isEqual = Rx.internals.isEqual = function (value, other) {\n  return baseIsEqual(value, other);\n};\n\n  var hasProp = {}.hasOwnProperty,\n      slice = Array.prototype.slice;\n\n  var inherits = Rx.internals.inherits = function (child, parent) {\n    function __() { this.constructor = child; }\n    __.prototype = parent.prototype;\n    child.prototype = new __();\n  };\n\n  var addProperties = Rx.internals.addProperties = function (obj) {\n    for(var sources = [], i = 1, len = arguments.length; i < len; i++) { sources.push(arguments[i]); }\n    for (var idx = 0, ln = sources.length; idx < ln; idx++) {\n      var source = sources[idx];\n      for (var prop in source) {\n        obj[prop] = source[prop];\n      }\n    }\n  };\n\n  // Rx Utils\n  var addRef = Rx.internals.addRef = function (xs, r) {\n    return new AnonymousObservable(function (observer) {\n      return new BinaryDisposable(r.getDisposable(), xs.subscribe(observer));\n    });\n  };\n\n  function arrayInitialize(count, factory) {\n    var a = new Array(count);\n    for (var i = 0; i < count; i++) {\n      a[i] = factory();\n    }\n    return a;\n  }\n\n  /**\n   * Represents a group of disposable resources that are disposed together.\n   * @constructor\n   */\n  var CompositeDisposable = Rx.CompositeDisposable = function () {\n    var args = [], i, len;\n    if (Array.isArray(arguments[0])) {\n      args = arguments[0];\n    } else {\n      len = arguments.length;\n      args = new Array(len);\n      for(i = 0; i < len; i++) { args[i] = arguments[i]; }\n    }\n    this.disposables = args;\n    this.isDisposed = false;\n    this.length = args.length;\n  };\n\n  var CompositeDisposablePrototype = CompositeDisposable.prototype;\n\n  /**\n   * Adds a disposable to the CompositeDisposable or disposes the disposable if the CompositeDisposable is disposed.\n   * @param {Mixed} item Disposable to add.\n   */\n  CompositeDisposablePrototype.add = function (item) {\n    if (this.isDisposed) {\n      item.dispose();\n    } else {\n      this.disposables.push(item);\n      this.length++;\n    }\n  };\n\n  /**\n   * Removes and disposes the first occurrence of a disposable from the CompositeDisposable.\n   * @param {Mixed} item Disposable to remove.\n   * @returns {Boolean} true if found; false otherwise.\n   */\n  CompositeDisposablePrototype.remove = function (item) {\n    var shouldDispose = false;\n    if (!this.isDisposed) {\n      var idx = this.disposables.indexOf(item);\n      if (idx !== -1) {\n        shouldDispose = true;\n        this.disposables.splice(idx, 1);\n        this.length--;\n        item.dispose();\n      }\n    }\n    return shouldDispose;\n  };\n\n  /**\n   *  Disposes all disposables in the group and removes them from the group.\n   */\n  CompositeDisposablePrototype.dispose = function () {\n    if (!this.isDisposed) {\n      this.isDisposed = true;\n      var len = this.disposables.length, currentDisposables = new Array(len);\n      for(var i = 0; i < len; i++) { currentDisposables[i] = this.disposables[i]; }\n      this.disposables = [];\n      this.length = 0;\n\n      for (i = 0; i < len; i++) {\n        currentDisposables[i].dispose();\n      }\n    }\n  };\n\n  /**\n   * Provides a set of static methods for creating Disposables.\n   * @param {Function} dispose Action to run during the first call to dispose. The action is guaranteed to be run at most once.\n   */\n  var Disposable = Rx.Disposable = function (action) {\n    this.isDisposed = false;\n    this.action = action || noop;\n  };\n\n  /** Performs the task of cleaning up resources. */\n  Disposable.prototype.dispose = function () {\n    if (!this.isDisposed) {\n      this.action();\n      this.isDisposed = true;\n    }\n  };\n\n  /**\n   * Creates a disposable object that invokes the specified action when disposed.\n   * @param {Function} dispose Action to run during the first call to dispose. The action is guaranteed to be run at most once.\n   * @return {Disposable} The disposable object that runs the given action upon disposal.\n   */\n  var disposableCreate = Disposable.create = function (action) { return new Disposable(action); };\n\n  /**\n   * Gets the disposable that does nothing when disposed.\n   */\n  var disposableEmpty = Disposable.empty = { dispose: noop };\n\n  /**\n   * Validates whether the given object is a disposable\n   * @param {Object} Object to test whether it has a dispose method\n   * @returns {Boolean} true if a disposable object, else false.\n   */\n  var isDisposable = Disposable.isDisposable = function (d) {\n    return d && isFunction(d.dispose);\n  };\n\n  var checkDisposed = Disposable.checkDisposed = function (disposable) {\n    if (disposable.isDisposed) { throw new ObjectDisposedError(); }\n  };\n\n  var disposableFixup = Disposable._fixup = function (result) {\n    return isDisposable(result) ? result : disposableEmpty;\n  };\n\n  // Single assignment\n  var SingleAssignmentDisposable = Rx.SingleAssignmentDisposable = function () {\n    this.isDisposed = false;\n    this.current = null;\n  };\n  SingleAssignmentDisposable.prototype.getDisposable = function () {\n    return this.current;\n  };\n  SingleAssignmentDisposable.prototype.setDisposable = function (value) {\n    if (this.current) { throw new Error('Disposable has already been assigned'); }\n    var shouldDispose = this.isDisposed;\n    !shouldDispose && (this.current = value);\n    shouldDispose && value && value.dispose();\n  };\n  SingleAssignmentDisposable.prototype.dispose = function () {\n    if (!this.isDisposed) {\n      this.isDisposed = true;\n      var old = this.current;\n      this.current = null;\n      old && old.dispose();\n    }\n  };\n\n  // Multiple assignment disposable\n  var SerialDisposable = Rx.SerialDisposable = function () {\n    this.isDisposed = false;\n    this.current = null;\n  };\n  SerialDisposable.prototype.getDisposable = function () {\n    return this.current;\n  };\n  SerialDisposable.prototype.setDisposable = function (value) {\n    var shouldDispose = this.isDisposed;\n    if (!shouldDispose) {\n      var old = this.current;\n      this.current = value;\n    }\n    old && old.dispose();\n    shouldDispose && value && value.dispose();\n  };\n  SerialDisposable.prototype.dispose = function () {\n    if (!this.isDisposed) {\n      this.isDisposed = true;\n      var old = this.current;\n      this.current = null;\n    }\n    old && old.dispose();\n  };\n\n  var BinaryDisposable = Rx.BinaryDisposable = function (first, second) {\n    this._first = first;\n    this._second = second;\n    this.isDisposed = false;\n  };\n\n  BinaryDisposable.prototype.dispose = function () {\n    if (!this.isDisposed) {\n      this.isDisposed = true;\n      var old1 = this._first;\n      this._first = null;\n      old1 && old1.dispose();\n      var old2 = this._second;\n      this._second = null;\n      old2 && old2.dispose();\n    }\n  };\n\n  var NAryDisposable = Rx.NAryDisposable = function (disposables) {\n    this._disposables = disposables;\n    this.isDisposed = false;\n  };\n\n  NAryDisposable.prototype.dispose = function () {\n    if (!this.isDisposed) {\n      this.isDisposed = true;\n      for (var i = 0, len = this._disposables.length; i < len; i++) {\n        this._disposables[i].dispose();\n      }\n      this._disposables.length = 0;\n    }\n  };\n\n  /**\n   * Represents a disposable resource that only disposes its underlying disposable resource when all dependent disposable objects have been disposed.\n   */\n  var RefCountDisposable = Rx.RefCountDisposable = (function () {\n\n    function InnerDisposable(disposable) {\n      this.disposable = disposable;\n      this.disposable.count++;\n      this.isInnerDisposed = false;\n    }\n\n    InnerDisposable.prototype.dispose = function () {\n      if (!this.disposable.isDisposed && !this.isInnerDisposed) {\n        this.isInnerDisposed = true;\n        this.disposable.count--;\n        if (this.disposable.count === 0 && this.disposable.isPrimaryDisposed) {\n          this.disposable.isDisposed = true;\n          this.disposable.underlyingDisposable.dispose();\n        }\n      }\n    };\n\n    /**\n     * Initializes a new instance of the RefCountDisposable with the specified disposable.\n     * @constructor\n     * @param {Disposable} disposable Underlying disposable.\n      */\n    function RefCountDisposable(disposable) {\n      this.underlyingDisposable = disposable;\n      this.isDisposed = false;\n      this.isPrimaryDisposed = false;\n      this.count = 0;\n    }\n\n    /**\n     * Disposes the underlying disposable only when all dependent disposables have been disposed\n     */\n    RefCountDisposable.prototype.dispose = function () {\n      if (!this.isDisposed && !this.isPrimaryDisposed) {\n        this.isPrimaryDisposed = true;\n        if (this.count === 0) {\n          this.isDisposed = true;\n          this.underlyingDisposable.dispose();\n        }\n      }\n    };\n\n    /**\n     * Returns a dependent disposable that when disposed decreases the refcount on the underlying disposable.\n     * @returns {Disposable} A dependent disposable contributing to the reference count that manages the underlying disposable's lifetime.\n     */\n    RefCountDisposable.prototype.getDisposable = function () {\n      return this.isDisposed ? disposableEmpty : new InnerDisposable(this);\n    };\n\n    return RefCountDisposable;\n  })();\n\n  var ScheduledItem = Rx.internals.ScheduledItem = function (scheduler, state, action, dueTime, comparer) {\n    this.scheduler = scheduler;\n    this.state = state;\n    this.action = action;\n    this.dueTime = dueTime;\n    this.comparer = comparer || defaultSubComparer;\n    this.disposable = new SingleAssignmentDisposable();\n  };\n\n  ScheduledItem.prototype.invoke = function () {\n    this.disposable.setDisposable(this.invokeCore());\n  };\n\n  ScheduledItem.prototype.compareTo = function (other) {\n    return this.comparer(this.dueTime, other.dueTime);\n  };\n\n  ScheduledItem.prototype.isCancelled = function () {\n    return this.disposable.isDisposed;\n  };\n\n  ScheduledItem.prototype.invokeCore = function () {\n    return disposableFixup(this.action(this.scheduler, this.state));\n  };\n\n  /** Provides a set of static properties to access commonly used schedulers. */\n  var Scheduler = Rx.Scheduler = (function () {\n\n    function Scheduler() { }\n\n    /** Determines whether the given object is a scheduler */\n    Scheduler.isScheduler = function (s) {\n      return s instanceof Scheduler;\n    };\n\n    var schedulerProto = Scheduler.prototype;\n\n    /**\n   * Schedules an action to be executed.\n   * @param state State passed to the action to be executed.\n   * @param {Function} action Action to be executed.\n   * @returns {Disposable} The disposable object used to cancel the scheduled action (best effort).\n   */\n    schedulerProto.schedule = function (state, action) {\n      throw new NotImplementedError();\n    };\n\n  /**\n   * Schedules an action to be executed after dueTime.\n   * @param state State passed to the action to be executed.\n   * @param {Function} action Action to be executed.\n   * @param {Number} dueTime Relative time after which to execute the action.\n   * @returns {Disposable} The disposable object used to cancel the scheduled action (best effort).\n   */\n    schedulerProto.scheduleFuture = function (state, dueTime, action) {\n      var dt = dueTime;\n      dt instanceof Date && (dt = dt - this.now());\n      dt = Scheduler.normalize(dt);\n\n      if (dt === 0) { return this.schedule(state, action); }\n\n      return this._scheduleFuture(state, dt, action);\n    };\n\n    schedulerProto._scheduleFuture = function (state, dueTime, action) {\n      throw new NotImplementedError();\n    };\n\n    /** Gets the current time according to the local machine's system clock. */\n    Scheduler.now = defaultNow;\n\n    /** Gets the current time according to the local machine's system clock. */\n    Scheduler.prototype.now = defaultNow;\n\n    /**\n     * Normalizes the specified TimeSpan value to a positive value.\n     * @param {Number} timeSpan The time span value to normalize.\n     * @returns {Number} The specified TimeSpan value if it is zero or positive; otherwise, 0\n     */\n    Scheduler.normalize = function (timeSpan) {\n      timeSpan < 0 && (timeSpan = 0);\n      return timeSpan;\n    };\n\n    return Scheduler;\n  }());\n\n  var normalizeTime = Scheduler.normalize, isScheduler = Scheduler.isScheduler;\n\n  (function (schedulerProto) {\n\n    function invokeRecImmediate(scheduler, pair) {\n      var state = pair[0], action = pair[1], group = new CompositeDisposable();\n      action(state, innerAction);\n      return group;\n\n      function innerAction(state2) {\n        var isAdded = false, isDone = false;\n\n        var d = scheduler.schedule(state2, scheduleWork);\n        if (!isDone) {\n          group.add(d);\n          isAdded = true;\n        }\n\n        function scheduleWork(_, state3) {\n          if (isAdded) {\n            group.remove(d);\n          } else {\n            isDone = true;\n          }\n          action(state3, innerAction);\n          return disposableEmpty;\n        }\n      }\n    }\n\n    function invokeRecDate(scheduler, pair) {\n      var state = pair[0], action = pair[1], group = new CompositeDisposable();\n      action(state, innerAction);\n      return group;\n\n      function innerAction(state2, dueTime1) {\n        var isAdded = false, isDone = false;\n\n        var d = scheduler.scheduleFuture(state2, dueTime1, scheduleWork);\n        if (!isDone) {\n          group.add(d);\n          isAdded = true;\n        }\n\n        function scheduleWork(_, state3) {\n          if (isAdded) {\n            group.remove(d);\n          } else {\n            isDone = true;\n          }\n          action(state3, innerAction);\n          return disposableEmpty;\n        }\n      }\n    }\n\n    /**\n     * Schedules an action to be executed recursively.\n     * @param {Mixed} state State passed to the action to be executed.\n     * @param {Function} action Action to execute recursively. The last parameter passed to the action is used to trigger recursive scheduling of the action, passing in recursive invocation state.\n     * @returns {Disposable} The disposable object used to cancel the scheduled action (best effort).\n     */\n    schedulerProto.scheduleRecursive = function (state, action) {\n      return this.schedule([state, action], invokeRecImmediate);\n    };\n\n    /**\n     * Schedules an action to be executed recursively after a specified relative or absolute due time.\n     * @param {Mixed} state State passed to the action to be executed.\n     * @param {Function} action Action to execute recursively. The last parameter passed to the action is used to trigger recursive scheduling of the action, passing in the recursive due time and invocation state.\n     * @param {Number | Date} dueTime Relative or absolute time after which to execute the action for the first time.\n     * @returns {Disposable} The disposable object used to cancel the scheduled action (best effort).\n     */\n    schedulerProto.scheduleRecursiveFuture = function (state, dueTime, action) {\n      return this.scheduleFuture([state, action], dueTime, invokeRecDate);\n    };\n\n  }(Scheduler.prototype));\n\n  (function (schedulerProto) {\n\n    /**\n     * Schedules a periodic piece of work by dynamically discovering the scheduler's capabilities. The periodic task will be scheduled using window.setInterval for the base implementation.\n     * @param {Mixed} state Initial state passed to the action upon the first iteration.\n     * @param {Number} period Period for running the work periodically.\n     * @param {Function} action Action to be executed, potentially updating the state.\n     * @returns {Disposable} The disposable object used to cancel the scheduled recurring action (best effort).\n     */\n    schedulerProto.schedulePeriodic = function(state, period, action) {\n      if (typeof root.setInterval === 'undefined') { throw new NotSupportedError(); }\n      period = normalizeTime(period);\n      var s = state, id = root.setInterval(function () { s = action(s); }, period);\n      return disposableCreate(function () { root.clearInterval(id); });\n    };\n\n  }(Scheduler.prototype));\n\n  /** Gets a scheduler that schedules work immediately on the current thread. */\n   var ImmediateScheduler = (function (__super__) {\n    inherits(ImmediateScheduler, __super__);\n    function ImmediateScheduler() {\n      __super__.call(this);\n    }\n\n    ImmediateScheduler.prototype.schedule = function (state, action) {\n      return disposableFixup(action(this, state));\n    };\n\n    return ImmediateScheduler;\n  }(Scheduler));\n\n  var immediateScheduler = Scheduler.immediate = new ImmediateScheduler();\n\n  /**\n   * Gets a scheduler that schedules work as soon as possible on the current thread.\n   */\n  var CurrentThreadScheduler = (function (__super__) {\n    var queue;\n\n    function runTrampoline () {\n      while (queue.length > 0) {\n        var item = queue.dequeue();\n        !item.isCancelled() && item.invoke();\n      }\n    }\n\n    inherits(CurrentThreadScheduler, __super__);\n    function CurrentThreadScheduler() {\n      __super__.call(this);\n    }\n\n    CurrentThreadScheduler.prototype.schedule = function (state, action) {\n      var si = new ScheduledItem(this, state, action, this.now());\n\n      if (!queue) {\n        queue = new PriorityQueue(4);\n        queue.enqueue(si);\n\n        var result = tryCatch(runTrampoline)();\n        queue = null;\n        if (result === errorObj) { thrower(result.e); }\n      } else {\n        queue.enqueue(si);\n      }\n      return si.disposable;\n    };\n\n    CurrentThreadScheduler.prototype.scheduleRequired = function () { return !queue; };\n\n    return CurrentThreadScheduler;\n  }(Scheduler));\n\n  var currentThreadScheduler = Scheduler.currentThread = new CurrentThreadScheduler();\n\n  var SchedulePeriodicRecursive = Rx.internals.SchedulePeriodicRecursive = (function () {\n    function createTick(self) {\n      return function tick(command, recurse) {\n        recurse(0, self._period);\n        var state = tryCatch(self._action)(self._state);\n        if (state === errorObj) {\n          self._cancel.dispose();\n          thrower(state.e);\n        }\n        self._state = state;\n      };\n    }\n\n    function SchedulePeriodicRecursive(scheduler, state, period, action) {\n      this._scheduler = scheduler;\n      this._state = state;\n      this._period = period;\n      this._action = action;\n    }\n\n    SchedulePeriodicRecursive.prototype.start = function () {\n      var d = new SingleAssignmentDisposable();\n      this._cancel = d;\n      d.setDisposable(this._scheduler.scheduleRecursiveFuture(0, this._period, createTick(this)));\n\n      return d;\n    };\n\n    return SchedulePeriodicRecursive;\n  }());\n\n  var scheduleMethod, clearMethod;\n\n  var localTimer = (function () {\n    var localSetTimeout, localClearTimeout = noop;\n    if (!!root.setTimeout) {\n      localSetTimeout = root.setTimeout;\n      localClearTimeout = root.clearTimeout;\n    } else if (!!root.WScript) {\n      localSetTimeout = function (fn, time) {\n        root.WScript.Sleep(time);\n        fn();\n      };\n    } else {\n      throw new NotSupportedError();\n    }\n\n    return {\n      setTimeout: localSetTimeout,\n      clearTimeout: localClearTimeout\n    };\n  }());\n  var localSetTimeout = localTimer.setTimeout,\n    localClearTimeout = localTimer.clearTimeout;\n\n  (function () {\n\n    var nextHandle = 1, tasksByHandle = {}, currentlyRunning = false;\n\n    clearMethod = function (handle) {\n      delete tasksByHandle[handle];\n    };\n\n    function runTask(handle) {\n      if (currentlyRunning) {\n        localSetTimeout(function () { runTask(handle); }, 0);\n      } else {\n        var task = tasksByHandle[handle];\n        if (task) {\n          currentlyRunning = true;\n          var result = tryCatch(task)();\n          clearMethod(handle);\n          currentlyRunning = false;\n          if (result === errorObj) { thrower(result.e); }\n        }\n      }\n    }\n\n    var reNative = new RegExp('^' +\n      String(toString)\n        .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n        .replace(/toString| for [^\\]]+/g, '.*?') + '$'\n    );\n\n    var setImmediate = typeof (setImmediate = freeGlobal && moduleExports && freeGlobal.setImmediate) == 'function' &&\n      !reNative.test(setImmediate) && setImmediate;\n\n    function postMessageSupported () {\n      // Ensure not in a worker\n      if (!root.postMessage || root.importScripts) { return false; }\n      var isAsync = false, oldHandler = root.onmessage;\n      // Test for async\n      root.onmessage = function () { isAsync = true; };\n      root.postMessage('', '*');\n      root.onmessage = oldHandler;\n\n      return isAsync;\n    }\n\n    // Use in order, setImmediate, nextTick, postMessage, MessageChannel, script readystatechanged, setTimeout\n    if (isFunction(setImmediate)) {\n      scheduleMethod = function (action) {\n        var id = nextHandle++;\n        tasksByHandle[id] = action;\n        setImmediate(function () { runTask(id); });\n\n        return id;\n      };\n    } else if (typeof process !== 'undefined' && {}.toString.call(process) === '[object process]') {\n      scheduleMethod = function (action) {\n        var id = nextHandle++;\n        tasksByHandle[id] = action;\n        process.nextTick(function () { runTask(id); });\n\n        return id;\n      };\n    } else if (postMessageSupported()) {\n      var MSG_PREFIX = 'ms.rx.schedule' + Math.random();\n\n      var onGlobalPostMessage = function (event) {\n        // Only if we're a match to avoid any other global events\n        if (typeof event.data === 'string' && event.data.substring(0, MSG_PREFIX.length) === MSG_PREFIX) {\n          runTask(event.data.substring(MSG_PREFIX.length));\n        }\n      };\n\n      root.addEventListener('message', onGlobalPostMessage, false);\n\n      scheduleMethod = function (action) {\n        var id = nextHandle++;\n        tasksByHandle[id] = action;\n        root.postMessage(MSG_PREFIX + id, '*');\n        return id;\n      };\n    } else if (!!root.MessageChannel) {\n      var channel = new root.MessageChannel();\n\n      channel.port1.onmessage = function (e) { runTask(e.data); };\n\n      scheduleMethod = function (action) {\n        var id = nextHandle++;\n        tasksByHandle[id] = action;\n        channel.port2.postMessage(id);\n        return id;\n      };\n    } else if ('document' in root && 'onreadystatechange' in root.document.createElement('script')) {\n\n      scheduleMethod = function (action) {\n        var scriptElement = root.document.createElement('script');\n        var id = nextHandle++;\n        tasksByHandle[id] = action;\n\n        scriptElement.onreadystatechange = function () {\n          runTask(id);\n          scriptElement.onreadystatechange = null;\n          scriptElement.parentNode.removeChild(scriptElement);\n          scriptElement = null;\n        };\n        root.document.documentElement.appendChild(scriptElement);\n        return id;\n      };\n\n    } else {\n      scheduleMethod = function (action) {\n        var id = nextHandle++;\n        tasksByHandle[id] = action;\n        localSetTimeout(function () {\n          runTask(id);\n        }, 0);\n\n        return id;\n      };\n    }\n  }());\n\n  /**\n   * Gets a scheduler that schedules work via a timed callback based upon platform.\n   */\n   var DefaultScheduler = (function (__super__) {\n     inherits(DefaultScheduler, __super__);\n     function DefaultScheduler() {\n       __super__.call(this);\n     }\n\n     function scheduleAction(disposable, action, scheduler, state) {\n       return function schedule() {\n         disposable.setDisposable(Disposable._fixup(action(scheduler, state)));\n       };\n     }\n\n     function ClearDisposable(id) {\n       this._id = id;\n       this.isDisposed = false;\n     }\n\n     ClearDisposable.prototype.dispose = function () {\n       if (!this.isDisposed) {\n         this.isDisposed = true;\n         clearMethod(this._id);\n       }\n     };\n\n     function LocalClearDisposable(id) {\n       this._id = id;\n       this.isDisposed = false;\n     }\n\n     LocalClearDisposable.prototype.dispose = function () {\n       if (!this.isDisposed) {\n         this.isDisposed = true;\n         localClearTimeout(this._id);\n       }\n     };\n\n    DefaultScheduler.prototype.schedule = function (state, action) {\n      var disposable = new SingleAssignmentDisposable(),\n          id = scheduleMethod(scheduleAction(disposable, action, this, state));\n      return new BinaryDisposable(disposable, new ClearDisposable(id));\n    };\n\n    DefaultScheduler.prototype._scheduleFuture = function (state, dueTime, action) {\n      if (dueTime === 0) { return this.schedule(state, action); }\n      var disposable = new SingleAssignmentDisposable(),\n          id = localSetTimeout(scheduleAction(disposable, action, this, state), dueTime);\n      return new BinaryDisposable(disposable, new LocalClearDisposable(id));\n    };\n\n    return DefaultScheduler;\n  }(Scheduler));\n\n  var defaultScheduler = Scheduler['default'] = Scheduler.async = new DefaultScheduler();\n\n  function IndexedItem(id, value) {\n    this.id = id;\n    this.value = value;\n  }\n\n  IndexedItem.prototype.compareTo = function (other) {\n    var c = this.value.compareTo(other.value);\n    c === 0 && (c = this.id - other.id);\n    return c;\n  };\n\n  var PriorityQueue = Rx.internals.PriorityQueue = function (capacity) {\n    this.items = new Array(capacity);\n    this.length = 0;\n  };\n\n  var priorityProto = PriorityQueue.prototype;\n  priorityProto.isHigherPriority = function (left, right) {\n    return this.items[left].compareTo(this.items[right]) < 0;\n  };\n\n  priorityProto.percolate = function (index) {\n    if (index >= this.length || index < 0) { return; }\n    var parent = index - 1 >> 1;\n    if (parent < 0 || parent === index) { return; }\n    if (this.isHigherPriority(index, parent)) {\n      var temp = this.items[index];\n      this.items[index] = this.items[parent];\n      this.items[parent] = temp;\n      this.percolate(parent);\n    }\n  };\n\n  priorityProto.heapify = function (index) {\n    +index || (index = 0);\n    if (index >= this.length || index < 0) { return; }\n    var left = 2 * index + 1,\n        right = 2 * index + 2,\n        first = index;\n    if (left < this.length && this.isHigherPriority(left, first)) {\n      first = left;\n    }\n    if (right < this.length && this.isHigherPriority(right, first)) {\n      first = right;\n    }\n    if (first !== index) {\n      var temp = this.items[index];\n      this.items[index] = this.items[first];\n      this.items[first] = temp;\n      this.heapify(first);\n    }\n  };\n\n  priorityProto.peek = function () { return this.items[0].value; };\n\n  priorityProto.removeAt = function (index) {\n    this.items[index] = this.items[--this.length];\n    this.items[this.length] = undefined;\n    this.heapify();\n  };\n\n  priorityProto.dequeue = function () {\n    var result = this.peek();\n    this.removeAt(0);\n    return result;\n  };\n\n  priorityProto.enqueue = function (item) {\n    var index = this.length++;\n    this.items[index] = new IndexedItem(PriorityQueue.count++, item);\n    this.percolate(index);\n  };\n\n  priorityProto.remove = function (item) {\n    for (var i = 0; i < this.length; i++) {\n      if (this.items[i].value === item) {\n        this.removeAt(i);\n        return true;\n      }\n    }\n    return false;\n  };\n  PriorityQueue.count = 0;\n\n  /**\n   *  Represents a notification to an observer.\n   */\n  var Notification = Rx.Notification = (function () {\n    function Notification() {\n\n    }\n\n    Notification.prototype._accept = function (onNext, onError, onCompleted) {\n      throw new NotImplementedError();\n    };\n\n    Notification.prototype._acceptObserver = function (onNext, onError, onCompleted) {\n      throw new NotImplementedError();\n    };\n\n    /**\n     * Invokes the delegate corresponding to the notification or the observer's method corresponding to the notification and returns the produced result.\n     * @param {Function | Observer} observerOrOnNext Function to invoke for an OnNext notification or Observer to invoke the notification on..\n     * @param {Function} onError Function to invoke for an OnError notification.\n     * @param {Function} onCompleted Function to invoke for an OnCompleted notification.\n     * @returns {Any} Result produced by the observation.\n     */\n    Notification.prototype.accept = function (observerOrOnNext, onError, onCompleted) {\n      return observerOrOnNext && typeof observerOrOnNext === 'object' ?\n        this._acceptObserver(observerOrOnNext) :\n        this._accept(observerOrOnNext, onError, onCompleted);\n    };\n\n    /**\n     * Returns an observable sequence with a single notification.\n     *\n     * @memberOf Notifications\n     * @param {Scheduler} [scheduler] Scheduler to send out the notification calls on.\n     * @returns {Observable} The observable sequence that surfaces the behavior of the notification upon subscription.\n     */\n    Notification.prototype.toObservable = function (scheduler) {\n      var self = this;\n      isScheduler(scheduler) || (scheduler = immediateScheduler);\n      return new AnonymousObservable(function (o) {\n        return scheduler.schedule(self, function (_, notification) {\n          notification._acceptObserver(o);\n          notification.kind === 'N' && o.onCompleted();\n        });\n      });\n    };\n\n    return Notification;\n  })();\n\n  var OnNextNotification = (function (__super__) {\n    inherits(OnNextNotification, __super__);\n    function OnNextNotification(value) {\n      this.value = value;\n      this.kind = 'N';\n    }\n\n    OnNextNotification.prototype._accept = function (onNext) {\n      return onNext(this.value);\n    };\n\n    OnNextNotification.prototype._acceptObserver = function (o) {\n      return o.onNext(this.value);\n    };\n\n    OnNextNotification.prototype.toString = function () {\n      return 'OnNext(' + this.value + ')';\n    };\n\n    return OnNextNotification;\n  }(Notification));\n\n  var OnErrorNotification = (function (__super__) {\n    inherits(OnErrorNotification, __super__);\n    function OnErrorNotification(error) {\n      this.error = error;\n      this.kind = 'E';\n    }\n\n    OnErrorNotification.prototype._accept = function (onNext, onError) {\n      return onError(this.error);\n    };\n\n    OnErrorNotification.prototype._acceptObserver = function (o) {\n      return o.onError(this.error);\n    };\n\n    OnErrorNotification.prototype.toString = function () {\n      return 'OnError(' + this.error + ')';\n    };\n\n    return OnErrorNotification;\n  }(Notification));\n\n  var OnCompletedNotification = (function (__super__) {\n    inherits(OnCompletedNotification, __super__);\n    function OnCompletedNotification() {\n      this.kind = 'C';\n    }\n\n    OnCompletedNotification.prototype._accept = function (onNext, onError, onCompleted) {\n      return onCompleted();\n    };\n\n    OnCompletedNotification.prototype._acceptObserver = function (o) {\n      return o.onCompleted();\n    };\n\n    OnCompletedNotification.prototype.toString = function () {\n      return 'OnCompleted()';\n    };\n\n    return OnCompletedNotification;\n  }(Notification));\n\n  /**\n   * Creates an object that represents an OnNext notification to an observer.\n   * @param {Any} value The value contained in the notification.\n   * @returns {Notification} The OnNext notification containing the value.\n   */\n  var notificationCreateOnNext = Notification.createOnNext = function (value) {\n    return new OnNextNotification(value);\n  };\n\n  /**\n   * Creates an object that represents an OnError notification to an observer.\n   * @param {Any} error The exception contained in the notification.\n   * @returns {Notification} The OnError notification containing the exception.\n   */\n  var notificationCreateOnError = Notification.createOnError = function (error) {\n    return new OnErrorNotification(error);\n  };\n\n  /**\n   * Creates an object that represents an OnCompleted notification to an observer.\n   * @returns {Notification} The OnCompleted notification.\n   */\n  var notificationCreateOnCompleted = Notification.createOnCompleted = function () {\n    return new OnCompletedNotification();\n  };\n\n  /**\n   * Supports push-style iteration over an observable sequence.\n   */\n  var Observer = Rx.Observer = function () { };\n\n  /**\n   *  Creates an observer from the specified OnNext, along with optional OnError, and OnCompleted actions.\n   * @param {Function} [onNext] Observer's OnNext action implementation.\n   * @param {Function} [onError] Observer's OnError action implementation.\n   * @param {Function} [onCompleted] Observer's OnCompleted action implementation.\n   * @returns {Observer} The observer object implemented using the given actions.\n   */\n  var observerCreate = Observer.create = function (onNext, onError, onCompleted) {\n    onNext || (onNext = noop);\n    onError || (onError = defaultError);\n    onCompleted || (onCompleted = noop);\n    return new AnonymousObserver(onNext, onError, onCompleted);\n  };\n\n  /**\n   * Abstract base class for implementations of the Observer class.\n   * This base class enforces the grammar of observers where OnError and OnCompleted are terminal messages.\n   */\n  var AbstractObserver = Rx.internals.AbstractObserver = (function (__super__) {\n    inherits(AbstractObserver, __super__);\n\n    /**\n     * Creates a new observer in a non-stopped state.\n     */\n    function AbstractObserver() {\n      this.isStopped = false;\n    }\n\n    // Must be implemented by other observers\n    AbstractObserver.prototype.next = notImplemented;\n    AbstractObserver.prototype.error = notImplemented;\n    AbstractObserver.prototype.completed = notImplemented;\n\n    /**\n     * Notifies the observer of a new element in the sequence.\n     * @param {Any} value Next element in the sequence.\n     */\n    AbstractObserver.prototype.onNext = function (value) {\n      !this.isStopped && this.next(value);\n    };\n\n    /**\n     * Notifies the observer that an exception has occurred.\n     * @param {Any} error The error that has occurred.\n     */\n    AbstractObserver.prototype.onError = function (error) {\n      if (!this.isStopped) {\n        this.isStopped = true;\n        this.error(error);\n      }\n    };\n\n    /**\n     * Notifies the observer of the end of the sequence.\n     */\n    AbstractObserver.prototype.onCompleted = function () {\n      if (!this.isStopped) {\n        this.isStopped = true;\n        this.completed();\n      }\n    };\n\n    /**\n     * Disposes the observer, causing it to transition to the stopped state.\n     */\n    AbstractObserver.prototype.dispose = function () { this.isStopped = true; };\n\n    AbstractObserver.prototype.fail = function (e) {\n      if (!this.isStopped) {\n        this.isStopped = true;\n        this.error(e);\n        return true;\n      }\n\n      return false;\n    };\n\n    return AbstractObserver;\n  }(Observer));\n\n  /**\n   * Class to create an Observer instance from delegate-based implementations of the on* methods.\n   */\n  var AnonymousObserver = Rx.AnonymousObserver = (function (__super__) {\n    inherits(AnonymousObserver, __super__);\n\n    /**\n     * Creates an observer from the specified OnNext, OnError, and OnCompleted actions.\n     * @param {Any} onNext Observer's OnNext action implementation.\n     * @param {Any} onError Observer's OnError action implementation.\n     * @param {Any} onCompleted Observer's OnCompleted action implementation.\n     */\n    function AnonymousObserver(onNext, onError, onCompleted) {\n      __super__.call(this);\n      this._onNext = onNext;\n      this._onError = onError;\n      this._onCompleted = onCompleted;\n    }\n\n    /**\n     * Calls the onNext action.\n     * @param {Any} value Next element in the sequence.\n     */\n    AnonymousObserver.prototype.next = function (value) {\n      this._onNext(value);\n    };\n\n    /**\n     * Calls the onError action.\n     * @param {Any} error The error that has occurred.\n     */\n    AnonymousObserver.prototype.error = function (error) {\n      this._onError(error);\n    };\n\n    /**\n     *  Calls the onCompleted action.\n     */\n    AnonymousObserver.prototype.completed = function () {\n      this._onCompleted();\n    };\n\n    return AnonymousObserver;\n  }(AbstractObserver));\n\n  var observableProto;\n\n  /**\n   * Represents a push-style collection.\n   */\n  var Observable = Rx.Observable = (function () {\n\n    function makeSubscribe(self, subscribe) {\n      return function (o) {\n        var oldOnError = o.onError;\n        o.onError = function (e) {\n          makeStackTraceLong(e, self);\n          oldOnError.call(o, e);\n        };\n\n        return subscribe.call(self, o);\n      };\n    }\n\n    function Observable() {\n      if (Rx.config.longStackSupport && hasStacks) {\n        var oldSubscribe = this._subscribe;\n        var e = tryCatch(thrower)(new Error()).e;\n        this.stack = e.stack.substring(e.stack.indexOf('\\n') + 1);\n        this._subscribe = makeSubscribe(this, oldSubscribe);\n      }\n    }\n\n    observableProto = Observable.prototype;\n\n    /**\n    * Determines whether the given object is an Observable\n    * @param {Any} An object to determine whether it is an Observable\n    * @returns {Boolean} true if an Observable, else false.\n    */\n    Observable.isObservable = function (o) {\n      return o && isFunction(o.subscribe);\n    };\n\n    /**\n     *  Subscribes an o to the observable sequence.\n     *  @param {Mixed} [oOrOnNext] The object that is to receive notifications or an action to invoke for each element in the observable sequence.\n     *  @param {Function} [onError] Action to invoke upon exceptional termination of the observable sequence.\n     *  @param {Function} [onCompleted] Action to invoke upon graceful termination of the observable sequence.\n     *  @returns {Diposable} A disposable handling the subscriptions and unsubscriptions.\n     */\n    observableProto.subscribe = observableProto.forEach = function (oOrOnNext, onError, onCompleted) {\n      return this._subscribe(typeof oOrOnNext === 'object' ?\n        oOrOnNext :\n        observerCreate(oOrOnNext, onError, onCompleted));\n    };\n\n    /**\n     * Subscribes to the next value in the sequence with an optional \"this\" argument.\n     * @param {Function} onNext The function to invoke on each element in the observable sequence.\n     * @param {Any} [thisArg] Object to use as this when executing callback.\n     * @returns {Disposable} A disposable handling the subscriptions and unsubscriptions.\n     */\n    observableProto.subscribeOnNext = function (onNext, thisArg) {\n      return this._subscribe(observerCreate(typeof thisArg !== 'undefined' ? function(x) { onNext.call(thisArg, x); } : onNext));\n    };\n\n    /**\n     * Subscribes to an exceptional condition in the sequence with an optional \"this\" argument.\n     * @param {Function} onError The function to invoke upon exceptional termination of the observable sequence.\n     * @param {Any} [thisArg] Object to use as this when executing callback.\n     * @returns {Disposable} A disposable handling the subscriptions and unsubscriptions.\n     */\n    observableProto.subscribeOnError = function (onError, thisArg) {\n      return this._subscribe(observerCreate(null, typeof thisArg !== 'undefined' ? function(e) { onError.call(thisArg, e); } : onError));\n    };\n\n    /**\n     * Subscribes to the next value in the sequence with an optional \"this\" argument.\n     * @param {Function} onCompleted The function to invoke upon graceful termination of the observable sequence.\n     * @param {Any} [thisArg] Object to use as this when executing callback.\n     * @returns {Disposable} A disposable handling the subscriptions and unsubscriptions.\n     */\n    observableProto.subscribeOnCompleted = function (onCompleted, thisArg) {\n      return this._subscribe(observerCreate(null, null, typeof thisArg !== 'undefined' ? function() { onCompleted.call(thisArg); } : onCompleted));\n    };\n\n    return Observable;\n  })();\n\n  var ScheduledObserver = Rx.internals.ScheduledObserver = (function (__super__) {\n    inherits(ScheduledObserver, __super__);\n\n    function ScheduledObserver(scheduler, observer) {\n      __super__.call(this);\n      this.scheduler = scheduler;\n      this.observer = observer;\n      this.isAcquired = false;\n      this.hasFaulted = false;\n      this.queue = [];\n      this.disposable = new SerialDisposable();\n    }\n\n    function enqueueNext(observer, x) { return function () { observer.onNext(x); }; }\n    function enqueueError(observer, e) { return function () { observer.onError(e); }; }\n    function enqueueCompleted(observer) { return function () { observer.onCompleted(); }; }\n\n    ScheduledObserver.prototype.next = function (x) {\n      this.queue.push(enqueueNext(this.observer, x));\n    };\n\n    ScheduledObserver.prototype.error = function (e) {\n      this.queue.push(enqueueError(this.observer, e));\n    };\n\n    ScheduledObserver.prototype.completed = function () {\n      this.queue.push(enqueueCompleted(this.observer));\n    };\n\n\n    function scheduleMethod(state, recurse) {\n      var work;\n      if (state.queue.length > 0) {\n        work = state.queue.shift();\n      } else {\n        state.isAcquired = false;\n        return;\n      }\n      var res = tryCatch(work)();\n      if (res === errorObj) {\n        state.queue = [];\n        state.hasFaulted = true;\n        return thrower(res.e);\n      }\n      recurse(state);\n    }\n\n    ScheduledObserver.prototype.ensureActive = function () {\n      var isOwner = false;\n      if (!this.hasFaulted && this.queue.length > 0) {\n        isOwner = !this.isAcquired;\n        this.isAcquired = true;\n      }\n      isOwner &&\n        this.disposable.setDisposable(this.scheduler.scheduleRecursive(this, scheduleMethod));\n    };\n\n    ScheduledObserver.prototype.dispose = function () {\n      __super__.prototype.dispose.call(this);\n      this.disposable.dispose();\n    };\n\n    return ScheduledObserver;\n  }(AbstractObserver));\n\n  var ObservableBase = Rx.ObservableBase = (function (__super__) {\n    inherits(ObservableBase, __super__);\n\n    function fixSubscriber(subscriber) {\n      return subscriber && isFunction(subscriber.dispose) ? subscriber :\n        isFunction(subscriber) ? disposableCreate(subscriber) : disposableEmpty;\n    }\n\n    function setDisposable(s, state) {\n      var ado = state[0], self = state[1];\n      var sub = tryCatch(self.subscribeCore).call(self, ado);\n      if (sub === errorObj && !ado.fail(errorObj.e)) { thrower(errorObj.e); }\n      ado.setDisposable(fixSubscriber(sub));\n    }\n\n    function ObservableBase() {\n      __super__.call(this);\n    }\n\n    ObservableBase.prototype._subscribe = function (o) {\n      var ado = new AutoDetachObserver(o), state = [ado, this];\n\n      if (currentThreadScheduler.scheduleRequired()) {\n        currentThreadScheduler.schedule(state, setDisposable);\n      } else {\n        setDisposable(null, state);\n      }\n      return ado;\n    };\n\n    ObservableBase.prototype.subscribeCore = notImplemented;\n\n    return ObservableBase;\n  }(Observable));\n\nvar FlatMapObservable = Rx.FlatMapObservable = (function(__super__) {\n\n    inherits(FlatMapObservable, __super__);\n\n    function FlatMapObservable(source, selector, resultSelector, thisArg) {\n      this.resultSelector = isFunction(resultSelector) ? resultSelector : null;\n      this.selector = bindCallback(isFunction(selector) ? selector : function() { return selector; }, thisArg, 3);\n      this.source = source;\n      __super__.call(this);\n    }\n\n    FlatMapObservable.prototype.subscribeCore = function(o) {\n      return this.source.subscribe(new InnerObserver(o, this.selector, this.resultSelector, this));\n    };\n\n    inherits(InnerObserver, AbstractObserver);\n    function InnerObserver(observer, selector, resultSelector, source) {\n      this.i = 0;\n      this.selector = selector;\n      this.resultSelector = resultSelector;\n      this.source = source;\n      this.o = observer;\n      AbstractObserver.call(this);\n    }\n\n    InnerObserver.prototype._wrapResult = function(result, x, i) {\n      return this.resultSelector ?\n        result.map(function(y, i2) { return this.resultSelector(x, y, i, i2); }, this) :\n        result;\n    };\n\n    InnerObserver.prototype.next = function(x) {\n      var i = this.i++;\n      var result = tryCatch(this.selector)(x, i, this.source);\n      if (result === errorObj) { return this.o.onError(result.e); }\n\n      isPromise(result) && (result = observableFromPromise(result));\n      (isArrayLike(result) || isIterable(result)) && (result = Observable.from(result));\n      this.o.onNext(this._wrapResult(result, x, i));\n    };\n\n    InnerObserver.prototype.error = function(e) { this.o.onError(e); };\n\n    InnerObserver.prototype.completed = function() { this.o.onCompleted(); };\n\n    return FlatMapObservable;\n\n}(ObservableBase));\n\n  var Enumerable = Rx.internals.Enumerable = function () { };\n\n  function IsDisposedDisposable(state) {\n    this._s = state;\n    this.isDisposed = false;\n  }\n\n  IsDisposedDisposable.prototype.dispose = function () {\n    if (!this.isDisposed) {\n      this.isDisposed = true;\n      this._s.isDisposed = true;\n    }\n  };\n\n  var ConcatEnumerableObservable = (function(__super__) {\n    inherits(ConcatEnumerableObservable, __super__);\n    function ConcatEnumerableObservable(sources) {\n      this.sources = sources;\n      __super__.call(this);\n    }\n\n    function scheduleMethod(state, recurse) {\n      if (state.isDisposed) { return; }\n      var currentItem = tryCatch(state.e.next).call(state.e);\n      if (currentItem === errorObj) { return state.o.onError(currentItem.e); }\n      if (currentItem.done) { return state.o.onCompleted(); }\n\n      // Check if promise\n      var currentValue = currentItem.value;\n      isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));\n\n      var d = new SingleAssignmentDisposable();\n      state.subscription.setDisposable(d);\n      d.setDisposable(currentValue.subscribe(new InnerObserver(state, recurse)));\n    }\n\n    ConcatEnumerableObservable.prototype.subscribeCore = function (o) {\n      var subscription = new SerialDisposable();\n      var state = {\n        isDisposed: false,\n        o: o,\n        subscription: subscription,\n        e: this.sources[$iterator$]()\n      };\n\n      var cancelable = currentThreadScheduler.scheduleRecursive(state, scheduleMethod);\n      return new NAryDisposable([subscription, cancelable, new IsDisposedDisposable(state)]);\n    };\n\n    function InnerObserver(state, recurse) {\n      this._state = state;\n      this._recurse = recurse;\n      AbstractObserver.call(this);\n    }\n\n    inherits(InnerObserver, AbstractObserver);\n\n    InnerObserver.prototype.next = function (x) { this._state.o.onNext(x); };\n    InnerObserver.prototype.error = function (e) { this._state.o.onError(e); };\n    InnerObserver.prototype.completed = function () { this._recurse(this._state); };\n\n    return ConcatEnumerableObservable;\n  }(ObservableBase));\n\n  Enumerable.prototype.concat = function () {\n    return new ConcatEnumerableObservable(this);\n  };\n\n  var CatchErrorObservable = (function(__super__) {\n    function CatchErrorObservable(sources) {\n      this.sources = sources;\n      __super__.call(this);\n    }\n\n    inherits(CatchErrorObservable, __super__);\n\n    function scheduleMethod(state, recurse) {\n      if (state.isDisposed) { return; }\n      var currentItem = tryCatch(state.e.next).call(state.e);\n      if (currentItem === errorObj) { return state.o.onError(currentItem.e); }\n      if (currentItem.done) { return state.lastError !== null ? state.o.onError(state.lastError) : state.o.onCompleted(); }\n\n      var currentValue = currentItem.value;\n      isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));\n\n      var d = new SingleAssignmentDisposable();\n      state.subscription.setDisposable(d);\n      d.setDisposable(currentValue.subscribe(new InnerObserver(state, recurse)));\n    }\n\n    CatchErrorObservable.prototype.subscribeCore = function (o) {\n      var subscription = new SerialDisposable();\n      var state = {\n        isDisposed: false,\n        e: this.sources[$iterator$](),\n        subscription: subscription,\n        lastError: null,\n        o: o\n      };\n\n      var cancelable = currentThreadScheduler.scheduleRecursive(state, scheduleMethod);\n      return new NAryDisposable([subscription, cancelable, new IsDisposedDisposable(state)]);\n    };\n\n    function InnerObserver(state, recurse) {\n      this._state = state;\n      this._recurse = recurse;\n      AbstractObserver.call(this);\n    }\n\n    inherits(InnerObserver, AbstractObserver);\n\n    InnerObserver.prototype.next = function (x) { this._state.o.onNext(x); };\n    InnerObserver.prototype.error = function (e) { this._state.lastError = e; this._recurse(this._state); };\n    InnerObserver.prototype.completed = function () { this._state.o.onCompleted(); };\n\n    return CatchErrorObservable;\n  }(ObservableBase));\n\n  Enumerable.prototype.catchError = function () {\n    return new CatchErrorObservable(this);\n  };\n\n  var RepeatEnumerable = (function (__super__) {\n    inherits(RepeatEnumerable, __super__);\n    function RepeatEnumerable(v, c) {\n      this.v = v;\n      this.c = c == null ? -1 : c;\n    }\n\n    RepeatEnumerable.prototype[$iterator$] = function () {\n      return new RepeatEnumerator(this);\n    };\n\n    function RepeatEnumerator(p) {\n      this.v = p.v;\n      this.l = p.c;\n    }\n\n    RepeatEnumerator.prototype.next = function () {\n      if (this.l === 0) { return doneEnumerator; }\n      if (this.l > 0) { this.l--; }\n      return { done: false, value: this.v };\n    };\n\n    return RepeatEnumerable;\n  }(Enumerable));\n\n  var enumerableRepeat = Enumerable.repeat = function (value, repeatCount) {\n    return new RepeatEnumerable(value, repeatCount);\n  };\n\n  var OfEnumerable = (function(__super__) {\n    inherits(OfEnumerable, __super__);\n    function OfEnumerable(s, fn, thisArg) {\n      this.s = s;\n      this.fn = fn ? bindCallback(fn, thisArg, 3) : null;\n    }\n    OfEnumerable.prototype[$iterator$] = function () {\n      return new OfEnumerator(this);\n    };\n\n    function OfEnumerator(p) {\n      this.i = -1;\n      this.s = p.s;\n      this.l = this.s.length;\n      this.fn = p.fn;\n    }\n\n    OfEnumerator.prototype.next = function () {\n     return ++this.i < this.l ?\n       { done: false, value: !this.fn ? this.s[this.i] : this.fn(this.s[this.i], this.i, this.s) } :\n       doneEnumerator;\n    };\n\n    return OfEnumerable;\n  }(Enumerable));\n\n  var enumerableOf = Enumerable.of = function (source, selector, thisArg) {\n    return new OfEnumerable(source, selector, thisArg);\n  };\n\n  var ToArrayObservable = (function(__super__) {\n    inherits(ToArrayObservable, __super__);\n    function ToArrayObservable(source) {\n      this.source = source;\n      __super__.call(this);\n    }\n\n    ToArrayObservable.prototype.subscribeCore = function(o) {\n      return this.source.subscribe(new InnerObserver(o));\n    };\n\n    inherits(InnerObserver, AbstractObserver);\n    function InnerObserver(o) {\n      this.o = o;\n      this.a = [];\n      AbstractObserver.call(this);\n    }\n    \n    InnerObserver.prototype.next = function (x) { this.a.push(x); };\n    InnerObserver.prototype.error = function (e) { this.o.onError(e);  };\n    InnerObserver.prototype.completed = function () { this.o.onNext(this.a); this.o.onCompleted(); };\n\n    return ToArrayObservable;\n  }(ObservableBase));\n\n  /**\n  * Creates an array from an observable sequence.\n  * @returns {Observable} An observable sequence containing a single element with a list containing all the elements of the source sequence.\n  */\n  observableProto.toArray = function () {\n    return new ToArrayObservable(this);\n  };\n\n  /**\n   *  Creates an observable sequence from a specified subscribe method implementation.\n   * @example\n   *  var res = Rx.Observable.create(function (observer) { return function () { } );\n   *  var res = Rx.Observable.create(function (observer) { return Rx.Disposable.empty; } );\n   *  var res = Rx.Observable.create(function (observer) { } );\n   * @param {Function} subscribe Implementation of the resulting observable sequence's subscribe method, returning a function that will be wrapped in a Disposable.\n   * @returns {Observable} The observable sequence with the specified implementation for the Subscribe method.\n   */\n  Observable.create = function (subscribe, parent) {\n    return new AnonymousObservable(subscribe, parent);\n  };\n\n  var Defer = (function(__super__) {\n    inherits(Defer, __super__);\n    function Defer(factory) {\n      this._f = factory;\n      __super__.call(this);\n    }\n\n    Defer.prototype.subscribeCore = function (o) {\n      var result = tryCatch(this._f)();\n      if (result === errorObj) { return observableThrow(result.e).subscribe(o);}\n      isPromise(result) && (result = observableFromPromise(result));\n      return result.subscribe(o);\n    };\n\n    return Defer;\n  }(ObservableBase));\n\n  /**\n   *  Returns an observable sequence that invokes the specified factory function whenever a new observer subscribes.\n   *\n   * @example\n   *  var res = Rx.Observable.defer(function () { return Rx.Observable.fromArray([1,2,3]); });\n   * @param {Function} observableFactory Observable factory function to invoke for each observer that subscribes to the resulting sequence or Promise.\n   * @returns {Observable} An observable sequence whose observers trigger an invocation of the given observable factory function.\n   */\n  var observableDefer = Observable.defer = function (observableFactory) {\n    return new Defer(observableFactory);\n  };\n\n  var EmptyObservable = (function(__super__) {\n    inherits(EmptyObservable, __super__);\n    function EmptyObservable(scheduler) {\n      this.scheduler = scheduler;\n      __super__.call(this);\n    }\n\n    EmptyObservable.prototype.subscribeCore = function (observer) {\n      var sink = new EmptySink(observer, this.scheduler);\n      return sink.run();\n    };\n\n    function EmptySink(observer, scheduler) {\n      this.observer = observer;\n      this.scheduler = scheduler;\n    }\n\n    function scheduleItem(s, state) {\n      state.onCompleted();\n      return disposableEmpty;\n    }\n\n    EmptySink.prototype.run = function () {\n      var state = this.observer;\n      return this.scheduler === immediateScheduler ?\n        scheduleItem(null, state) :\n        this.scheduler.schedule(state, scheduleItem);\n    };\n\n    return EmptyObservable;\n  }(ObservableBase));\n\n  var EMPTY_OBSERVABLE = new EmptyObservable(immediateScheduler);\n\n  /**\n   *  Returns an empty observable sequence, using the specified scheduler to send out the single OnCompleted message.\n   *\n   * @example\n   *  var res = Rx.Observable.empty();\n   *  var res = Rx.Observable.empty(Rx.Scheduler.timeout);\n   * @param {Scheduler} [scheduler] Scheduler to send the termination call on.\n   * @returns {Observable} An observable sequence with no elements.\n   */\n  var observableEmpty = Observable.empty = function (scheduler) {\n    isScheduler(scheduler) || (scheduler = immediateScheduler);\n    return scheduler === immediateScheduler ? EMPTY_OBSERVABLE : new EmptyObservable(scheduler);\n  };\n\n  var FromObservable = (function(__super__) {\n    inherits(FromObservable, __super__);\n    function FromObservable(iterable, fn, scheduler) {\n      this._iterable = iterable;\n      this._fn = fn;\n      this._scheduler = scheduler;\n      __super__.call(this);\n    }\n\n    function createScheduleMethod(o, it, fn) {\n      return function loopRecursive(i, recurse) {\n        var next = tryCatch(it.next).call(it);\n        if (next === errorObj) { return o.onError(next.e); }\n        if (next.done) { return o.onCompleted(); }\n\n        var result = next.value;\n\n        if (isFunction(fn)) {\n          result = tryCatch(fn)(result, i);\n          if (result === errorObj) { return o.onError(result.e); }\n        }\n\n        o.onNext(result);\n        recurse(i + 1);\n      };\n    }\n\n    FromObservable.prototype.subscribeCore = function (o) {\n      var list = Object(this._iterable),\n          it = getIterable(list);\n\n      return this._scheduler.scheduleRecursive(0, createScheduleMethod(o, it, this._fn));\n    };\n\n    return FromObservable;\n  }(ObservableBase));\n\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n\n  function StringIterable(s) {\n    this._s = s;\n  }\n\n  StringIterable.prototype[$iterator$] = function () {\n    return new StringIterator(this._s);\n  };\n\n  function StringIterator(s) {\n    this._s = s;\n    this._l = s.length;\n    this._i = 0;\n  }\n\n  StringIterator.prototype[$iterator$] = function () {\n    return this;\n  };\n\n  StringIterator.prototype.next = function () {\n    return this._i < this._l ? { done: false, value: this._s.charAt(this._i++) } : doneEnumerator;\n  };\n\n  function ArrayIterable(a) {\n    this._a = a;\n  }\n\n  ArrayIterable.prototype[$iterator$] = function () {\n    return new ArrayIterator(this._a);\n  };\n\n  function ArrayIterator(a) {\n    this._a = a;\n    this._l = toLength(a);\n    this._i = 0;\n  }\n\n  ArrayIterator.prototype[$iterator$] = function () {\n    return this;\n  };\n\n  ArrayIterator.prototype.next = function () {\n    return this._i < this._l ? { done: false, value: this._a[this._i++] } : doneEnumerator;\n  };\n\n  function numberIsFinite(value) {\n    return typeof value === 'number' && root.isFinite(value);\n  }\n\n  function isNan(n) {\n    return n !== n;\n  }\n\n  function getIterable(o) {\n    var i = o[$iterator$], it;\n    if (!i && typeof o === 'string') {\n      it = new StringIterable(o);\n      return it[$iterator$]();\n    }\n    if (!i && o.length !== undefined) {\n      it = new ArrayIterable(o);\n      return it[$iterator$]();\n    }\n    if (!i) { throw new TypeError('Object is not iterable'); }\n    return o[$iterator$]();\n  }\n\n  function sign(value) {\n    var number = +value;\n    if (number === 0) { return number; }\n    if (isNaN(number)) { return number; }\n    return number < 0 ? -1 : 1;\n  }\n\n  function toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) { return 0; }\n    if (len === 0 || !numberIsFinite(len)) { return len; }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) { return 0; }\n    if (len > maxSafeInteger) { return maxSafeInteger; }\n    return len;\n  }\n\n  /**\n  * This method creates a new Observable sequence from an array-like or iterable object.\n  * @param {Any} arrayLike An array-like or iterable object to convert to an Observable sequence.\n  * @param {Function} [mapFn] Map function to call on every element of the array.\n  * @param {Any} [thisArg] The context to use calling the mapFn if provided.\n  * @param {Scheduler} [scheduler] Optional scheduler to use for scheduling.  If not provided, defaults to Scheduler.currentThread.\n  */\n  var observableFrom = Observable.from = function (iterable, mapFn, thisArg, scheduler) {\n    if (iterable == null) {\n      throw new Error('iterable cannot be null.')\n    }\n    if (mapFn && !isFunction(mapFn)) {\n      throw new Error('mapFn when provided must be a function');\n    }\n    if (mapFn) {\n      var mapper = bindCallback(mapFn, thisArg, 2);\n    }\n    isScheduler(scheduler) || (scheduler = currentThreadScheduler);\n    return new FromObservable(iterable, mapper, scheduler);\n  }\n\n  var FromArrayObservable = (function(__super__) {\n    inherits(FromArrayObservable, __super__);\n    function FromArrayObservable(args, scheduler) {\n      this._args = args;\n      this._scheduler = scheduler;\n      __super__.call(this);\n    }\n\n    function scheduleMethod(o, args) {\n      var len = args.length;\n      return function loopRecursive (i, recurse) {\n        if (i < len) {\n          o.onNext(args[i]);\n          recurse(i + 1);\n        } else {\n          o.onCompleted();\n        }\n      };\n    }\n\n    FromArrayObservable.prototype.subscribeCore = function (o) {\n      return this._scheduler.scheduleRecursive(0, scheduleMethod(o, this._args));\n    };\n\n    return FromArrayObservable;\n  }(ObservableBase));\n\n  /**\n  *  Converts an array to an observable sequence, using an optional scheduler to enumerate the array.\n  * @deprecated use Observable.from or Observable.of\n  * @param {Scheduler} [scheduler] Scheduler to run the enumeration of the input sequence on.\n  * @returns {Observable} The observable sequence whose elements are pulled from the given enumerable sequence.\n  */\n  var observableFromArray = Observable.fromArray = function (array, scheduler) {\n    isScheduler(scheduler) || (scheduler = currentThreadScheduler);\n    return new FromArrayObservable(array, scheduler)\n  };\n\n  var NeverObservable = (function(__super__) {\n    inherits(NeverObservable, __super__);\n    function NeverObservable() {\n      __super__.call(this);\n    }\n\n    NeverObservable.prototype.subscribeCore = function (observer) {\n      return disposableEmpty;\n    };\n\n    return NeverObservable;\n  }(ObservableBase));\n\n  var NEVER_OBSERVABLE = new NeverObservable();\n\n  /**\n   * Returns a non-terminating observable sequence, which can be used to denote an infinite duration (e.g. when using reactive joins).\n   * @returns {Observable} An observable sequence whose observers will never get called.\n   */\n  var observableNever = Observable.never = function () {\n    return NEVER_OBSERVABLE;\n  };\n\n  function observableOf (scheduler, array) {\n    isScheduler(scheduler) || (scheduler = currentThreadScheduler);\n    return new FromArrayObservable(array, scheduler);\n  }\n\n  /**\n  *  This method creates a new Observable instance with a variable number of arguments, regardless of number or type of the arguments.\n  * @returns {Observable} The observable sequence whose elements are pulled from the given arguments.\n  */\n  Observable.of = function () {\n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    return new FromArrayObservable(args, currentThreadScheduler);\n  };\n\n  /**\n  *  This method creates a new Observable instance with a variable number of arguments, regardless of number or type of the arguments.\n  * @param {Scheduler} scheduler A scheduler to use for scheduling the arguments.\n  * @returns {Observable} The observable sequence whose elements are pulled from the given arguments.\n  */\n  Observable.ofWithScheduler = function (scheduler) {\n    var len = arguments.length, args = new Array(len - 1);\n    for(var i = 1; i < len; i++) { args[i - 1] = arguments[i]; }\n    return new FromArrayObservable(args, scheduler);\n  };\n\n  var PairsObservable = (function(__super__) {\n    inherits(PairsObservable, __super__);\n    function PairsObservable(o, scheduler) {\n      this._o = o;\n      this._keys = Object.keys(o);\n      this._scheduler = scheduler;\n      __super__.call(this);\n    }\n\n    function scheduleMethod(o, obj, keys) {\n      return function loopRecursive(i, recurse) {\n        if (i < keys.length) {\n          var key = keys[i];\n          o.onNext([key, obj[key]]);\n          recurse(i + 1);\n        } else {\n          o.onCompleted();\n        }\n      };\n    }\n\n    PairsObservable.prototype.subscribeCore = function (o) {\n      return this._scheduler.scheduleRecursive(0, scheduleMethod(o, this._o, this._keys));\n    };\n\n    return PairsObservable;\n  }(ObservableBase));\n\n  /**\n   * Convert an object into an observable sequence of [key, value] pairs.\n   * @param {Object} obj The object to inspect.\n   * @param {Scheduler} [scheduler] Scheduler to run the enumeration of the input sequence on.\n   * @returns {Observable} An observable sequence of [key, value] pairs from the object.\n   */\n  Observable.pairs = function (obj, scheduler) {\n    scheduler || (scheduler = currentThreadScheduler);\n    return new PairsObservable(obj, scheduler);\n  };\n\n    var RangeObservable = (function(__super__) {\n    inherits(RangeObservable, __super__);\n    function RangeObservable(start, count, scheduler) {\n      this.start = start;\n      this.rangeCount = count;\n      this.scheduler = scheduler;\n      __super__.call(this);\n    }\n\n    function loopRecursive(start, count, o) {\n      return function loop (i, recurse) {\n        if (i < count) {\n          o.onNext(start + i);\n          recurse(i + 1);\n        } else {\n          o.onCompleted();\n        }\n      };\n    }\n\n    RangeObservable.prototype.subscribeCore = function (o) {\n      return this.scheduler.scheduleRecursive(\n        0,\n        loopRecursive(this.start, this.rangeCount, o)\n      );\n    };\n\n    return RangeObservable;\n  }(ObservableBase));\n\n  /**\n  *  Generates an observable sequence of integral numbers within a specified range, using the specified scheduler to send out observer messages.\n  * @param {Number} start The value of the first integer in the sequence.\n  * @param {Number} count The number of sequential integers to generate.\n  * @param {Scheduler} [scheduler] Scheduler to run the generator loop on. If not specified, defaults to Scheduler.currentThread.\n  * @returns {Observable} An observable sequence that contains a range of sequential integral numbers.\n  */\n  Observable.range = function (start, count, scheduler) {\n    isScheduler(scheduler) || (scheduler = currentThreadScheduler);\n    return new RangeObservable(start, count, scheduler);\n  };\n\n  var RepeatObservable = (function(__super__) {\n    inherits(RepeatObservable, __super__);\n    function RepeatObservable(value, repeatCount, scheduler) {\n      this.value = value;\n      this.repeatCount = repeatCount == null ? -1 : repeatCount;\n      this.scheduler = scheduler;\n      __super__.call(this);\n    }\n\n    RepeatObservable.prototype.subscribeCore = function (observer) {\n      var sink = new RepeatSink(observer, this);\n      return sink.run();\n    };\n\n    return RepeatObservable;\n  }(ObservableBase));\n\n  function RepeatSink(observer, parent) {\n    this.observer = observer;\n    this.parent = parent;\n  }\n\n  RepeatSink.prototype.run = function () {\n    var observer = this.observer, value = this.parent.value;\n    function loopRecursive(i, recurse) {\n      if (i === -1 || i > 0) {\n        observer.onNext(value);\n        i > 0 && i--;\n      }\n      if (i === 0) { return observer.onCompleted(); }\n      recurse(i);\n    }\n\n    return this.parent.scheduler.scheduleRecursive(this.parent.repeatCount, loopRecursive);\n  };\n\n  /**\n   *  Generates an observable sequence that repeats the given element the specified number of times, using the specified scheduler to send out observer messages.\n   * @param {Mixed} value Element to repeat.\n   * @param {Number} repeatCount [Optiona] Number of times to repeat the element. If not specified, repeats indefinitely.\n   * @param {Scheduler} scheduler Scheduler to run the producer loop on. If not specified, defaults to Scheduler.immediate.\n   * @returns {Observable} An observable sequence that repeats the given element the specified number of times.\n   */\n  Observable.repeat = function (value, repeatCount, scheduler) {\n    isScheduler(scheduler) || (scheduler = currentThreadScheduler);\n    return new RepeatObservable(value, repeatCount, scheduler);\n  };\n\n  var JustObservable = (function(__super__) {\n    inherits(JustObservable, __super__);\n    function JustObservable(value, scheduler) {\n      this._value = value;\n      this._scheduler = scheduler;\n      __super__.call(this);\n    }\n\n    JustObservable.prototype.subscribeCore = function (o) {\n      var state = [this._value, o];\n      return this._scheduler === immediateScheduler ?\n        scheduleItem(null, state) :\n        this._scheduler.schedule(state, scheduleItem);\n    };\n\n    function scheduleItem(s, state) {\n      var value = state[0], observer = state[1];\n      observer.onNext(value);\n      observer.onCompleted();\n      return disposableEmpty;\n    }\n\n    return JustObservable;\n  }(ObservableBase));\n\n  /**\n   *  Returns an observable sequence that contains a single element, using the specified scheduler to send out observer messages.\n   *  There is an alias called 'just' or browsers <IE9.\n   * @param {Mixed} value Single element in the resulting observable sequence.\n   * @param {Scheduler} scheduler Scheduler to send the single element on. If not specified, defaults to Scheduler.immediate.\n   * @returns {Observable} An observable sequence containing the single specified element.\n   */\n  var observableReturn = Observable['return'] = Observable.just = function (value, scheduler) {\n    isScheduler(scheduler) || (scheduler = immediateScheduler);\n    return new JustObservable(value, scheduler);\n  };\n\n  var ThrowObservable = (function(__super__) {\n    inherits(ThrowObservable, __super__);\n    function ThrowObservable(error, scheduler) {\n      this._error = error;\n      this._scheduler = scheduler;\n      __super__.call(this);\n    }\n\n    ThrowObservable.prototype.subscribeCore = function (o) {\n      var state = [this._error, o];\n      return this._scheduler === immediateScheduler ?\n        scheduleItem(null, state) :\n        this._scheduler.schedule(state, scheduleItem);\n    };\n\n    function scheduleItem(s, state) {\n      var e = state[0], o = state[1];\n      o.onError(e);\n      return disposableEmpty;\n    }\n\n    return ThrowObservable;\n  }(ObservableBase));\n\n  /**\n   *  Returns an observable sequence that terminates with an exception, using the specified scheduler to send out the single onError message.\n   *  There is an alias to this method called 'throwError' for browsers <IE9.\n   * @param {Mixed} error An object used for the sequence's termination.\n   * @param {Scheduler} scheduler Scheduler to send the exceptional termination call on. If not specified, defaults to Scheduler.immediate.\n   * @returns {Observable} The observable sequence that terminates exceptionally with the specified exception object.\n   */\n  var observableThrow = Observable['throw'] = function (error, scheduler) {\n    isScheduler(scheduler) || (scheduler = immediateScheduler);\n    return new ThrowObservable(error, scheduler);\n  };\n\n  var CatchObservable = (function (__super__) {\n    inherits(CatchObservable, __super__);\n    function CatchObservable(source, fn) {\n      this.source = source;\n      this._fn = fn;\n      __super__.call(this);\n    }\n\n    CatchObservable.prototype.subscribeCore = function (o) {\n      var d1 = new SingleAssignmentDisposable(), subscription = new SerialDisposable();\n      subscription.setDisposable(d1);\n      d1.setDisposable(this.source.subscribe(new CatchObserver(o, subscription, this._fn)));\n      return subscription;\n    };\n\n    return CatchObservable;\n  }(ObservableBase));\n\n  var CatchObserver = (function(__super__) {\n    inherits(CatchObserver, __super__);\n    function CatchObserver(o, s, fn) {\n      this._o = o;\n      this._s = s;\n      this._fn = fn;\n      __super__.call(this);\n    }\n\n    CatchObserver.prototype.next = function (x) { this._o.onNext(x); };\n    CatchObserver.prototype.completed = function () { return this._o.onCompleted(); };\n    CatchObserver.prototype.error = function (e) {\n      var result = tryCatch(this._fn)(e);\n      if (result === errorObj) { return this._o.onError(result.e); }\n      isPromise(result) && (result = observableFromPromise(result));\n\n      var d = new SingleAssignmentDisposable();\n      this._s.setDisposable(d);\n      d.setDisposable(result.subscribe(this._o));\n    };\n\n    return CatchObserver;\n  }(AbstractObserver));\n\n  /**\n   * Continues an observable sequence that is terminated by an exception with the next observable sequence.\n   * @param {Mixed} handlerOrSecond Exception handler function that returns an observable sequence given the error that occurred in the first sequence, or a second observable sequence used to produce results when an error occurred in the first sequence.\n   * @returns {Observable} An observable sequence containing the first sequence's elements, followed by the elements of the handler sequence in case an exception occurred.\n   */\n  observableProto['catch'] = function (handlerOrSecond) {\n    return isFunction(handlerOrSecond) ? new CatchObservable(this, handlerOrSecond) : observableCatch([this, handlerOrSecond]);\n  };\n\n  /**\n   * Continues an observable sequence that is terminated by an exception with the next observable sequence.\n   * @param {Array | Arguments} args Arguments or an array to use as the next sequence if an error occurs.\n   * @returns {Observable} An observable sequence containing elements from consecutive source sequences until a source sequence terminates successfully.\n   */\n  var observableCatch = Observable['catch'] = function () {\n    var items;\n    if (Array.isArray(arguments[0])) {\n      items = arguments[0];\n    } else {\n      var len = arguments.length;\n      items = new Array(len);\n      for(var i = 0; i < len; i++) { items[i] = arguments[i]; }\n    }\n    return enumerableOf(items).catchError();\n  };\n\n  /**\n   * Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences or Promises produces an element.\n   * This can be in the form of an argument list of observables or an array.\n   *\n   * @example\n   * 1 - obs = observable.combineLatest(obs1, obs2, obs3, function (o1, o2, o3) { return o1 + o2 + o3; });\n   * 2 - obs = observable.combineLatest([obs1, obs2, obs3], function (o1, o2, o3) { return o1 + o2 + o3; });\n   * @returns {Observable} An observable sequence containing the result of combining elements of the sources using the specified result selector function.\n   */\n  observableProto.combineLatest = function () {\n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    if (Array.isArray(args[0])) {\n      args[0].unshift(this);\n    } else {\n      args.unshift(this);\n    }\n    return combineLatest.apply(this, args);\n  };\n\n  function falseFactory() { return false; }\n  function argumentsToArray() {\n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    return args;\n  }\n\n  var CombineLatestObservable = (function(__super__) {\n    inherits(CombineLatestObservable, __super__);\n    function CombineLatestObservable(params, cb) {\n      this._params = params;\n      this._cb = cb;\n      __super__.call(this);\n    }\n\n    CombineLatestObservable.prototype.subscribeCore = function(observer) {\n      var len = this._params.length,\n          subscriptions = new Array(len);\n\n      var state = {\n        hasValue: arrayInitialize(len, falseFactory),\n        hasValueAll: false,\n        isDone: arrayInitialize(len, falseFactory),\n        values: new Array(len)\n      };\n\n      for (var i = 0; i < len; i++) {\n        var source = this._params[i], sad = new SingleAssignmentDisposable();\n        subscriptions[i] = sad;\n        isPromise(source) && (source = observableFromPromise(source));\n        sad.setDisposable(source.subscribe(new CombineLatestObserver(observer, i, this._cb, state)));\n      }\n\n      return new NAryDisposable(subscriptions);\n    };\n\n    return CombineLatestObservable;\n  }(ObservableBase));\n\n  var CombineLatestObserver = (function (__super__) {\n    inherits(CombineLatestObserver, __super__);\n    function CombineLatestObserver(o, i, cb, state) {\n      this._o = o;\n      this._i = i;\n      this._cb = cb;\n      this._state = state;\n      __super__.call(this);\n    }\n\n    function notTheSame(i) {\n      return function (x, j) {\n        return j !== i;\n      };\n    }\n\n    CombineLatestObserver.prototype.next = function (x) {\n      this._state.values[this._i] = x;\n      this._state.hasValue[this._i] = true;\n      if (this._state.hasValueAll || (this._state.hasValueAll = this._state.hasValue.every(identity))) {\n        var res = tryCatch(this._cb).apply(null, this._state.values);\n        if (res === errorObj) { return this._o.onError(res.e); }\n        this._o.onNext(res);\n      } else if (this._state.isDone.filter(notTheSame(this._i)).every(identity)) {\n        this._o.onCompleted();\n      }\n    };\n\n    CombineLatestObserver.prototype.error = function (e) {\n      this._o.onError(e);\n    };\n\n    CombineLatestObserver.prototype.completed = function () {\n      this._state.isDone[this._i] = true;\n      this._state.isDone.every(identity) && this._o.onCompleted();\n    };\n\n    return CombineLatestObserver;\n  }(AbstractObserver));\n\n  /**\n  * Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences or Promises produces an element.\n  *\n  * @example\n  * 1 - obs = Rx.Observable.combineLatest(obs1, obs2, obs3, function (o1, o2, o3) { return o1 + o2 + o3; });\n  * 2 - obs = Rx.Observable.combineLatest([obs1, obs2, obs3], function (o1, o2, o3) { return o1 + o2 + o3; });\n  * @returns {Observable} An observable sequence containing the result of combining elements of the sources using the specified result selector function.\n  */\n  var combineLatest = Observable.combineLatest = function () {\n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    var resultSelector = isFunction(args[len - 1]) ? args.pop() : argumentsToArray;\n    Array.isArray(args[0]) && (args = args[0]);\n    return new CombineLatestObservable(args, resultSelector);\n  };\n\n  /**\n   * Concatenates all the observable sequences.  This takes in either an array or variable arguments to concatenate.\n   * @returns {Observable} An observable sequence that contains the elements of each given sequence, in sequential order.\n   */\n  observableProto.concat = function () {\n    for(var args = [], i = 0, len = arguments.length; i < len; i++) { args.push(arguments[i]); }\n    args.unshift(this);\n    return observableConcat.apply(null, args);\n  };\n\n  var ConcatObserver = (function(__super__) {\n    inherits(ConcatObserver, __super__);\n    function ConcatObserver(s, fn) {\n      this._s = s;\n      this._fn = fn;\n      __super__.call(this);\n    }\n\n    ConcatObserver.prototype.next = function (x) { this._s.o.onNext(x); };\n    ConcatObserver.prototype.error = function (e) { this._s.o.onError(e); };\n    ConcatObserver.prototype.completed = function () { this._s.i++; this._fn(this._s); };\n\n    return ConcatObserver;\n  }(AbstractObserver));\n\n  var ConcatObservable = (function(__super__) {\n    inherits(ConcatObservable, __super__);\n    function ConcatObservable(sources) {\n      this._sources = sources;\n      __super__.call(this);\n    }\n\n    function scheduleRecursive (state, recurse) {\n      if (state.disposable.isDisposed) { return; }\n      if (state.i === state.sources.length) { return state.o.onCompleted(); }\n\n      // Check if promise\n      var currentValue = state.sources[state.i];\n      isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));\n\n      var d = new SingleAssignmentDisposable();\n      state.subscription.setDisposable(d);\n      d.setDisposable(currentValue.subscribe(new ConcatObserver(state, recurse)));\n    }\n\n    ConcatObservable.prototype.subscribeCore = function(o) {\n      var subscription = new SerialDisposable();\n      var disposable = disposableCreate(noop);\n      var state = {\n        o: o,\n        i: 0,\n        subscription: subscription,\n        disposable: disposable,\n        sources: this._sources\n      };\n\n      var cancelable = immediateScheduler.scheduleRecursive(state, scheduleRecursive);\n      return new NAryDisposable([subscription, disposable, cancelable]);\n    };\n\n    return ConcatObservable;\n  }(ObservableBase));\n\n  /**\n   * Concatenates all the observable sequences.\n   * @param {Array | Arguments} args Arguments or an array to concat to the observable sequence.\n   * @returns {Observable} An observable sequence that contains the elements of each given sequence, in sequential order.\n   */\n  var observableConcat = Observable.concat = function () {\n    var args;\n    if (Array.isArray(arguments[0])) {\n      args = arguments[0];\n    } else {\n      args = new Array(arguments.length);\n      for(var i = 0, len = arguments.length; i < len; i++) { args[i] = arguments[i]; }\n    }\n    return new ConcatObservable(args);\n  };\n\n  /**\n   * Concatenates an observable sequence of observable sequences.\n   * @returns {Observable} An observable sequence that contains the elements of each observed inner sequence, in sequential order.\n   */\n  observableProto.concatAll = function () {\n    return this.merge(1);\n  };\n\n  var MergeObservable = (function (__super__) {\n    inherits(MergeObservable, __super__);\n\n    function MergeObservable(source, maxConcurrent) {\n      this.source = source;\n      this.maxConcurrent = maxConcurrent;\n      __super__.call(this);\n    }\n\n    MergeObservable.prototype.subscribeCore = function(observer) {\n      var g = new CompositeDisposable();\n      g.add(this.source.subscribe(new MergeObserver(observer, this.maxConcurrent, g)));\n      return g;\n    };\n\n    return MergeObservable;\n\n  }(ObservableBase));\n\n  var MergeObserver = (function (__super__) {\n    function MergeObserver(o, max, g) {\n      this.o = o;\n      this.max = max;\n      this.g = g;\n      this.done = false;\n      this.q = [];\n      this.activeCount = 0;\n      __super__.call(this);\n    }\n\n    inherits(MergeObserver, __super__);\n\n    MergeObserver.prototype.handleSubscribe = function (xs) {\n      var sad = new SingleAssignmentDisposable();\n      this.g.add(sad);\n      isPromise(xs) && (xs = observableFromPromise(xs));\n      sad.setDisposable(xs.subscribe(new InnerObserver(this, sad)));\n    };\n\n    MergeObserver.prototype.next = function (innerSource) {\n      if(this.activeCount < this.max) {\n        this.activeCount++;\n        this.handleSubscribe(innerSource);\n      } else {\n        this.q.push(innerSource);\n      }\n    };\n    MergeObserver.prototype.error = function (e) { this.o.onError(e); };\n    MergeObserver.prototype.completed = function () { this.done = true; this.activeCount === 0 && this.o.onCompleted(); };\n\n    function InnerObserver(parent, sad) {\n      this.parent = parent;\n      this.sad = sad;\n      __super__.call(this);\n    }\n\n    inherits(InnerObserver, __super__);\n\n    InnerObserver.prototype.next = function (x) { this.parent.o.onNext(x); };\n    InnerObserver.prototype.error = function (e) { this.parent.o.onError(e); };\n    InnerObserver.prototype.completed = function () {\n      this.parent.g.remove(this.sad);\n      if (this.parent.q.length > 0) {\n        this.parent.handleSubscribe(this.parent.q.shift());\n      } else {\n        this.parent.activeCount--;\n        this.parent.done && this.parent.activeCount === 0 && this.parent.o.onCompleted();\n      }\n    };\n\n    return MergeObserver;\n  }(AbstractObserver));\n\n  /**\n  * Merges an observable sequence of observable sequences into an observable sequence, limiting the number of concurrent subscriptions to inner sequences.\n  * Or merges two observable sequences into a single observable sequence.\n  * @param {Mixed} [maxConcurrentOrOther] Maximum number of inner observable sequences being subscribed to concurrently or the second observable sequence.\n  * @returns {Observable} The observable sequence that merges the elements of the inner sequences.\n  */\n  observableProto.merge = function (maxConcurrentOrOther) {\n    return typeof maxConcurrentOrOther !== 'number' ?\n      observableMerge(this, maxConcurrentOrOther) :\n      new MergeObservable(this, maxConcurrentOrOther);\n  };\n\n  /**\n   * Merges all the observable sequences into a single observable sequence.\n   * The scheduler is optional and if not specified, the immediate scheduler is used.\n   * @returns {Observable} The observable sequence that merges the elements of the observable sequences.\n   */\n  var observableMerge = Observable.merge = function () {\n    var scheduler, sources = [], i, len = arguments.length;\n    if (!arguments[0]) {\n      scheduler = immediateScheduler;\n      for(i = 1; i < len; i++) { sources.push(arguments[i]); }\n    } else if (isScheduler(arguments[0])) {\n      scheduler = arguments[0];\n      for(i = 1; i < len; i++) { sources.push(arguments[i]); }\n    } else {\n      scheduler = immediateScheduler;\n      for(i = 0; i < len; i++) { sources.push(arguments[i]); }\n    }\n    if (Array.isArray(sources[0])) {\n      sources = sources[0];\n    }\n    return observableOf(scheduler, sources).mergeAll();\n  };\n\n  var CompositeError = Rx.CompositeError = function(errors) {\n    this.innerErrors = errors;\n    this.message = 'This contains multiple errors. Check the innerErrors';\n    Error.call(this);\n  };\n  CompositeError.prototype = Object.create(Error.prototype);\n  CompositeError.prototype.name = 'CompositeError';\n\n  var MergeDelayErrorObservable = (function(__super__) {\n    inherits(MergeDelayErrorObservable, __super__);\n    function MergeDelayErrorObservable(source) {\n      this.source = source;\n      __super__.call(this);\n    }\n\n    MergeDelayErrorObservable.prototype.subscribeCore = function (o) {\n      var group = new CompositeDisposable(),\n        m = new SingleAssignmentDisposable(),\n        state = { isStopped: false, errors: [], o: o };\n\n      group.add(m);\n      m.setDisposable(this.source.subscribe(new MergeDelayErrorObserver(group, state)));\n\n      return group;\n    };\n\n    return MergeDelayErrorObservable;\n  }(ObservableBase));\n\n  var MergeDelayErrorObserver = (function(__super__) {\n    inherits(MergeDelayErrorObserver, __super__);\n    function MergeDelayErrorObserver(group, state) {\n      this._group = group;\n      this._state = state;\n      __super__.call(this);\n    }\n\n    function setCompletion(o, errors) {\n      if (errors.length === 0) {\n        o.onCompleted();\n      } else if (errors.length === 1) {\n        o.onError(errors[0]);\n      } else {\n        o.onError(new CompositeError(errors));\n      }\n    }\n\n    MergeDelayErrorObserver.prototype.next = function (x) {\n      var inner = new SingleAssignmentDisposable();\n      this._group.add(inner);\n\n      // Check for promises support\n      isPromise(x) && (x = observableFromPromise(x));\n      inner.setDisposable(x.subscribe(new InnerObserver(inner, this._group, this._state)));\n    };\n\n    MergeDelayErrorObserver.prototype.error = function (e) {\n      this._state.errors.push(e);\n      this._state.isStopped = true;\n      this._group.length === 1 && setCompletion(this._state.o, this._state.errors);\n    };\n\n    MergeDelayErrorObserver.prototype.completed = function () {\n      this._state.isStopped = true;\n      this._group.length === 1 && setCompletion(this._state.o, this._state.errors);\n    };\n\n    inherits(InnerObserver, __super__);\n    function InnerObserver(inner, group, state) {\n      this._inner = inner;\n      this._group = group;\n      this._state = state;\n      __super__.call(this);\n    }\n\n    InnerObserver.prototype.next = function (x) { this._state.o.onNext(x); };\n    InnerObserver.prototype.error = function (e) {\n      this._state.errors.push(e);\n      this._group.remove(this._inner);\n      this._state.isStopped && this._group.length === 1 && setCompletion(this._state.o, this._state.errors);\n    };\n    InnerObserver.prototype.completed = function () {\n      this._group.remove(this._inner);\n      this._state.isStopped && this._group.length === 1 && setCompletion(this._state.o, this._state.errors);\n    };\n\n    return MergeDelayErrorObserver;\n  }(AbstractObserver));\n\n  /**\n  * Flattens an Observable that emits Observables into one Observable, in a way that allows an Observer to\n  * receive all successfully emitted items from all of the source Observables without being interrupted by\n  * an error notification from one of them.\n  *\n  * This behaves like Observable.prototype.mergeAll except that if any of the merged Observables notify of an\n  * error via the Observer's onError, mergeDelayError will refrain from propagating that\n  * error notification until all of the merged Observables have finished emitting items.\n  * @param {Array | Arguments} args Arguments or an array to merge.\n  * @returns {Observable} an Observable that emits all of the items emitted by the Observables emitted by the Observable\n  */\n  Observable.mergeDelayError = function() {\n    var args;\n    if (Array.isArray(arguments[0])) {\n      args = arguments[0];\n    } else {\n      var len = arguments.length;\n      args = new Array(len);\n      for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    }\n    var source = observableOf(null, args);\n    return new MergeDelayErrorObservable(source);\n  };\n\n  var MergeAllObservable = (function (__super__) {\n    inherits(MergeAllObservable, __super__);\n\n    function MergeAllObservable(source) {\n      this.source = source;\n      __super__.call(this);\n    }\n\n    MergeAllObservable.prototype.subscribeCore = function (o) {\n      var g = new CompositeDisposable(), m = new SingleAssignmentDisposable();\n      g.add(m);\n      m.setDisposable(this.source.subscribe(new MergeAllObserver(o, g)));\n      return g;\n    };\n\n    return MergeAllObservable;\n  }(ObservableBase));\n\n  var MergeAllObserver = (function (__super__) {\n    function MergeAllObserver(o, g) {\n      this.o = o;\n      this.g = g;\n      this.done = false;\n      __super__.call(this);\n    }\n\n    inherits(MergeAllObserver, __super__);\n\n    MergeAllObserver.prototype.next = function(innerSource) {\n      var sad = new SingleAssignmentDisposable();\n      this.g.add(sad);\n      isPromise(innerSource) && (innerSource = observableFromPromise(innerSource));\n      sad.setDisposable(innerSource.subscribe(new InnerObserver(this, sad)));\n    };\n\n    MergeAllObserver.prototype.error = function (e) {\n      this.o.onError(e);\n    };\n\n    MergeAllObserver.prototype.completed = function () {\n      this.done = true;\n      this.g.length === 1 && this.o.onCompleted();\n    };\n\n    function InnerObserver(parent, sad) {\n      this.parent = parent;\n      this.sad = sad;\n      __super__.call(this);\n    }\n\n    inherits(InnerObserver, __super__);\n\n    InnerObserver.prototype.next = function (x) {\n      this.parent.o.onNext(x);\n    };\n    InnerObserver.prototype.error = function (e) {\n      this.parent.o.onError(e);\n    };\n    InnerObserver.prototype.completed = function () {\n      this.parent.g.remove(this.sad);\n      this.parent.done && this.parent.g.length === 1 && this.parent.o.onCompleted();\n    };\n\n    return MergeAllObserver;\n  }(AbstractObserver));\n\n  /**\n  * Merges an observable sequence of observable sequences into an observable sequence.\n  * @returns {Observable} The observable sequence that merges the elements of the inner sequences.\n  */\n  observableProto.mergeAll = function () {\n    return new MergeAllObservable(this);\n  };\n\n  var SkipUntilObservable = (function(__super__) {\n    inherits(SkipUntilObservable, __super__);\n\n    function SkipUntilObservable(source, other) {\n      this._s = source;\n      this._o = isPromise(other) ? observableFromPromise(other) : other;\n      this._open = false;\n      __super__.call(this);\n    }\n\n    SkipUntilObservable.prototype.subscribeCore = function(o) {\n      var leftSubscription = new SingleAssignmentDisposable();\n      leftSubscription.setDisposable(this._s.subscribe(new SkipUntilSourceObserver(o, this)));\n\n      isPromise(this._o) && (this._o = observableFromPromise(this._o));\n\n      var rightSubscription = new SingleAssignmentDisposable();\n      rightSubscription.setDisposable(this._o.subscribe(new SkipUntilOtherObserver(o, this, rightSubscription)));\n\n      return new BinaryDisposable(leftSubscription, rightSubscription);\n    };\n\n    return SkipUntilObservable;\n  }(ObservableBase));\n\n  var SkipUntilSourceObserver = (function(__super__) {\n    inherits(SkipUntilSourceObserver, __super__);\n    function SkipUntilSourceObserver(o, p) {\n      this._o = o;\n      this._p = p;\n      __super__.call(this);\n    }\n\n    SkipUntilSourceObserver.prototype.next = function (x) {\n      this._p._open && this._o.onNext(x);\n    };\n\n    SkipUntilSourceObserver.prototype.error = function (err) {\n      this._o.onError(err);\n    };\n\n    SkipUntilSourceObserver.prototype.onCompleted = function () {\n      this._p._open && this._o.onCompleted();\n    };\n\n    return SkipUntilSourceObserver;\n  }(AbstractObserver));\n\n  var SkipUntilOtherObserver = (function(__super__) {\n    inherits(SkipUntilOtherObserver, __super__);\n    function SkipUntilOtherObserver(o, p, r) {\n      this._o = o;\n      this._p = p;\n      this._r = r;\n      __super__.call(this);\n    }\n\n    SkipUntilOtherObserver.prototype.next = function () {\n      this._p._open = true;\n      this._r.dispose();\n    };\n\n    SkipUntilOtherObserver.prototype.error = function (err) {\n      this._o.onError(err);\n    };\n\n    SkipUntilOtherObserver.prototype.onCompleted = function () {\n      this._r.dispose();\n    };\n\n    return SkipUntilOtherObserver;\n  }(AbstractObserver));\n\n  /**\n   * Returns the values from the source observable sequence only after the other observable sequence produces a value.\n   * @param {Observable | Promise} other The observable sequence or Promise that triggers propagation of elements of the source sequence.\n   * @returns {Observable} An observable sequence containing the elements of the source sequence starting from the point the other sequence triggered propagation.\n   */\n  observableProto.skipUntil = function (other) {\n    return new SkipUntilObservable(this, other);\n  };\n\n  var SwitchObservable = (function(__super__) {\n    inherits(SwitchObservable, __super__);\n    function SwitchObservable(source) {\n      this.source = source;\n      __super__.call(this);\n    }\n\n    SwitchObservable.prototype.subscribeCore = function (o) {\n      var inner = new SerialDisposable(), s = this.source.subscribe(new SwitchObserver(o, inner));\n      return new BinaryDisposable(s, inner);\n    };\n\n    inherits(SwitchObserver, AbstractObserver);\n    function SwitchObserver(o, inner) {\n      this.o = o;\n      this.inner = inner;\n      this.stopped = false;\n      this.latest = 0;\n      this.hasLatest = false;\n      AbstractObserver.call(this);\n    }\n\n    SwitchObserver.prototype.next = function (innerSource) {\n      var d = new SingleAssignmentDisposable(), id = ++this.latest;\n      this.hasLatest = true;\n      this.inner.setDisposable(d);\n      isPromise(innerSource) && (innerSource = observableFromPromise(innerSource));\n      d.setDisposable(innerSource.subscribe(new InnerObserver(this, id)));\n    };\n\n    SwitchObserver.prototype.error = function (e) {\n      this.o.onError(e);\n    };\n\n    SwitchObserver.prototype.completed = function () {\n      this.stopped = true;\n      !this.hasLatest && this.o.onCompleted();\n    };\n\n    inherits(InnerObserver, AbstractObserver);\n    function InnerObserver(parent, id) {\n      this.parent = parent;\n      this.id = id;\n      AbstractObserver.call(this);\n    }\n    InnerObserver.prototype.next = function (x) {\n      this.parent.latest === this.id && this.parent.o.onNext(x);\n    };\n\n    InnerObserver.prototype.error = function (e) {\n      this.parent.latest === this.id && this.parent.o.onError(e);\n    };\n\n    InnerObserver.prototype.completed = function () {\n      if (this.parent.latest === this.id) {\n        this.parent.hasLatest = false;\n        this.parent.stopped && this.parent.o.onCompleted();\n      }\n    };\n\n    return SwitchObservable;\n  }(ObservableBase));\n\n  /**\n  * Transforms an observable sequence of observable sequences into an observable sequence producing values only from the most recent observable sequence.\n  * @returns {Observable} The observable sequence that at any point in time produces the elements of the most recent inner observable sequence that has been received.\n  */\n  observableProto['switch'] = observableProto.switchLatest = function () {\n    return new SwitchObservable(this);\n  };\n\n  var TakeUntilObservable = (function(__super__) {\n    inherits(TakeUntilObservable, __super__);\n\n    function TakeUntilObservable(source, other) {\n      this.source = source;\n      this.other = isPromise(other) ? observableFromPromise(other) : other;\n      __super__.call(this);\n    }\n\n    TakeUntilObservable.prototype.subscribeCore = function(o) {\n      return new BinaryDisposable(\n        this.source.subscribe(o),\n        this.other.subscribe(new TakeUntilObserver(o))\n      );\n    };\n\n    return TakeUntilObservable;\n  }(ObservableBase));\n\n  var TakeUntilObserver = (function(__super__) {\n    inherits(TakeUntilObserver, __super__);\n    function TakeUntilObserver(o) {\n      this._o = o;\n      __super__.call(this);\n    }\n\n    TakeUntilObserver.prototype.next = function () {\n      this._o.onCompleted();\n    };\n\n    TakeUntilObserver.prototype.error = function (err) {\n      this._o.onError(err);\n    };\n\n    TakeUntilObserver.prototype.onCompleted = noop;\n\n    return TakeUntilObserver;\n  }(AbstractObserver));\n\n  /**\n   * Returns the values from the source observable sequence until the other observable sequence produces a value.\n   * @param {Observable | Promise} other Observable sequence or Promise that terminates propagation of elements of the source sequence.\n   * @returns {Observable} An observable sequence containing the elements of the source sequence up to the point the other sequence interrupted further propagation.\n   */\n  observableProto.takeUntil = function (other) {\n    return new TakeUntilObservable(this, other);\n  };\n\n  function falseFactory() { return false; }\n  function argumentsToArray() {\n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    return args;\n  }\n\n  var WithLatestFromObservable = (function(__super__) {\n    inherits(WithLatestFromObservable, __super__);\n    function WithLatestFromObservable(source, sources, resultSelector) {\n      this._s = source;\n      this._ss = sources;\n      this._cb = resultSelector;\n      __super__.call(this);\n    }\n\n    WithLatestFromObservable.prototype.subscribeCore = function (o) {\n      var len = this._ss.length;\n      var state = {\n        hasValue: arrayInitialize(len, falseFactory),\n        hasValueAll: false,\n        values: new Array(len)\n      };\n\n      var n = this._ss.length, subscriptions = new Array(n + 1);\n      for (var i = 0; i < n; i++) {\n        var other = this._ss[i], sad = new SingleAssignmentDisposable();\n        isPromise(other) && (other = observableFromPromise(other));\n        sad.setDisposable(other.subscribe(new WithLatestFromOtherObserver(o, i, state)));\n        subscriptions[i] = sad;\n      }\n\n      var outerSad = new SingleAssignmentDisposable();\n      outerSad.setDisposable(this._s.subscribe(new WithLatestFromSourceObserver(o, this._cb, state)));\n      subscriptions[n] = outerSad;\n\n      return new NAryDisposable(subscriptions);\n    };\n\n    return WithLatestFromObservable;\n  }(ObservableBase));\n\n  var WithLatestFromOtherObserver = (function (__super__) {\n    inherits(WithLatestFromOtherObserver, __super__);\n    function WithLatestFromOtherObserver(o, i, state) {\n      this._o = o;\n      this._i = i;\n      this._state = state;\n      __super__.call(this);\n    }\n\n    WithLatestFromOtherObserver.prototype.next = function (x) {\n      this._state.values[this._i] = x;\n      this._state.hasValue[this._i] = true;\n      this._state.hasValueAll = this._state.hasValue.every(identity);\n    };\n\n    WithLatestFromOtherObserver.prototype.error = function (e) {\n      this._o.onError(e);\n    };\n\n    WithLatestFromOtherObserver.prototype.completed = noop;\n\n    return WithLatestFromOtherObserver;\n  }(AbstractObserver));\n\n  var WithLatestFromSourceObserver = (function (__super__) {\n    inherits(WithLatestFromSourceObserver, __super__);\n    function WithLatestFromSourceObserver(o, cb, state) {\n      this._o = o;\n      this._cb = cb;\n      this._state = state;\n      __super__.call(this);\n    }\n\n    WithLatestFromSourceObserver.prototype.next = function (x) {\n      var allValues = [x].concat(this._state.values);\n      if (!this._state.hasValueAll) { return; }\n      var res = tryCatch(this._cb).apply(null, allValues);\n      if (res === errorObj) { return this._o.onError(res.e); }\n      this._o.onNext(res);\n    };\n\n    WithLatestFromSourceObserver.prototype.error = function (e) {\n      this._o.onError(e);\n    };\n\n    WithLatestFromSourceObserver.prototype.completed = function () {\n      this._o.onCompleted();\n    };\n\n    return WithLatestFromSourceObserver;\n  }(AbstractObserver));\n\n  /**\n   * Merges the specified observable sequences into one observable sequence by using the selector function only when the (first) source observable sequence produces an element.\n   * @returns {Observable} An observable sequence containing the result of combining elements of the sources using the specified result selector function.\n   */\n  observableProto.withLatestFrom = function () {\n    if (arguments.length === 0) { throw new Error('invalid arguments'); }\n\n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    var resultSelector = isFunction(args[len - 1]) ? args.pop() : argumentsToArray;\n    Array.isArray(args[0]) && (args = args[0]);\n\n    return new WithLatestFromObservable(this, args, resultSelector);\n  };\n\n  function falseFactory() { return false; }\n  function emptyArrayFactory() { return []; }\n\n  var ZipObservable = (function(__super__) {\n    inherits(ZipObservable, __super__);\n    function ZipObservable(sources, resultSelector) {\n      this._s = sources;\n      this._cb = resultSelector;\n      __super__.call(this);\n    }\n\n    ZipObservable.prototype.subscribeCore = function(observer) {\n      var n = this._s.length,\n          subscriptions = new Array(n),\n          done = arrayInitialize(n, falseFactory),\n          q = arrayInitialize(n, emptyArrayFactory);\n\n      for (var i = 0; i < n; i++) {\n        var source = this._s[i], sad = new SingleAssignmentDisposable();\n        subscriptions[i] = sad;\n        isPromise(source) && (source = observableFromPromise(source));\n        sad.setDisposable(source.subscribe(new ZipObserver(observer, i, this, q, done)));\n      }\n\n      return new NAryDisposable(subscriptions);\n    };\n\n    return ZipObservable;\n  }(ObservableBase));\n\n  var ZipObserver = (function (__super__) {\n    inherits(ZipObserver, __super__);\n    function ZipObserver(o, i, p, q, d) {\n      this._o = o;\n      this._i = i;\n      this._p = p;\n      this._q = q;\n      this._d = d;\n      __super__.call(this);\n    }\n\n    function notEmpty(x) { return x.length > 0; }\n    function shiftEach(x) { return x.shift(); }\n    function notTheSame(i) {\n      return function (x, j) {\n        return j !== i;\n      };\n    }\n\n    ZipObserver.prototype.next = function (x) {\n      this._q[this._i].push(x);\n      if (this._q.every(notEmpty)) {\n        var queuedValues = this._q.map(shiftEach);\n        var res = tryCatch(this._p._cb).apply(null, queuedValues);\n        if (res === errorObj) { return this._o.onError(res.e); }\n        this._o.onNext(res);\n      } else if (this._d.filter(notTheSame(this._i)).every(identity)) {\n        this._o.onCompleted();\n      }\n    };\n\n    ZipObserver.prototype.error = function (e) {\n      this._o.onError(e);\n    };\n\n    ZipObserver.prototype.completed = function () {\n      this._d[this._i] = true;\n      this._d.every(identity) && this._o.onCompleted();\n    };\n\n    return ZipObserver;\n  }(AbstractObserver));\n\n  /**\n   * Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences or an array have produced an element at a corresponding index.\n   * The last element in the arguments must be a function to invoke for each series of elements at corresponding indexes in the args.\n   * @returns {Observable} An observable sequence containing the result of combining elements of the args using the specified result selector function.\n   */\n  observableProto.zip = function () {\n    if (arguments.length === 0) { throw new Error('invalid arguments'); }\n\n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    var resultSelector = isFunction(args[len - 1]) ? args.pop() : argumentsToArray;\n    Array.isArray(args[0]) && (args = args[0]);\n\n    var parent = this;\n    args.unshift(parent);\n\n    return new ZipObservable(args, resultSelector);\n  };\n\n  /**\n   * Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.\n   * @param arguments Observable sources.\n   * @param {Function} resultSelector Function to invoke for each series of elements at corresponding indexes in the sources.\n   * @returns {Observable} An observable sequence containing the result of combining elements of the sources using the specified result selector function.\n   */\n  Observable.zip = function () {\n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    if (Array.isArray(args[0])) {\n      args = isFunction(args[1]) ? args[0].concat(args[1]) : args[0];\n    }\n    var first = args.shift();\n    return first.zip.apply(first, args);\n  };\n\nfunction falseFactory() { return false; }\nfunction emptyArrayFactory() { return []; }\nfunction argumentsToArray() {\n  var len = arguments.length, args = new Array(len);\n  for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n  return args;\n}\n\nvar ZipIterableObservable = (function(__super__) {\n  inherits(ZipIterableObservable, __super__);\n  function ZipIterableObservable(sources, cb) {\n    this.sources = sources;\n    this._cb = cb;\n    __super__.call(this);\n  }\n\n  ZipIterableObservable.prototype.subscribeCore = function (o) {\n    var sources = this.sources, len = sources.length, subscriptions = new Array(len);\n\n    var state = {\n      q: arrayInitialize(len, emptyArrayFactory),\n      done: arrayInitialize(len, falseFactory),\n      cb: this._cb,\n      o: o\n    };\n\n    for (var i = 0; i < len; i++) {\n      (function (i) {\n        var source = sources[i], sad = new SingleAssignmentDisposable();\n        (isArrayLike(source) || isIterable(source)) && (source = observableFrom(source));\n\n        subscriptions[i] = sad;\n        sad.setDisposable(source.subscribe(new ZipIterableObserver(state, i)));\n      }(i));\n    }\n\n    return new NAryDisposable(subscriptions);\n  };\n\n  return ZipIterableObservable;\n}(ObservableBase));\n\nvar ZipIterableObserver = (function (__super__) {\n  inherits(ZipIterableObserver, __super__);\n  function ZipIterableObserver(s, i) {\n    this._s = s;\n    this._i = i;\n    __super__.call(this);\n  }\n\n  function notEmpty(x) { return x.length > 0; }\n  function shiftEach(x) { return x.shift(); }\n  function notTheSame(i) {\n    return function (x, j) {\n      return j !== i;\n    };\n  }\n\n  ZipIterableObserver.prototype.next = function (x) {\n    this._s.q[this._i].push(x);\n    if (this._s.q.every(notEmpty)) {\n      var queuedValues = this._s.q.map(shiftEach),\n          res = tryCatch(this._s.cb).apply(null, queuedValues);\n      if (res === errorObj) { return this._s.o.onError(res.e); }\n      this._s.o.onNext(res);\n    } else if (this._s.done.filter(notTheSame(this._i)).every(identity)) {\n      this._s.o.onCompleted();\n    }\n  };\n\n  ZipIterableObserver.prototype.error = function (e) { this._s.o.onError(e); };\n\n  ZipIterableObserver.prototype.completed = function () {\n    this._s.done[this._i] = true;\n    this._s.done.every(identity) && this._s.o.onCompleted();\n  };\n\n  return ZipIterableObserver;\n}(AbstractObserver));\n\n/**\n * Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences or an array have produced an element at a corresponding index.\n * The last element in the arguments must be a function to invoke for each series of elements at corresponding indexes in the args.\n * @returns {Observable} An observable sequence containing the result of combining elements of the args using the specified result selector function.\n */\nobservableProto.zipIterable = function () {\n  if (arguments.length === 0) { throw new Error('invalid arguments'); }\n\n  var len = arguments.length, args = new Array(len);\n  for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n  var resultSelector = isFunction(args[len - 1]) ? args.pop() : argumentsToArray;\n\n  var parent = this;\n  args.unshift(parent);\n  return new ZipIterableObservable(args, resultSelector);\n};\n\n  function asObservable(source) {\n    return function subscribe(o) { return source.subscribe(o); };\n  }\n\n  /**\n   *  Hides the identity of an observable sequence.\n   * @returns {Observable} An observable sequence that hides the identity of the source sequence.\n   */\n  observableProto.asObservable = function () {\n    return new AnonymousObservable(asObservable(this), this);\n  };\n\n  var DematerializeObservable = (function (__super__) {\n    inherits(DematerializeObservable, __super__);\n    function DematerializeObservable(source) {\n      this.source = source;\n      __super__.call(this);\n    }\n\n    DematerializeObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new DematerializeObserver(o));\n    };\n\n    return DematerializeObservable;\n  }(ObservableBase));\n\n  var DematerializeObserver = (function (__super__) {\n    inherits(DematerializeObserver, __super__);\n\n    function DematerializeObserver(o) {\n      this._o = o;\n      __super__.call(this);\n    }\n\n    DematerializeObserver.prototype.next = function (x) { x.accept(this._o); };\n    DematerializeObserver.prototype.error = function (e) { this._o.onError(e); };\n    DematerializeObserver.prototype.completed = function () { this._o.onCompleted(); };\n\n    return DematerializeObserver;\n  }(AbstractObserver));\n\n  /**\n   * Dematerializes the explicit notification values of an observable sequence as implicit notifications.\n   * @returns {Observable} An observable sequence exhibiting the behavior corresponding to the source sequence's notification values.\n   */\n  observableProto.dematerialize = function () {\n    return new DematerializeObservable(this);\n  };\n\n  var DistinctUntilChangedObservable = (function(__super__) {\n    inherits(DistinctUntilChangedObservable, __super__);\n    function DistinctUntilChangedObservable(source, keyFn, comparer) {\n      this.source = source;\n      this.keyFn = keyFn;\n      this.comparer = comparer;\n      __super__.call(this);\n    }\n\n    DistinctUntilChangedObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new DistinctUntilChangedObserver(o, this.keyFn, this.comparer));\n    };\n\n    return DistinctUntilChangedObservable;\n  }(ObservableBase));\n\n  var DistinctUntilChangedObserver = (function(__super__) {\n    inherits(DistinctUntilChangedObserver, __super__);\n    function DistinctUntilChangedObserver(o, keyFn, comparer) {\n      this.o = o;\n      this.keyFn = keyFn;\n      this.comparer = comparer;\n      this.hasCurrentKey = false;\n      this.currentKey = null;\n      __super__.call(this);\n    }\n\n    DistinctUntilChangedObserver.prototype.next = function (x) {\n      var key = x, comparerEquals;\n      if (isFunction(this.keyFn)) {\n        key = tryCatch(this.keyFn)(x);\n        if (key === errorObj) { return this.o.onError(key.e); }\n      }\n      if (this.hasCurrentKey) {\n        comparerEquals = tryCatch(this.comparer)(this.currentKey, key);\n        if (comparerEquals === errorObj) { return this.o.onError(comparerEquals.e); }\n      }\n      if (!this.hasCurrentKey || !comparerEquals) {\n        this.hasCurrentKey = true;\n        this.currentKey = key;\n        this.o.onNext(x);\n      }\n    };\n    DistinctUntilChangedObserver.prototype.error = function(e) {\n      this.o.onError(e);\n    };\n    DistinctUntilChangedObserver.prototype.completed = function () {\n      this.o.onCompleted();\n    };\n\n    return DistinctUntilChangedObserver;\n  }(AbstractObserver));\n\n  /**\n  *  Returns an observable sequence that contains only distinct contiguous elements according to the keyFn and the comparer.\n  * @param {Function} [keyFn] A function to compute the comparison key for each element. If not provided, it projects the value.\n  * @param {Function} [comparer] Equality comparer for computed key values. If not provided, defaults to an equality comparer function.\n  * @returns {Observable} An observable sequence only containing the distinct contiguous elements, based on a computed key value, from the source sequence.\n  */\n  observableProto.distinctUntilChanged = function (keyFn, comparer) {\n    comparer || (comparer = defaultComparer);\n    return new DistinctUntilChangedObservable(this, keyFn, comparer);\n  };\n\n  var TapObservable = (function(__super__) {\n    inherits(TapObservable,__super__);\n    function TapObservable(source, observerOrOnNext, onError, onCompleted) {\n      this.source = source;\n      this._oN = observerOrOnNext;\n      this._oE = onError;\n      this._oC = onCompleted;\n      __super__.call(this);\n    }\n\n    TapObservable.prototype.subscribeCore = function(o) {\n      return this.source.subscribe(new InnerObserver(o, this));\n    };\n\n    inherits(InnerObserver, AbstractObserver);\n    function InnerObserver(o, p) {\n      this.o = o;\n      this.t = !p._oN || isFunction(p._oN) ?\n        observerCreate(p._oN || noop, p._oE || noop, p._oC || noop) :\n        p._oN;\n      this.isStopped = false;\n      AbstractObserver.call(this);\n    }\n    InnerObserver.prototype.next = function(x) {\n      var res = tryCatch(this.t.onNext).call(this.t, x);\n      if (res === errorObj) { this.o.onError(res.e); }\n      this.o.onNext(x);\n    };\n    InnerObserver.prototype.error = function(err) {\n      var res = tryCatch(this.t.onError).call(this.t, err);\n      if (res === errorObj) { return this.o.onError(res.e); }\n      this.o.onError(err);\n    };\n    InnerObserver.prototype.completed = function() {\n      var res = tryCatch(this.t.onCompleted).call(this.t);\n      if (res === errorObj) { return this.o.onError(res.e); }\n      this.o.onCompleted();\n    };\n\n    return TapObservable;\n  }(ObservableBase));\n\n  /**\n  *  Invokes an action for each element in the observable sequence and invokes an action upon graceful or exceptional termination of the observable sequence.\n  *  This method can be used for debugging, logging, etc. of query behavior by intercepting the message stream to run arbitrary actions for messages on the pipeline.\n  * @param {Function | Observer} observerOrOnNext Action to invoke for each element in the observable sequence or an o.\n  * @param {Function} [onError]  Action to invoke upon exceptional termination of the observable sequence. Used if only the observerOrOnNext parameter is also a function.\n  * @param {Function} [onCompleted]  Action to invoke upon graceful termination of the observable sequence. Used if only the observerOrOnNext parameter is also a function.\n  * @returns {Observable} The source sequence with the side-effecting behavior applied.\n  */\n  observableProto['do'] = observableProto.tap = observableProto.doAction = function (observerOrOnNext, onError, onCompleted) {\n    return new TapObservable(this, observerOrOnNext, onError, onCompleted);\n  };\n\n  /**\n  *  Invokes an action for each element in the observable sequence.\n  *  This method can be used for debugging, logging, etc. of query behavior by intercepting the message stream to run arbitrary actions for messages on the pipeline.\n  * @param {Function} onNext Action to invoke for each element in the observable sequence.\n  * @param {Any} [thisArg] Object to use as this when executing callback.\n  * @returns {Observable} The source sequence with the side-effecting behavior applied.\n  */\n  observableProto.doOnNext = observableProto.tapOnNext = function (onNext, thisArg) {\n    return this.tap(typeof thisArg !== 'undefined' ? function (x) { onNext.call(thisArg, x); } : onNext);\n  };\n\n  /**\n  *  Invokes an action upon exceptional termination of the observable sequence.\n  *  This method can be used for debugging, logging, etc. of query behavior by intercepting the message stream to run arbitrary actions for messages on the pipeline.\n  * @param {Function} onError Action to invoke upon exceptional termination of the observable sequence.\n  * @param {Any} [thisArg] Object to use as this when executing callback.\n  * @returns {Observable} The source sequence with the side-effecting behavior applied.\n  */\n  observableProto.doOnError = observableProto.tapOnError = function (onError, thisArg) {\n    return this.tap(noop, typeof thisArg !== 'undefined' ? function (e) { onError.call(thisArg, e); } : onError);\n  };\n\n  /**\n  *  Invokes an action upon graceful termination of the observable sequence.\n  *  This method can be used for debugging, logging, etc. of query behavior by intercepting the message stream to run arbitrary actions for messages on the pipeline.\n  * @param {Function} onCompleted Action to invoke upon graceful termination of the observable sequence.\n  * @param {Any} [thisArg] Object to use as this when executing callback.\n  * @returns {Observable} The source sequence with the side-effecting behavior applied.\n  */\n  observableProto.doOnCompleted = observableProto.tapOnCompleted = function (onCompleted, thisArg) {\n    return this.tap(noop, null, typeof thisArg !== 'undefined' ? function () { onCompleted.call(thisArg); } : onCompleted);\n  };\n\n  var FinallyObservable = (function (__super__) {\n    inherits(FinallyObservable, __super__);\n    function FinallyObservable(source, fn, thisArg) {\n      this.source = source;\n      this._fn = bindCallback(fn, thisArg, 0);\n      __super__.call(this);\n    }\n\n    FinallyObservable.prototype.subscribeCore = function (o) {\n      var d = tryCatch(this.source.subscribe).call(this.source, o);\n      if (d === errorObj) {\n        this._fn();\n        thrower(d.e);\n      }\n\n      return new FinallyDisposable(d, this._fn);\n    };\n\n    function FinallyDisposable(s, fn) {\n      this.isDisposed = false;\n      this._s = s;\n      this._fn = fn;\n    }\n    FinallyDisposable.prototype.dispose = function () {\n      if (!this.isDisposed) {\n        var res = tryCatch(this._s.dispose).call(this._s);\n        this._fn();\n        res === errorObj && thrower(res.e);\n      }\n    };\n\n    return FinallyObservable;\n\n  }(ObservableBase));\n\n  /**\n   *  Invokes a specified action after the source observable sequence terminates gracefully or exceptionally.\n   * @param {Function} finallyAction Action to invoke after the source observable sequence terminates.\n   * @returns {Observable} Source sequence with the action-invoking termination behavior applied.\n   */\n  observableProto['finally'] = function (action, thisArg) {\n    return new FinallyObservable(this, action, thisArg);\n  };\n\n  var IgnoreElementsObservable = (function(__super__) {\n    inherits(IgnoreElementsObservable, __super__);\n\n    function IgnoreElementsObservable(source) {\n      this.source = source;\n      __super__.call(this);\n    }\n\n    IgnoreElementsObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new InnerObserver(o));\n    };\n\n    function InnerObserver(o) {\n      this.o = o;\n      this.isStopped = false;\n    }\n    InnerObserver.prototype.onNext = noop;\n    InnerObserver.prototype.onError = function (err) {\n      if(!this.isStopped) {\n        this.isStopped = true;\n        this.o.onError(err);\n      }\n    };\n    InnerObserver.prototype.onCompleted = function () {\n      if(!this.isStopped) {\n        this.isStopped = true;\n        this.o.onCompleted();\n      }\n    };\n    InnerObserver.prototype.dispose = function() { this.isStopped = true; };\n    InnerObserver.prototype.fail = function (e) {\n      if (!this.isStopped) {\n        this.isStopped = true;\n        this.observer.onError(e);\n        return true;\n      }\n\n      return false;\n    };\n\n    return IgnoreElementsObservable;\n  }(ObservableBase));\n\n  /**\n   *  Ignores all elements in an observable sequence leaving only the termination messages.\n   * @returns {Observable} An empty observable sequence that signals termination, successful or exceptional, of the source sequence.\n   */\n  observableProto.ignoreElements = function () {\n    return new IgnoreElementsObservable(this);\n  };\n\n  var MaterializeObservable = (function (__super__) {\n    inherits(MaterializeObservable, __super__);\n    function MaterializeObservable(source, fn) {\n      this.source = source;\n      __super__.call(this);\n    }\n\n    MaterializeObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new MaterializeObserver(o));\n    };\n\n    return MaterializeObservable;\n  }(ObservableBase));\n\n  var MaterializeObserver = (function (__super__) {\n    inherits(MaterializeObserver, __super__);\n\n    function MaterializeObserver(o) {\n      this._o = o;\n      __super__.call(this);\n    }\n\n    MaterializeObserver.prototype.next = function (x) { this._o.onNext(notificationCreateOnNext(x)) };\n    MaterializeObserver.prototype.error = function (e) { this._o.onNext(notificationCreateOnError(e)); this._o.onCompleted(); };\n    MaterializeObserver.prototype.completed = function () { this._o.onNext(notificationCreateOnCompleted()); this._o.onCompleted(); };\n\n    return MaterializeObserver;\n  }(AbstractObserver));\n\n  /**\n   *  Materializes the implicit notifications of an observable sequence as explicit notification values.\n   * @returns {Observable} An observable sequence containing the materialized notification values from the source sequence.\n   */\n  observableProto.materialize = function () {\n    return new MaterializeObservable(this);\n  };\n\n  /**\n   *  Repeats the observable sequence a specified number of times. If the repeat count is not specified, the sequence repeats indefinitely.\n   * @param {Number} [repeatCount]  Number of times to repeat the sequence. If not provided, repeats the sequence indefinitely.\n   * @returns {Observable} The observable sequence producing the elements of the given sequence repeatedly.\n   */\n  observableProto.repeat = function (repeatCount) {\n    return enumerableRepeat(this, repeatCount).concat();\n  };\n\n  /**\n   *  Repeats the source observable sequence the specified number of times or until it successfully terminates. If the retry count is not specified, it retries indefinitely.\n   *  Note if you encounter an error and want it to retry once, then you must use .retry(2);\n   *\n   * @example\n   *  var res = retried = retry.repeat();\n   *  var res = retried = retry.repeat(2);\n   * @param {Number} [retryCount]  Number of times to retry the sequence. If not provided, retry the sequence indefinitely.\n   * @returns {Observable} An observable sequence producing the elements of the given sequence repeatedly until it terminates successfully.\n   */\n  observableProto.retry = function (retryCount) {\n    return enumerableRepeat(this, retryCount).catchError();\n  };\n\n  function repeat(value) {\n    return {\n      '@@iterator': function () {\n        return {\n          next: function () {\n            return { done: false, value: value };\n          }\n        };\n      }\n    };\n  }\n\n  var RetryWhenObservable = (function(__super__) {\n    function createDisposable(state) {\n      return {\n        isDisposed: false,\n        dispose: function () {\n          if (!this.isDisposed) {\n            this.isDisposed = true;\n            state.isDisposed = true;\n          }\n        }\n      };\n    }\n\n    function RetryWhenObservable(source, notifier) {\n      this.source = source;\n      this._notifier = notifier;\n      __super__.call(this);\n    }\n\n    inherits(RetryWhenObservable, __super__);\n\n    RetryWhenObservable.prototype.subscribeCore = function (o) {\n      var exceptions = new Subject(),\n        notifier = new Subject(),\n        handled = this._notifier(exceptions),\n        notificationDisposable = handled.subscribe(notifier);\n\n      var e = this.source['@@iterator']();\n\n      var state = { isDisposed: false },\n        lastError,\n        subscription = new SerialDisposable();\n      var cancelable = currentThreadScheduler.scheduleRecursive(null, function (_, recurse) {\n        if (state.isDisposed) { return; }\n        var currentItem = e.next();\n\n        if (currentItem.done) {\n          if (lastError) {\n            o.onError(lastError);\n          } else {\n            o.onCompleted();\n          }\n          return;\n        }\n\n        // Check if promise\n        var currentValue = currentItem.value;\n        isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));\n\n        var outer = new SingleAssignmentDisposable();\n        var inner = new SingleAssignmentDisposable();\n        subscription.setDisposable(new BinaryDisposable(inner, outer));\n        outer.setDisposable(currentValue.subscribe(\n          function(x) { o.onNext(x); },\n          function (exn) {\n            inner.setDisposable(notifier.subscribe(recurse, function(ex) {\n              o.onError(ex);\n            }, function() {\n              o.onCompleted();\n            }));\n\n            exceptions.onNext(exn);\n            outer.dispose();\n          },\n          function() { o.onCompleted(); }));\n      });\n\n      return new NAryDisposable([notificationDisposable, subscription, cancelable, createDisposable(state)]);\n    };\n\n    return RetryWhenObservable;\n  }(ObservableBase));\n\n  observableProto.retryWhen = function (notifier) {\n    return new RetryWhenObservable(repeat(this), notifier);\n  };\n\n  function repeat(value) {\n    return {\n      '@@iterator': function () {\n        return {\n          next: function () {\n            return { done: false, value: value };\n          }\n        };\n      }\n    };\n  }\n\n  var RepeatWhenObservable = (function(__super__) {\n    function createDisposable(state) {\n      return {\n        isDisposed: false,\n        dispose: function () {\n          if (!this.isDisposed) {\n            this.isDisposed = true;\n            state.isDisposed = true;\n          }\n        }\n      };\n    }\n\n    function RepeatWhenObservable(source, notifier) {\n      this.source = source;\n      this._notifier = notifier;\n      __super__.call(this);\n    }\n\n    inherits(RepeatWhenObservable, __super__);\n\n    RepeatWhenObservable.prototype.subscribeCore = function (o) {\n      var completions = new Subject(),\n        notifier = new Subject(),\n        handled = this._notifier(completions),\n        notificationDisposable = handled.subscribe(notifier);\n\n      var e = this.source['@@iterator']();\n\n      var state = { isDisposed: false },\n        lastError,\n        subscription = new SerialDisposable();\n      var cancelable = currentThreadScheduler.scheduleRecursive(null, function (_, recurse) {\n        if (state.isDisposed) { return; }\n        var currentItem = e.next();\n\n        if (currentItem.done) {\n          if (lastError) {\n            o.onError(lastError);\n          } else {\n            o.onCompleted();\n          }\n          return;\n        }\n\n        // Check if promise\n        var currentValue = currentItem.value;\n        isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));\n\n        var outer = new SingleAssignmentDisposable();\n        var inner = new SingleAssignmentDisposable();\n        subscription.setDisposable(new BinaryDisposable(inner, outer));\n        outer.setDisposable(currentValue.subscribe(\n          function(x) { o.onNext(x); },\n          function (exn) { o.onError(exn); },\n          function() {\n            inner.setDisposable(notifier.subscribe(recurse, function(ex) {\n              o.onError(ex);\n            }, function() {\n              o.onCompleted();\n            }));\n\n            completions.onNext(null);\n            outer.dispose();\n          }));\n      });\n\n      return new NAryDisposable([notificationDisposable, subscription, cancelable, createDisposable(state)]);\n    };\n\n    return RepeatWhenObservable;\n  }(ObservableBase));\n\n  observableProto.repeatWhen = function (notifier) {\n    return new RepeatWhenObservable(repeat(this), notifier);\n  };\n\n  var ScanObservable = (function(__super__) {\n    inherits(ScanObservable, __super__);\n    function ScanObservable(source, accumulator, hasSeed, seed) {\n      this.source = source;\n      this.accumulator = accumulator;\n      this.hasSeed = hasSeed;\n      this.seed = seed;\n      __super__.call(this);\n    }\n\n    ScanObservable.prototype.subscribeCore = function(o) {\n      return this.source.subscribe(new ScanObserver(o,this));\n    };\n\n    return ScanObservable;\n  }(ObservableBase));\n\n  var ScanObserver = (function (__super__) {\n    inherits(ScanObserver, __super__);\n    function ScanObserver(o, parent) {\n      this._o = o;\n      this._p = parent;\n      this._fn = parent.accumulator;\n      this._hs = parent.hasSeed;\n      this._s = parent.seed;\n      this._ha = false;\n      this._a = null;\n      this._hv = false;\n      this._i = 0;\n      __super__.call(this);\n    }\n\n    ScanObserver.prototype.next = function (x) {\n      !this._hv && (this._hv = true);\n      if (this._ha) {\n        this._a = tryCatch(this._fn)(this._a, x, this._i, this._p);\n      } else {\n        this._a = this._hs ? tryCatch(this._fn)(this._s, x, this._i, this._p) : x;\n        this._ha = true;\n      }\n      if (this._a === errorObj) { return this._o.onError(this._a.e); }\n      this._o.onNext(this._a);\n      this._i++;\n    };\n\n    ScanObserver.prototype.error = function (e) {\n      this._o.onError(e);\n    };\n\n    ScanObserver.prototype.completed = function () {\n      !this._hv && this._hs && this._o.onNext(this._s);\n      this._o.onCompleted();\n    };\n\n    return ScanObserver;\n  }(AbstractObserver));\n\n  /**\n  *  Applies an accumulator function over an observable sequence and returns each intermediate result. The optional seed value is used as the initial accumulator value.\n  *  For aggregation behavior with no intermediate results, see Observable.aggregate.\n  * @param {Mixed} [seed] The initial accumulator value.\n  * @param {Function} accumulator An accumulator function to be invoked on each element.\n  * @returns {Observable} An observable sequence containing the accumulated values.\n  */\n  observableProto.scan = function () {\n    var hasSeed = false, seed, accumulator = arguments[0];\n    if (arguments.length === 2) {\n      hasSeed = true;\n      seed = arguments[1];\n    }\n    return new ScanObservable(this, accumulator, hasSeed, seed);\n  };\n\n  var SkipLastObservable = (function (__super__) {\n    inherits(SkipLastObservable, __super__);\n    function SkipLastObservable(source, c) {\n      this.source = source;\n      this._c = c;\n      __super__.call(this);\n    }\n\n    SkipLastObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new SkipLastObserver(o, this._c));\n    };\n\n    return SkipLastObservable;\n  }(ObservableBase));\n\n  var SkipLastObserver = (function (__super__) {\n    inherits(SkipLastObserver, __super__);\n    function SkipLastObserver(o, c) {\n      this._o = o;\n      this._c = c;\n      this._q = [];\n      __super__.call(this);\n    }\n\n    SkipLastObserver.prototype.next = function (x) {\n      this._q.push(x);\n      this._q.length > this._c && this._o.onNext(this._q.shift());\n    };\n\n    SkipLastObserver.prototype.error = function (e) {\n      this._o.onError(e);\n    };\n\n    SkipLastObserver.prototype.completed = function () {\n      this._o.onCompleted();\n    };\n\n    return SkipLastObserver;\n  }(AbstractObserver));\n\n  /**\n   *  Bypasses a specified number of elements at the end of an observable sequence.\n   * @description\n   *  This operator accumulates a queue with a length enough to store the first `count` elements. As more elements are\n   *  received, elements are taken from the front of the queue and produced on the result sequence. This causes elements to be delayed.\n   * @param count Number of elements to bypass at the end of the source sequence.\n   * @returns {Observable} An observable sequence containing the source sequence elements except for the bypassed ones at the end.\n   */\n  observableProto.skipLast = function (count) {\n    if (count < 0) { throw new ArgumentOutOfRangeError(); }\n    return new SkipLastObservable(this, count);\n  };\n\n  /**\n   *  Prepends a sequence of values to an observable sequence with an optional scheduler and an argument list of values to prepend.\n   *  @example\n   *  var res = source.startWith(1, 2, 3);\n   *  var res = source.startWith(Rx.Scheduler.timeout, 1, 2, 3);\n   * @param {Arguments} args The specified values to prepend to the observable sequence\n   * @returns {Observable} The source sequence prepended with the specified values.\n   */\n  observableProto.startWith = function () {\n    var values, scheduler, start = 0;\n    if (!!arguments.length && isScheduler(arguments[0])) {\n      scheduler = arguments[0];\n      start = 1;\n    } else {\n      scheduler = immediateScheduler;\n    }\n    for(var args = [], i = start, len = arguments.length; i < len; i++) { args.push(arguments[i]); }\n    return enumerableOf([observableFromArray(args, scheduler), this]).concat();\n  };\n\n  var TakeLastObserver = (function (__super__) {\n    inherits(TakeLastObserver, __super__);\n    function TakeLastObserver(o, c) {\n      this._o = o;\n      this._c = c;\n      this._q = [];\n      __super__.call(this);\n    }\n\n    TakeLastObserver.prototype.next = function (x) {\n      this._q.push(x);\n      this._q.length > this._c && this._q.shift();\n    };\n\n    TakeLastObserver.prototype.error = function (e) {\n      this._o.onError(e);\n    };\n\n    TakeLastObserver.prototype.completed = function () {\n      while (this._q.length > 0) { this._o.onNext(this._q.shift()); }\n      this._o.onCompleted();\n    };\n\n    return TakeLastObserver;\n  }(AbstractObserver));\n\n  /**\n   *  Returns a specified number of contiguous elements from the end of an observable sequence.\n   * @description\n   *  This operator accumulates a buffer with a length enough to store elements count elements. Upon completion of\n   *  the source sequence, this buffer is drained on the result sequence. This causes the elements to be delayed.\n   * @param {Number} count Number of elements to take from the end of the source sequence.\n   * @returns {Observable} An observable sequence containing the specified number of elements from the end of the source sequence.\n   */\n  observableProto.takeLast = function (count) {\n    if (count < 0) { throw new ArgumentOutOfRangeError(); }\n    var source = this;\n    return new AnonymousObservable(function (o) {\n      return source.subscribe(new TakeLastObserver(o, count));\n    }, source);\n  };\n\nobservableProto.flatMapConcat = observableProto.concatMap = function(selector, resultSelector, thisArg) {\n    return new FlatMapObservable(this, selector, resultSelector, thisArg).merge(1);\n};\n  var MapObservable = (function (__super__) {\n    inherits(MapObservable, __super__);\n\n    function MapObservable(source, selector, thisArg) {\n      this.source = source;\n      this.selector = bindCallback(selector, thisArg, 3);\n      __super__.call(this);\n    }\n\n    function innerMap(selector, self) {\n      return function (x, i, o) { return selector.call(this, self.selector(x, i, o), i, o); };\n    }\n\n    MapObservable.prototype.internalMap = function (selector, thisArg) {\n      return new MapObservable(this.source, innerMap(selector, this), thisArg);\n    };\n\n    MapObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new InnerObserver(o, this.selector, this));\n    };\n\n    inherits(InnerObserver, AbstractObserver);\n    function InnerObserver(o, selector, source) {\n      this.o = o;\n      this.selector = selector;\n      this.source = source;\n      this.i = 0;\n      AbstractObserver.call(this);\n    }\n\n    InnerObserver.prototype.next = function(x) {\n      var result = tryCatch(this.selector)(x, this.i++, this.source);\n      if (result === errorObj) { return this.o.onError(result.e); }\n      this.o.onNext(result);\n    };\n\n    InnerObserver.prototype.error = function (e) {\n      this.o.onError(e);\n    };\n\n    InnerObserver.prototype.completed = function () {\n      this.o.onCompleted();\n    };\n\n    return MapObservable;\n\n  }(ObservableBase));\n\n  /**\n  * Projects each element of an observable sequence into a new form by incorporating the element's index.\n  * @param {Function} selector A transform function to apply to each source element; the second parameter of the function represents the index of the source element.\n  * @param {Any} [thisArg] Object to use as this when executing callback.\n  * @returns {Observable} An observable sequence whose elements are the result of invoking the transform function on each element of source.\n  */\n  observableProto.map = observableProto.select = function (selector, thisArg) {\n    var selectorFn = typeof selector === 'function' ? selector : function () { return selector; };\n    return this instanceof MapObservable ?\n      this.internalMap(selectorFn, thisArg) :\n      new MapObservable(this, selectorFn, thisArg);\n  };\n\n  function plucker(args, len) {\n    return function mapper(x) {\n      var currentProp = x;\n      for (var i = 0; i < len; i++) {\n        var p = currentProp[args[i]];\n        if (typeof p !== 'undefined') {\n          currentProp = p;\n        } else {\n          return undefined;\n        }\n      }\n      return currentProp;\n    };\n  }\n\n  /**\n   * Retrieves the value of a specified nested property from all elements in\n   * the Observable sequence.\n   * @param {Arguments} arguments The nested properties to pluck.\n   * @returns {Observable} Returns a new Observable sequence of property values.\n   */\n  observableProto.pluck = function () {\n    var len = arguments.length, args = new Array(len);\n    if (len === 0) { throw new Error('List of properties cannot be empty.'); }\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    return this.map(plucker(args, len));\n  };\n\nobservableProto.flatMap = observableProto.selectMany = function(selector, resultSelector, thisArg) {\n    return new FlatMapObservable(this, selector, resultSelector, thisArg).mergeAll();\n};\n\nRx.Observable.prototype.flatMapLatest = function(selector, resultSelector, thisArg) {\n    return new FlatMapObservable(this, selector, resultSelector, thisArg).switchLatest();\n};\n  var SkipObservable = (function(__super__) {\n    inherits(SkipObservable, __super__);\n    function SkipObservable(source, count) {\n      this.source = source;\n      this._count = count;\n      __super__.call(this);\n    }\n\n    SkipObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new SkipObserver(o, this._count));\n    };\n\n    function SkipObserver(o, c) {\n      this._o = o;\n      this._r = c;\n      AbstractObserver.call(this);\n    }\n\n    inherits(SkipObserver, AbstractObserver);\n\n    SkipObserver.prototype.next = function (x) {\n      if (this._r <= 0) {\n        this._o.onNext(x);\n      } else {\n        this._r--;\n      }\n    };\n    SkipObserver.prototype.error = function(e) { this._o.onError(e); };\n    SkipObserver.prototype.completed = function() { this._o.onCompleted(); };\n\n    return SkipObservable;\n  }(ObservableBase));\n\n  /**\n   * Bypasses a specified number of elements in an observable sequence and then returns the remaining elements.\n   * @param {Number} count The number of elements to skip before returning the remaining elements.\n   * @returns {Observable} An observable sequence that contains the elements that occur after the specified index in the input sequence.\n   */\n  observableProto.skip = function (count) {\n    if (count < 0) { throw new ArgumentOutOfRangeError(); }\n    return new SkipObservable(this, count);\n  };\n\n  var SkipWhileObservable = (function (__super__) {\n    inherits(SkipWhileObservable, __super__);\n    function SkipWhileObservable(source, fn) {\n      this.source = source;\n      this._fn = fn;\n      __super__.call(this);\n    }\n\n    SkipWhileObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new SkipWhileObserver(o, this));\n    };\n\n    return SkipWhileObservable;\n  }(ObservableBase));\n\n  var SkipWhileObserver = (function (__super__) {\n    inherits(SkipWhileObserver, __super__);\n\n    function SkipWhileObserver(o, p) {\n      this._o = o;\n      this._p = p;\n      this._i = 0;\n      this._r = false;\n      __super__.call(this);\n    }\n\n    SkipWhileObserver.prototype.next = function (x) {\n      if (!this._r) {\n        var res = tryCatch(this._p._fn)(x, this._i++, this._p);\n        if (res === errorObj) { return this._o.onError(res.e); }\n        this._r = !res;\n      }\n      this._r && this._o.onNext(x);\n    };\n    SkipWhileObserver.prototype.error = function (e) { this._o.onError(e); };\n    SkipWhileObserver.prototype.completed = function () { this._o.onCompleted(); };\n\n    return SkipWhileObserver;\n  }(AbstractObserver));\n\n  /**\n   *  Bypasses elements in an observable sequence as long as a specified condition is true and then returns the remaining elements.\n   *  The element's index is used in the logic of the predicate function.\n   *\n   *  var res = source.skipWhile(function (value) { return value < 10; });\n   *  var res = source.skipWhile(function (value, index) { return value < 10 || index < 10; });\n   * @param {Function} predicate A function to test each element for a condition; the second parameter of the function represents the index of the source element.\n   * @param {Any} [thisArg] Object to use as this when executing callback.\n   * @returns {Observable} An observable sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.\n   */\n  observableProto.skipWhile = function (predicate, thisArg) {\n    var fn = bindCallback(predicate, thisArg, 3);\n    return new SkipWhileObservable(this, fn);\n  };\n\n  var TakeObservable = (function(__super__) {\n    inherits(TakeObservable, __super__);\n    function TakeObservable(source, count) {\n      this.source = source;\n      this._count = count;\n      __super__.call(this);\n    }\n\n    TakeObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new TakeObserver(o, this._count));\n    };\n\n    function TakeObserver(o, c) {\n      this._o = o;\n      this._c = c;\n      this._r = c;\n      AbstractObserver.call(this);\n    }\n\n    inherits(TakeObserver, AbstractObserver);\n\n    TakeObserver.prototype.next = function (x) {\n      if (this._r-- > 0) {\n        this._o.onNext(x);\n        this._r <= 0 && this._o.onCompleted();\n      }\n    };\n\n    TakeObserver.prototype.error = function (e) { this._o.onError(e); };\n    TakeObserver.prototype.completed = function () { this._o.onCompleted(); };\n\n    return TakeObservable;\n  }(ObservableBase));\n\n  /**\n   *  Returns a specified number of contiguous elements from the start of an observable sequence, using the specified scheduler for the edge case of take(0).\n   * @param {Number} count The number of elements to return.\n   * @param {Scheduler} [scheduler] Scheduler used to produce an OnCompleted message in case <paramref name=\"count count</paramref> is set to 0.\n   * @returns {Observable} An observable sequence that contains the specified number of elements from the start of the input sequence.\n   */\n  observableProto.take = function (count, scheduler) {\n    if (count < 0) { throw new ArgumentOutOfRangeError(); }\n    if (count === 0) { return observableEmpty(scheduler); }\n    return new TakeObservable(this, count);\n  };\n\n  var TakeWhileObservable = (function (__super__) {\n    inherits(TakeWhileObservable, __super__);\n    function TakeWhileObservable(source, fn) {\n      this.source = source;\n      this._fn = fn;\n      __super__.call(this);\n    }\n\n    TakeWhileObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new TakeWhileObserver(o, this));\n    };\n\n    return TakeWhileObservable;\n  }(ObservableBase));\n\n  var TakeWhileObserver = (function (__super__) {\n    inherits(TakeWhileObserver, __super__);\n\n    function TakeWhileObserver(o, p) {\n      this._o = o;\n      this._p = p;\n      this._i = 0;\n      this._r = true;\n      __super__.call(this);\n    }\n\n    TakeWhileObserver.prototype.next = function (x) {\n      if (this._r) {\n        this._r = tryCatch(this._p._fn)(x, this._i++, this._p);\n        if (this._r === errorObj) { return this._o.onError(this._r.e); }\n      }\n      if (this._r) {\n        this._o.onNext(x);\n      } else {\n        this._o.onCompleted();\n      }\n    };\n    TakeWhileObserver.prototype.error = function (e) { this._o.onError(e); };\n    TakeWhileObserver.prototype.completed = function () { this._o.onCompleted(); };\n\n    return TakeWhileObserver;\n  }(AbstractObserver));\n\n  /**\n   *  Returns elements from an observable sequence as long as a specified condition is true.\n   *  The element's index is used in the logic of the predicate function.\n   * @param {Function} predicate A function to test each element for a condition; the second parameter of the function represents the index of the source element.\n   * @param {Any} [thisArg] Object to use as this when executing callback.\n   * @returns {Observable} An observable sequence that contains the elements from the input sequence that occur before the element at which the test no longer passes.\n   */\n  observableProto.takeWhile = function (predicate, thisArg) {\n    var fn = bindCallback(predicate, thisArg, 3);\n    return new TakeWhileObservable(this, fn);\n  };\n\n  var FilterObservable = (function (__super__) {\n    inherits(FilterObservable, __super__);\n\n    function FilterObservable(source, predicate, thisArg) {\n      this.source = source;\n      this.predicate = bindCallback(predicate, thisArg, 3);\n      __super__.call(this);\n    }\n\n    FilterObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new InnerObserver(o, this.predicate, this));\n    };\n\n    function innerPredicate(predicate, self) {\n      return function(x, i, o) { return self.predicate(x, i, o) && predicate.call(this, x, i, o); }\n    }\n\n    FilterObservable.prototype.internalFilter = function(predicate, thisArg) {\n      return new FilterObservable(this.source, innerPredicate(predicate, this), thisArg);\n    };\n\n    inherits(InnerObserver, AbstractObserver);\n    function InnerObserver(o, predicate, source) {\n      this.o = o;\n      this.predicate = predicate;\n      this.source = source;\n      this.i = 0;\n      AbstractObserver.call(this);\n    }\n\n    InnerObserver.prototype.next = function(x) {\n      var shouldYield = tryCatch(this.predicate)(x, this.i++, this.source);\n      if (shouldYield === errorObj) {\n        return this.o.onError(shouldYield.e);\n      }\n      shouldYield && this.o.onNext(x);\n    };\n\n    InnerObserver.prototype.error = function (e) {\n      this.o.onError(e);\n    };\n\n    InnerObserver.prototype.completed = function () {\n      this.o.onCompleted();\n    };\n\n    return FilterObservable;\n\n  }(ObservableBase));\n\n  /**\n  *  Filters the elements of an observable sequence based on a predicate by incorporating the element's index.\n  * @param {Function} predicate A function to test each source element for a condition; the second parameter of the function represents the index of the source element.\n  * @param {Any} [thisArg] Object to use as this when executing callback.\n  * @returns {Observable} An observable sequence that contains elements from the input sequence that satisfy the condition.\n  */\n  observableProto.filter = observableProto.where = function (predicate, thisArg) {\n    return this instanceof FilterObservable ? this.internalFilter(predicate, thisArg) :\n      new FilterObservable(this, predicate, thisArg);\n  };\n\nfunction createCbObservable(fn, ctx, selector, args) {\n  var o = new AsyncSubject();\n\n  args.push(createCbHandler(o, ctx, selector));\n  fn.apply(ctx, args);\n\n  return o.asObservable();\n}\n\nfunction createCbHandler(o, ctx, selector) {\n  return function handler () {\n    var len = arguments.length, results = new Array(len);\n    for(var i = 0; i < len; i++) { results[i] = arguments[i]; }\n\n    if (isFunction(selector)) {\n      results = tryCatch(selector).apply(ctx, results);\n      if (results === errorObj) { return o.onError(results.e); }\n      o.onNext(results);\n    } else {\n      if (results.length <= 1) {\n        o.onNext(results[0]);\n      } else {\n        o.onNext(results);\n      }\n    }\n\n    o.onCompleted();\n  };\n}\n\n/**\n * Converts a callback function to an observable sequence.\n *\n * @param {Function} fn Function with a callback as the last parameter to convert to an Observable sequence.\n * @param {Mixed} [ctx] The context for the func parameter to be executed.  If not specified, defaults to undefined.\n * @param {Function} [selector] A selector which takes the arguments from the callback to produce a single item to yield on next.\n * @returns {Function} A function, when executed with the required parameters minus the callback, produces an Observable sequence with a single value of the arguments to the callback as an array.\n */\nObservable.fromCallback = function (fn, ctx, selector) {\n  return function () {\n    typeof ctx === 'undefined' && (ctx = this); \n\n    var len = arguments.length, args = new Array(len)\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    return createCbObservable(fn, ctx, selector, args);\n  };\n};\n\nfunction createNodeObservable(fn, ctx, selector, args) {\n  var o = new AsyncSubject();\n\n  args.push(createNodeHandler(o, ctx, selector));\n  fn.apply(ctx, args);\n\n  return o.asObservable();\n}\n\nfunction createNodeHandler(o, ctx, selector) {\n  return function handler () {\n    var err = arguments[0];\n    if (err) { return o.onError(err); }\n\n    var len = arguments.length, results = [];\n    for(var i = 1; i < len; i++) { results[i - 1] = arguments[i]; }\n\n    if (isFunction(selector)) {\n      var results = tryCatch(selector).apply(ctx, results);\n      if (results === errorObj) { return o.onError(results.e); }\n      o.onNext(results);\n    } else {\n      if (results.length <= 1) {\n        o.onNext(results[0]);\n      } else {\n        o.onNext(results);\n      }\n    }\n\n    o.onCompleted();\n  };\n}\n\n/**\n * Converts a Node.js callback style function to an observable sequence.  This must be in function (err, ...) format.\n * @param {Function} fn The function to call\n * @param {Mixed} [ctx] The context for the func parameter to be executed.  If not specified, defaults to undefined.\n * @param {Function} [selector] A selector which takes the arguments from the callback minus the error to produce a single item to yield on next.\n * @returns {Function} An async function which when applied, returns an observable sequence with the callback arguments as an array.\n */\nObservable.fromNodeCallback = function (fn, ctx, selector) {\n  return function () {\n    typeof ctx === 'undefined' && (ctx = this); \n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    return createNodeObservable(fn, ctx, selector, args);\n  };\n};\n\n  function isNodeList(el) {\n    if (root.StaticNodeList) {\n      // IE8 Specific\n      // instanceof is slower than Object#toString, but Object#toString will not work as intended in IE8\n      return el instanceof root.StaticNodeList || el instanceof root.NodeList;\n    } else {\n      return Object.prototype.toString.call(el) === '[object NodeList]';\n    }\n  }\n\n  function ListenDisposable(e, n, fn) {\n    this._e = e;\n    this._n = n;\n    this._fn = fn;\n    this._e.addEventListener(this._n, this._fn, false);\n    this.isDisposed = false;\n  }\n  ListenDisposable.prototype.dispose = function () {\n    if (!this.isDisposed) {\n      this._e.removeEventListener(this._n, this._fn, false);\n      this.isDisposed = true;\n    }\n  };\n\n  function createEventListener (el, eventName, handler) {\n    var disposables = new CompositeDisposable();\n\n    // Asume NodeList or HTMLCollection\n    var elemToString = Object.prototype.toString.call(el);\n    if (isNodeList(el) || elemToString === '[object HTMLCollection]') {\n      for (var i = 0, len = el.length; i < len; i++) {\n        disposables.add(createEventListener(el.item(i), eventName, handler));\n      }\n    } else if (el) {\n      disposables.add(new ListenDisposable(el, eventName, handler));\n    }\n\n    return disposables;\n  }\n\n  /**\n   * Configuration option to determine whether to use native events only\n   */\n  Rx.config.useNativeEvents = false;\n\n  var EventObservable = (function(__super__) {\n    inherits(EventObservable, __super__);\n    function EventObservable(el, name, fn) {\n      this._el = el;\n      this._n = name;\n      this._fn = fn;\n      __super__.call(this);\n    }\n\n    function createHandler(o, fn) {\n      return function handler () {\n        var results = arguments[0];\n        if (isFunction(fn)) {\n          results = tryCatch(fn).apply(null, arguments);\n          if (results === errorObj) { return o.onError(results.e); }\n        }\n        o.onNext(results);\n      };\n    }\n\n    EventObservable.prototype.subscribeCore = function (o) {\n      return createEventListener(\n        this._el,\n        this._n,\n        createHandler(o, this._fn));\n    };\n\n    return EventObservable;\n  }(ObservableBase));\n\n  /**\n   * Creates an observable sequence by adding an event listener to the matching DOMElement or each item in the NodeList.\n   * @param {Object} element The DOMElement or NodeList to attach a listener.\n   * @param {String} eventName The event name to attach the observable sequence.\n   * @param {Function} [selector] A selector which takes the arguments from the event handler to produce a single item to yield on next.\n   * @returns {Observable} An observable sequence of events from the specified element and the specified event.\n   */\n  Observable.fromEvent = function (element, eventName, selector) {\n    // Node.js specific\n    if (element.addListener) {\n      return fromEventPattern(\n        function (h) { element.addListener(eventName, h); },\n        function (h) { element.removeListener(eventName, h); },\n        selector);\n    }\n\n    // Use only if non-native events are allowed\n    if (!Rx.config.useNativeEvents) {\n      // Handles jq, Angular.js, Zepto, Marionette, Ember.js\n      if (typeof element.on === 'function' && typeof element.off === 'function') {\n        return fromEventPattern(\n          function (h) { element.on(eventName, h); },\n          function (h) { element.off(eventName, h); },\n          selector);\n      }\n    }\n\n    return new EventObservable(element, eventName, selector).publish().refCount();\n  };\n\n  var EventPatternObservable = (function(__super__) {\n    inherits(EventPatternObservable, __super__);\n    function EventPatternObservable(add, del, fn) {\n      this._add = add;\n      this._del = del;\n      this._fn = fn;\n      __super__.call(this);\n    }\n\n    function createHandler(o, fn) {\n      return function handler () {\n        var results = arguments[0];\n        if (isFunction(fn)) {\n          results = tryCatch(fn).apply(null, arguments);\n          if (results === errorObj) { return o.onError(results.e); }\n        }\n        o.onNext(results);\n      };\n    }\n\n    EventPatternObservable.prototype.subscribeCore = function (o) {\n      var fn = createHandler(o, this._fn);\n      var returnValue = this._add(fn);\n      return new EventPatternDisposable(this._del, fn, returnValue);\n    };\n\n    function EventPatternDisposable(del, fn, ret) {\n      this._del = del;\n      this._fn = fn;\n      this._ret = ret;\n      this.isDisposed = false;\n    }\n\n    EventPatternDisposable.prototype.dispose = function () {\n      if(!this.isDisposed) {\n        isFunction(this._del) && this._del(this._fn, this._ret);\n        this.isDisposed = true;\n      }\n    };\n\n    return EventPatternObservable;\n  }(ObservableBase));\n\n  /**\n   * Creates an observable sequence from an event emitter via an addHandler/removeHandler pair.\n   * @param {Function} addHandler The function to add a handler to the emitter.\n   * @param {Function} [removeHandler] The optional function to remove a handler from an emitter.\n   * @param {Function} [selector] A selector which takes the arguments from the event handler to produce a single item to yield on next.\n   * @returns {Observable} An observable sequence which wraps an event from an event emitter\n   */\n  var fromEventPattern = Observable.fromEventPattern = function (addHandler, removeHandler, selector) {\n    return new EventPatternObservable(addHandler, removeHandler, selector).publish().refCount();\n  };\n\n  var FromPromiseObservable = (function(__super__) {\n    inherits(FromPromiseObservable, __super__);\n    function FromPromiseObservable(p, s) {\n      this._p = p;\n      this._s = s;\n      __super__.call(this);\n    }\n\n    function scheduleNext(s, state) {\n      var o = state[0], data = state[1];\n      o.onNext(data);\n      o.onCompleted();\n    }\n\n    function scheduleError(s, state) {\n      var o = state[0], err = state[1];\n      o.onError(err);\n    }\n\n    FromPromiseObservable.prototype.subscribeCore = function(o) {\n      var sad = new SingleAssignmentDisposable(), self = this;\n\n      this._p\n        .then(function (data) {\n          sad.setDisposable(self._s.schedule([o, data], scheduleNext));\n        }, function (err) {\n          sad.setDisposable(self._s.schedule([o, err], scheduleError));\n        });\n\n      return sad;\n    };\n\n    return FromPromiseObservable;\n  }(ObservableBase));\n\n  /**\n  * Converts a Promise to an Observable sequence\n  * @param {Promise} An ES6 Compliant promise.\n  * @returns {Observable} An Observable sequence which wraps the existing promise success and failure.\n  */\n  var observableFromPromise = Observable.fromPromise = function (promise, scheduler) {\n    scheduler || (scheduler = defaultScheduler);\n    return new FromPromiseObservable(promise, scheduler);\n  };\n\n  /*\n   * Converts an existing observable sequence to an ES6 Compatible Promise\n   * @example\n   * var promise = Rx.Observable.return(42).toPromise(RSVP.Promise);\n   *\n   * // With config\n   * Rx.config.Promise = RSVP.Promise;\n   * var promise = Rx.Observable.return(42).toPromise();\n   * @param {Function} [promiseCtor] The constructor of the promise. If not provided, it looks for it in Rx.config.Promise.\n   * @returns {Promise} An ES6 compatible promise with the last value from the observable sequence.\n   */\n  observableProto.toPromise = function (promiseCtor) {\n    promiseCtor || (promiseCtor = Rx.config.Promise);\n    if (!promiseCtor) { throw new NotSupportedError('Promise type not provided nor in Rx.config.Promise'); }\n    var source = this;\n    return new promiseCtor(function (resolve, reject) {\n      // No cancellation can be done\n      var value;\n      source.subscribe(function (v) {\n        value = v;\n      }, reject, function () {\n        resolve(value);\n      });\n    });\n  };\n\n  /**\n   * Invokes the asynchronous function, surfacing the result through an observable sequence.\n   * @param {Function} functionAsync Asynchronous function which returns a Promise to run.\n   * @returns {Observable} An observable sequence exposing the function's result value, or an exception.\n   */\n  Observable.startAsync = function (functionAsync) {\n    var promise = tryCatch(functionAsync)();\n    if (promise === errorObj) { return observableThrow(promise.e); }\n    return observableFromPromise(promise);\n  };\n\n  var MulticastObservable = (function (__super__) {\n    inherits(MulticastObservable, __super__);\n    function MulticastObservable(source, fn1, fn2) {\n      this.source = source;\n      this._fn1 = fn1;\n      this._fn2 = fn2;\n      __super__.call(this);\n    }\n\n    MulticastObservable.prototype.subscribeCore = function (o) {\n      var connectable = this.source.multicast(this._fn1());\n      return new BinaryDisposable(this._fn2(connectable).subscribe(o), connectable.connect());\n    };\n\n    return MulticastObservable;\n  }(ObservableBase));\n\n  /**\n   * Multicasts the source sequence notifications through an instantiated subject into all uses of the sequence within a selector function. Each\n   * subscription to the resulting sequence causes a separate multicast invocation, exposing the sequence resulting from the selector function's\n   * invocation. For specializations with fixed subject types, see Publish, PublishLast, and Replay.\n   *\n   * @example\n   * 1 - res = source.multicast(observable);\n   * 2 - res = source.multicast(function () { return new Subject(); }, function (x) { return x; });\n   *\n   * @param {Function|Subject} subjectOrSubjectSelector\n   * Factory function to create an intermediate subject through which the source sequence's elements will be multicast to the selector function.\n   * Or:\n   * Subject to push source elements into.\n   *\n   * @param {Function} [selector] Optional selector function which can use the multicasted source sequence subject to the policies enforced by the created subject. Specified only if <paramref name=\"subjectOrSubjectSelector\" is a factory function.\n   * @returns {Observable} An observable sequence that contains the elements of a sequence produced by multicasting the source sequence within a selector function.\n   */\n  observableProto.multicast = function (subjectOrSubjectSelector, selector) {\n    return isFunction(subjectOrSubjectSelector) ?\n      new MulticastObservable(this, subjectOrSubjectSelector, selector) :\n      new ConnectableObservable(this, subjectOrSubjectSelector);\n  };\n\n  /**\n   * Returns an observable sequence that is the result of invoking the selector on a connectable observable sequence that shares a single subscription to the underlying sequence.\n   * This operator is a specialization of Multicast using a regular Subject.\n   *\n   * @example\n   * var resres = source.publish();\n   * var res = source.publish(function (x) { return x; });\n   *\n   * @param {Function} [selector] Selector function which can use the multicasted source sequence as many times as needed, without causing multiple subscriptions to the source sequence. Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n   * @returns {Observable} An observable sequence that contains the elements of a sequence produced by multicasting the source sequence within a selector function.\n   */\n  observableProto.publish = function (selector) {\n    return selector && isFunction(selector) ?\n      this.multicast(function () { return new Subject(); }, selector) :\n      this.multicast(new Subject());\n  };\n\n  /**\n   * Returns an observable sequence that shares a single subscription to the underlying sequence.\n   * This operator is a specialization of publish which creates a subscription when the number of observers goes from zero to one, then shares that subscription with all subsequent observers until the number of observers returns to zero, at which point the subscription is disposed.\n   * @returns {Observable} An observable sequence that contains the elements of a sequence produced by multicasting the source sequence.\n   */\n  observableProto.share = function () {\n    return this.publish().refCount();\n  };\n\n  /**\n   * Returns an observable sequence that is the result of invoking the selector on a connectable observable sequence that shares a single subscription to the underlying sequence containing only the last notification.\n   * This operator is a specialization of Multicast using a AsyncSubject.\n   *\n   * @example\n   * var res = source.publishLast();\n   * var res = source.publishLast(function (x) { return x; });\n   *\n   * @param selector [Optional] Selector function which can use the multicasted source sequence as many times as needed, without causing multiple subscriptions to the source sequence. Subscribers to the given source will only receive the last notification of the source.\n   * @returns {Observable} An observable sequence that contains the elements of a sequence produced by multicasting the source sequence within a selector function.\n   */\n  observableProto.publishLast = function (selector) {\n    return selector && isFunction(selector) ?\n      this.multicast(function () { return new AsyncSubject(); }, selector) :\n      this.multicast(new AsyncSubject());\n  };\n\n  /**\n   * Returns an observable sequence that is the result of invoking the selector on a connectable observable sequence that shares a single subscription to the underlying sequence and starts with initialValue.\n   * This operator is a specialization of Multicast using a BehaviorSubject.\n   *\n   * @example\n   * var res = source.publishValue(42);\n   * var res = source.publishValue(function (x) { return x.select(function (y) { return y * y; }) }, 42);\n   *\n   * @param {Function} [selector] Optional selector function which can use the multicasted source sequence as many times as needed, without causing multiple subscriptions to the source sequence. Subscribers to the given source will receive immediately receive the initial value, followed by all notifications of the source from the time of the subscription on.\n   * @param {Mixed} initialValue Initial value received by observers upon subscription.\n   * @returns {Observable} An observable sequence that contains the elements of a sequence produced by multicasting the source sequence within a selector function.\n   */\n  observableProto.publishValue = function (initialValueOrSelector, initialValue) {\n    return arguments.length === 2 ?\n      this.multicast(function () {\n        return new BehaviorSubject(initialValue);\n      }, initialValueOrSelector) :\n      this.multicast(new BehaviorSubject(initialValueOrSelector));\n  };\n\n  /**\n   * Returns an observable sequence that shares a single subscription to the underlying sequence and starts with an initialValue.\n   * This operator is a specialization of publishValue which creates a subscription when the number of observers goes from zero to one, then shares that subscription with all subsequent observers until the number of observers returns to zero, at which point the subscription is disposed.\n   * @param {Mixed} initialValue Initial value received by observers upon subscription.\n   * @returns {Observable} An observable sequence that contains the elements of a sequence produced by multicasting the source sequence.\n   */\n  observableProto.shareValue = function (initialValue) {\n    return this.publishValue(initialValue).refCount();\n  };\n\n  /**\n   * Returns an observable sequence that is the result of invoking the selector on a connectable observable sequence that shares a single subscription to the underlying sequence replaying notifications subject to a maximum time length for the replay buffer.\n   * This operator is a specialization of Multicast using a ReplaySubject.\n   *\n   * @example\n   * var res = source.replay(null, 3);\n   * var res = source.replay(null, 3, 500);\n   * var res = source.replay(null, 3, 500, scheduler);\n   * var res = source.replay(function (x) { return x.take(6).repeat(); }, 3, 500, scheduler);\n   *\n   * @param selector [Optional] Selector function which can use the multicasted source sequence as many times as needed, without causing multiple subscriptions to the source sequence. Subscribers to the given source will receive all the notifications of the source subject to the specified replay buffer trimming policy.\n   * @param bufferSize [Optional] Maximum element count of the replay buffer.\n   * @param windowSize [Optional] Maximum time length of the replay buffer.\n   * @param scheduler [Optional] Scheduler where connected observers within the selector function will be invoked on.\n   * @returns {Observable} An observable sequence that contains the elements of a sequence produced by multicasting the source sequence within a selector function.\n   */\n  observableProto.replay = function (selector, bufferSize, windowSize, scheduler) {\n    return selector && isFunction(selector) ?\n      this.multicast(function () { return new ReplaySubject(bufferSize, windowSize, scheduler); }, selector) :\n      this.multicast(new ReplaySubject(bufferSize, windowSize, scheduler));\n  };\n\n  /**\n   * Returns an observable sequence that shares a single subscription to the underlying sequence replaying notifications subject to a maximum time length for the replay buffer.\n   * This operator is a specialization of replay which creates a subscription when the number of observers goes from zero to one, then shares that subscription with all subsequent observers until the number of observers returns to zero, at which point the subscription is disposed.\n   *\n   * @example\n   * var res = source.shareReplay(3);\n   * var res = source.shareReplay(3, 500);\n   * var res = source.shareReplay(3, 500, scheduler);\n   *\n\n   * @param bufferSize [Optional] Maximum element count of the replay buffer.\n   * @param window [Optional] Maximum time length of the replay buffer.\n   * @param scheduler [Optional] Scheduler where connected observers within the selector function will be invoked on.\n   * @returns {Observable} An observable sequence that contains the elements of a sequence produced by multicasting the source sequence.\n   */\n  observableProto.shareReplay = function (bufferSize, windowSize, scheduler) {\n    return this.replay(null, bufferSize, windowSize, scheduler).refCount();\n  };\n\n  var RefCountObservable = (function (__super__) {\n    inherits(RefCountObservable, __super__);\n    function RefCountObservable(source) {\n      this.source = source;\n      this._count = 0;\n      this._connectableSubscription = null;\n      __super__.call(this);\n    }\n\n    RefCountObservable.prototype.subscribeCore = function (o) {\n      var subscription = this.source.subscribe(o);\n      ++this._count === 1 && (this._connectableSubscription = this.source.connect());\n      return new RefCountDisposable(this, subscription);\n    };\n\n    function RefCountDisposable(p, s) {\n      this._p = p;\n      this._s = s;\n      this.isDisposed = false;\n    }\n\n    RefCountDisposable.prototype.dispose = function () {\n      if (!this.isDisposed) {\n        this.isDisposed = true;\n        this._s.dispose();\n        --this._p._count === 0 && this._p._connectableSubscription.dispose();\n      }\n    };\n\n    return RefCountObservable;\n  }(ObservableBase));\n\n  var ConnectableObservable = Rx.ConnectableObservable = (function (__super__) {\n    inherits(ConnectableObservable, __super__);\n    function ConnectableObservable(source, subject) {\n      this.source = source;\n      this._connection = null;\n      this._source = source.asObservable();\n      this._subject = subject;\n      __super__.call(this);\n    }\n\n    function ConnectDisposable(parent, subscription) {\n      this._p = parent;\n      this._s = subscription;\n    }\n\n    ConnectDisposable.prototype.dispose = function () {\n      if (this._s) {\n        this._s.dispose();\n        this._s = null;\n        this._p._connection = null;\n      }\n    };\n\n    ConnectableObservable.prototype.connect = function () {\n      if (!this._connection) {\n        var subscription = this._source.subscribe(this._subject);\n        this._connection = new ConnectDisposable(this, subscription);\n      }\n      return this._connection;\n    };\n\n    ConnectableObservable.prototype._subscribe = function (o) {\n      return this._subject.subscribe(o);\n    };\n\n    ConnectableObservable.prototype.refCount = function () {\n      return new RefCountObservable(this);\n    };\n\n    return ConnectableObservable;\n  }(Observable));\n\n  var TimerObservable = (function(__super__) {\n    inherits(TimerObservable, __super__);\n    function TimerObservable(dt, s) {\n      this._dt = dt;\n      this._s = s;\n      __super__.call(this);\n    }\n\n    TimerObservable.prototype.subscribeCore = function (o) {\n      return this._s.scheduleFuture(o, this._dt, scheduleMethod);\n    };\n\n    function scheduleMethod(s, o) {\n      o.onNext(0);\n      o.onCompleted();\n    }\n\n    return TimerObservable;\n  }(ObservableBase));\n\n  function _observableTimer(dueTime, scheduler) {\n    return new TimerObservable(dueTime, scheduler);\n  }\n\n  function observableTimerDateAndPeriod(dueTime, period, scheduler) {\n    return new AnonymousObservable(function (observer) {\n      var d = dueTime, p = normalizeTime(period);\n      return scheduler.scheduleRecursiveFuture(0, d, function (count, self) {\n        if (p > 0) {\n          var now = scheduler.now();\n          d = new Date(d.getTime() + p);\n          d.getTime() <= now && (d = new Date(now + p));\n        }\n        observer.onNext(count);\n        self(count + 1, new Date(d));\n      });\n    });\n  }\n\n  function observableTimerTimeSpanAndPeriod(dueTime, period, scheduler) {\n    return dueTime === period ?\n      new AnonymousObservable(function (observer) {\n        return scheduler.schedulePeriodic(0, period, function (count) {\n          observer.onNext(count);\n          return count + 1;\n        });\n      }) :\n      observableDefer(function () {\n        return observableTimerDateAndPeriod(new Date(scheduler.now() + dueTime), period, scheduler);\n      });\n  }\n\n  /**\n   *  Returns an observable sequence that produces a value after each period.\n   *\n   * @example\n   *  1 - res = Rx.Observable.interval(1000);\n   *  2 - res = Rx.Observable.interval(1000, Rx.Scheduler.timeout);\n   *\n   * @param {Number} period Period for producing the values in the resulting sequence (specified as an integer denoting milliseconds).\n   * @param {Scheduler} [scheduler] Scheduler to run the timer on. If not specified, Rx.Scheduler.timeout is used.\n   * @returns {Observable} An observable sequence that produces a value after each period.\n   */\n  var observableinterval = Observable.interval = function (period, scheduler) {\n    return observableTimerTimeSpanAndPeriod(period, period, isScheduler(scheduler) ? scheduler : defaultScheduler);\n  };\n\n  /**\n   *  Returns an observable sequence that produces a value after dueTime has elapsed and then after each period.\n   * @param {Number} dueTime Absolute (specified as a Date object) or relative time (specified as an integer denoting milliseconds) at which to produce the first value.\n   * @param {Mixed} [periodOrScheduler]  Period to produce subsequent values (specified as an integer denoting milliseconds), or the scheduler to run the timer on. If not specified, the resulting timer is not recurring.\n   * @param {Scheduler} [scheduler]  Scheduler to run the timer on. If not specified, the timeout scheduler is used.\n   * @returns {Observable} An observable sequence that produces a value after due time has elapsed and then each period.\n   */\n  var observableTimer = Observable.timer = function (dueTime, periodOrScheduler, scheduler) {\n    var period;\n    isScheduler(scheduler) || (scheduler = defaultScheduler);\n    if (periodOrScheduler != null && typeof periodOrScheduler === 'number') {\n      period = periodOrScheduler;\n    } else if (isScheduler(periodOrScheduler)) {\n      scheduler = periodOrScheduler;\n    }\n    if ((dueTime instanceof Date || typeof dueTime === 'number') && period === undefined) {\n      return _observableTimer(dueTime, scheduler);\n    }\n    if (dueTime instanceof Date && period !== undefined) {\n      return observableTimerDateAndPeriod(dueTime, periodOrScheduler, scheduler);\n    }\n    return observableTimerTimeSpanAndPeriod(dueTime, period, scheduler);\n  };\n\n  function observableDelayRelative(source, dueTime, scheduler) {\n    return new AnonymousObservable(function (o) {\n      var active = false,\n        cancelable = new SerialDisposable(),\n        exception = null,\n        q = [],\n        running = false,\n        subscription;\n      subscription = source.materialize().timestamp(scheduler).subscribe(function (notification) {\n        var d, shouldRun;\n        if (notification.value.kind === 'E') {\n          q = [];\n          q.push(notification);\n          exception = notification.value.error;\n          shouldRun = !running;\n        } else {\n          q.push({ value: notification.value, timestamp: notification.timestamp + dueTime });\n          shouldRun = !active;\n          active = true;\n        }\n        if (shouldRun) {\n          if (exception !== null) {\n            o.onError(exception);\n          } else {\n            d = new SingleAssignmentDisposable();\n            cancelable.setDisposable(d);\n            d.setDisposable(scheduler.scheduleRecursiveFuture(null, dueTime, function (_, self) {\n              var e, recurseDueTime, result, shouldRecurse;\n              if (exception !== null) {\n                return;\n              }\n              running = true;\n              do {\n                result = null;\n                if (q.length > 0 && q[0].timestamp - scheduler.now() <= 0) {\n                  result = q.shift().value;\n                }\n                if (result !== null) {\n                  result.accept(o);\n                }\n              } while (result !== null);\n              shouldRecurse = false;\n              recurseDueTime = 0;\n              if (q.length > 0) {\n                shouldRecurse = true;\n                recurseDueTime = Math.max(0, q[0].timestamp - scheduler.now());\n              } else {\n                active = false;\n              }\n              e = exception;\n              running = false;\n              if (e !== null) {\n                o.onError(e);\n              } else if (shouldRecurse) {\n                self(null, recurseDueTime);\n              }\n            }));\n          }\n        }\n      });\n      return new BinaryDisposable(subscription, cancelable);\n    }, source);\n  }\n\n  function observableDelayAbsolute(source, dueTime, scheduler) {\n    return observableDefer(function () {\n      return observableDelayRelative(source, dueTime - scheduler.now(), scheduler);\n    });\n  }\n\n  function delayWithSelector(source, subscriptionDelay, delayDurationSelector) {\n    var subDelay, selector;\n    if (isFunction(subscriptionDelay)) {\n      selector = subscriptionDelay;\n    } else {\n      subDelay = subscriptionDelay;\n      selector = delayDurationSelector;\n    }\n    return new AnonymousObservable(function (o) {\n      var delays = new CompositeDisposable(), atEnd = false, subscription = new SerialDisposable();\n\n      function start() {\n        subscription.setDisposable(source.subscribe(\n          function (x) {\n            var delay = tryCatch(selector)(x);\n            if (delay === errorObj) { return o.onError(delay.e); }\n            var d = new SingleAssignmentDisposable();\n            delays.add(d);\n            d.setDisposable(delay.subscribe(\n              function () {\n                o.onNext(x);\n                delays.remove(d);\n                done();\n              },\n              function (e) { o.onError(e); },\n              function () {\n                o.onNext(x);\n                delays.remove(d);\n                done();\n              }\n            ));\n          },\n          function (e) { o.onError(e); },\n          function () {\n            atEnd = true;\n            subscription.dispose();\n            done();\n          }\n        ));\n      }\n\n      function done () {\n        atEnd && delays.length === 0 && o.onCompleted();\n      }\n\n      if (!subDelay) {\n        start();\n      } else {\n        subscription.setDisposable(subDelay.subscribe(start, function (e) { o.onError(e); }, start));\n      }\n\n      return new BinaryDisposable(subscription, delays);\n    }, source);\n  }\n\n  /**\n   *  Time shifts the observable sequence by dueTime.\n   *  The relative time intervals between the values are preserved.\n   *\n   * @param {Number} dueTime Absolute (specified as a Date object) or relative time (specified as an integer denoting milliseconds) by which to shift the observable sequence.\n   * @param {Scheduler} [scheduler] Scheduler to run the delay timers on. If not specified, the timeout scheduler is used.\n   * @returns {Observable} Time-shifted sequence.\n   */\n  observableProto.delay = function () {\n    var firstArg = arguments[0];\n    if (typeof firstArg === 'number' || firstArg instanceof Date) {\n      var dueTime = firstArg, scheduler = arguments[1];\n      isScheduler(scheduler) || (scheduler = defaultScheduler);\n      return dueTime instanceof Date ?\n        observableDelayAbsolute(this, dueTime, scheduler) :\n        observableDelayRelative(this, dueTime, scheduler);\n    } else if (Observable.isObservable(firstArg) || isFunction(firstArg)) {\n      return delayWithSelector(this, firstArg, arguments[1]);\n    } else {\n      throw new Error('Invalid arguments');\n    }\n  };\n\n  var DebounceObservable = (function (__super__) {\n    inherits(DebounceObservable, __super__);\n    function DebounceObservable(source, dt, s) {\n      isScheduler(s) || (s = defaultScheduler);\n      this.source = source;\n      this._dt = dt;\n      this._s = s;\n      __super__.call(this);\n    }\n\n    DebounceObservable.prototype.subscribeCore = function (o) {\n      var cancelable = new SerialDisposable();\n      return new BinaryDisposable(\n        this.source.subscribe(new DebounceObserver(o, this._dt, this._s, cancelable)),\n        cancelable);\n    };\n\n    return DebounceObservable;\n  }(ObservableBase));\n\n  var DebounceObserver = (function (__super__) {\n    inherits(DebounceObserver, __super__);\n    function DebounceObserver(observer, dueTime, scheduler, cancelable) {\n      this._o = observer;\n      this._d = dueTime;\n      this._scheduler = scheduler;\n      this._c = cancelable;\n      this._v = null;\n      this._hv = false;\n      this._id = 0;\n      __super__.call(this);\n    }\n\n    function scheduleFuture(s, state) {\n      state.self._hv && state.self._id === state.currentId && state.self._o.onNext(state.x);\n      state.self._hv = false;\n    }\n\n    DebounceObserver.prototype.next = function (x) {\n      this._hv = true;\n      this._v = x;\n      var currentId = ++this._id, d = new SingleAssignmentDisposable();\n      this._c.setDisposable(d);\n      d.setDisposable(this._scheduler.scheduleFuture(this, this._d, function (_, self) {\n        self._hv && self._id === currentId && self._o.onNext(x);\n        self._hv = false;\n      }));\n    };\n\n    DebounceObserver.prototype.error = function (e) {\n      this._c.dispose();\n      this._o.onError(e);\n      this._hv = false;\n      this._id++;\n    };\n\n    DebounceObserver.prototype.completed = function () {\n      this._c.dispose();\n      this._hv && this._o.onNext(this._v);\n      this._o.onCompleted();\n      this._hv = false;\n      this._id++;\n    };\n\n    return DebounceObserver;\n  }(AbstractObserver));\n\n  function debounceWithSelector(source, durationSelector) {\n    return new AnonymousObservable(function (o) {\n      var value, hasValue = false, cancelable = new SerialDisposable(), id = 0;\n      var subscription = source.subscribe(\n        function (x) {\n          var throttle = tryCatch(durationSelector)(x);\n          if (throttle === errorObj) { return o.onError(throttle.e); }\n\n          isPromise(throttle) && (throttle = observableFromPromise(throttle));\n\n          hasValue = true;\n          value = x;\n          id++;\n          var currentid = id, d = new SingleAssignmentDisposable();\n          cancelable.setDisposable(d);\n          d.setDisposable(throttle.subscribe(\n            function () {\n              hasValue && id === currentid && o.onNext(value);\n              hasValue = false;\n              d.dispose();\n            },\n            function (e) { o.onError(e); },\n            function () {\n              hasValue && id === currentid && o.onNext(value);\n              hasValue = false;\n              d.dispose();\n            }\n          ));\n        },\n        function (e) {\n          cancelable.dispose();\n          o.onError(e);\n          hasValue = false;\n          id++;\n        },\n        function () {\n          cancelable.dispose();\n          hasValue && o.onNext(value);\n          o.onCompleted();\n          hasValue = false;\n          id++;\n        }\n      );\n      return new BinaryDisposable(subscription, cancelable);\n    }, source);\n  }\n\n  observableProto.debounce = function () {\n    if (isFunction (arguments[0])) {\n      return debounceWithSelector(this, arguments[0]);\n    } else if (typeof arguments[0] === 'number') {\n      return new DebounceObservable(this, arguments[0], arguments[1]);\n    } else {\n      throw new Error('Invalid arguments');\n    }\n  };\n\n  var TimestampObservable = (function (__super__) {\n    inherits(TimestampObservable, __super__);\n    function TimestampObservable(source, s) {\n      this.source = source;\n      this._s = s;\n      __super__.call(this);\n    }\n\n    TimestampObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new TimestampObserver(o, this._s));\n    };\n\n    return TimestampObservable;\n  }(ObservableBase));\n\n  var TimestampObserver = (function (__super__) {\n    inherits(TimestampObserver, __super__);\n    function TimestampObserver(o, s) {\n      this._o = o;\n      this._s = s;\n      __super__.call(this);\n    }\n\n    TimestampObserver.prototype.next = function (x) {\n      this._o.onNext({ value: x, timestamp: this._s.now() });\n    };\n\n    TimestampObserver.prototype.error = function (e) {\n      this._o.onError(e);\n    };\n\n    TimestampObserver.prototype.completed = function () {\n      this._o.onCompleted();\n    };\n\n    return TimestampObserver;\n  }(AbstractObserver));\n\n  /**\n   *  Records the timestamp for each value in an observable sequence.\n   *\n   * @example\n   *  1 - res = source.timestamp(); // produces { value: x, timestamp: ts }\n   *  2 - res = source.timestamp(Rx.Scheduler.default);\n   *\n   * @param {Scheduler} [scheduler]  Scheduler used to compute timestamps. If not specified, the default scheduler is used.\n   * @returns {Observable} An observable sequence with timestamp information on values.\n   */\n  observableProto.timestamp = function (scheduler) {\n    isScheduler(scheduler) || (scheduler = defaultScheduler);\n    return new TimestampObservable(this, scheduler);\n  };\n\n  var SampleObservable = (function(__super__) {\n    inherits(SampleObservable, __super__);\n    function SampleObservable(source, sampler) {\n      this.source = source;\n      this._sampler = sampler;\n      __super__.call(this);\n    }\n\n    SampleObservable.prototype.subscribeCore = function (o) {\n      var state = {\n        o: o,\n        atEnd: false,\n        value: null,\n        hasValue: false,\n        sourceSubscription: new SingleAssignmentDisposable()\n      };\n\n      state.sourceSubscription.setDisposable(this.source.subscribe(new SampleSourceObserver(state)));\n      return new BinaryDisposable(\n        state.sourceSubscription,\n        this._sampler.subscribe(new SamplerObserver(state))\n      );\n    };\n\n    return SampleObservable;\n  }(ObservableBase));\n\n  var SamplerObserver = (function(__super__) {\n    inherits(SamplerObserver, __super__);\n    function SamplerObserver(s) {\n      this._s = s;\n      __super__.call(this);\n    }\n\n    SamplerObserver.prototype._handleMessage = function () {\n      if (this._s.hasValue) {\n        this._s.hasValue = false;\n        this._s.o.onNext(this._s.value);\n      }\n      this._s.atEnd && this._s.o.onCompleted();\n    };\n\n    SamplerObserver.prototype.next = function () { this._handleMessage(); };\n    SamplerObserver.prototype.error = function (e) { this._s.onError(e); };\n    SamplerObserver.prototype.completed = function () { this._handleMessage(); };\n\n    return SamplerObserver;\n  }(AbstractObserver));\n\n  var SampleSourceObserver = (function(__super__) {\n    inherits(SampleSourceObserver, __super__);\n    function SampleSourceObserver(s) {\n      this._s = s;\n      __super__.call(this);\n    }\n\n    SampleSourceObserver.prototype.next = function (x) {\n      this._s.hasValue = true;\n      this._s.value = x;\n    };\n    SampleSourceObserver.prototype.error = function (e) { this._s.o.onError(e); };\n    SampleSourceObserver.prototype.completed = function () {\n      this._s.atEnd = true;\n      this._s.sourceSubscription.dispose();\n    };\n\n    return SampleSourceObserver;\n  }(AbstractObserver));\n\n  /**\n   *  Samples the observable sequence at each interval.\n   *\n   * @example\n   *  1 - res = source.sample(sampleObservable); // Sampler tick sequence\n   *  2 - res = source.sample(5000); // 5 seconds\n   *  2 - res = source.sample(5000, Rx.Scheduler.timeout); // 5 seconds\n   *\n   * @param {Mixed} intervalOrSampler Interval at which to sample (specified as an integer denoting milliseconds) or Sampler Observable.\n   * @param {Scheduler} [scheduler]  Scheduler to run the sampling timer on. If not specified, the timeout scheduler is used.\n   * @returns {Observable} Sampled observable sequence.\n   */\n  observableProto.sample = function (intervalOrSampler, scheduler) {\n    isScheduler(scheduler) || (scheduler = defaultScheduler);\n    return typeof intervalOrSampler === 'number' ?\n      new SampleObservable(this, observableinterval(intervalOrSampler, scheduler)) :\n      new SampleObservable(this, intervalOrSampler);\n  };\n\n  var TimeoutError = Rx.TimeoutError = function(message) {\n    this.message = message || 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    Error.call(this);\n  };\n  TimeoutError.prototype = Object.create(Error.prototype);\n\n  function timeoutWithSelector(source, firstTimeout, timeoutDurationSelector, other) {\n    if (isFunction(firstTimeout)) {\n      other = timeoutDurationSelector;\n      timeoutDurationSelector = firstTimeout;\n      firstTimeout = observableNever();\n    }\n    Observable.isObservable(other) || (other = observableThrow(new TimeoutError()));\n    return new AnonymousObservable(function (o) {\n      var subscription = new SerialDisposable(),\n        timer = new SerialDisposable(),\n        original = new SingleAssignmentDisposable();\n\n      subscription.setDisposable(original);\n\n      var id = 0, switched = false;\n\n      function setTimer(timeout) {\n        var myId = id, d = new SingleAssignmentDisposable();\n\n        function timerWins() {\n          switched = (myId === id);\n          return switched;\n        }\n\n        timer.setDisposable(d);\n        d.setDisposable(timeout.subscribe(function () {\n          timerWins() && subscription.setDisposable(other.subscribe(o));\n          d.dispose();\n        }, function (e) {\n          timerWins() && o.onError(e);\n        }, function () {\n          timerWins() && subscription.setDisposable(other.subscribe(o));\n        }));\n      };\n\n      setTimer(firstTimeout);\n\n      function oWins() {\n        var res = !switched;\n        if (res) { id++; }\n        return res;\n      }\n\n      original.setDisposable(source.subscribe(function (x) {\n        if (oWins()) {\n          o.onNext(x);\n          var timeout = tryCatch(timeoutDurationSelector)(x);\n          if (timeout === errorObj) { return o.onError(timeout.e); }\n          setTimer(isPromise(timeout) ? observableFromPromise(timeout) : timeout);\n        }\n      }, function (e) {\n        oWins() && o.onError(e);\n      }, function () {\n        oWins() && o.onCompleted();\n      }));\n      return new BinaryDisposable(subscription, timer);\n    }, source);\n  }\n\n  function timeout(source, dueTime, other, scheduler) {\n    if (isScheduler(other)) {\n      scheduler = other;\n      other = observableThrow(new TimeoutError());\n    }\n    if (other instanceof Error) { other = observableThrow(other); }\n    isScheduler(scheduler) || (scheduler = defaultScheduler);\n    Observable.isObservable(other) || (other = observableThrow(new TimeoutError()));\n    return new AnonymousObservable(function (o) {\n      var id = 0,\n        original = new SingleAssignmentDisposable(),\n        subscription = new SerialDisposable(),\n        switched = false,\n        timer = new SerialDisposable();\n\n      subscription.setDisposable(original);\n\n      function createTimer() {\n        var myId = id;\n        timer.setDisposable(scheduler.scheduleFuture(null, dueTime, function () {\n          switched = id === myId;\n          if (switched) {\n            isPromise(other) && (other = observableFromPromise(other));\n            subscription.setDisposable(other.subscribe(o));\n          }\n        }));\n      }\n\n      createTimer();\n\n      original.setDisposable(source.subscribe(function (x) {\n        if (!switched) {\n          id++;\n          o.onNext(x);\n          createTimer();\n        }\n      }, function (e) {\n        if (!switched) {\n          id++;\n          o.onError(e);\n        }\n      }, function () {\n        if (!switched) {\n          id++;\n          o.onCompleted();\n        }\n      }));\n      return new BinaryDisposable(subscription, timer);\n    }, source);\n  }\n\n  observableProto.timeout = function () {\n    var firstArg = arguments[0];\n    if (firstArg instanceof Date || typeof firstArg === 'number') {\n      return timeout(this, firstArg, arguments[1], arguments[2]);\n    } else if (Observable.isObservable(firstArg) || isFunction(firstArg)) {\n      return timeoutWithSelector(this, firstArg, arguments[1], arguments[2]);\n    } else {\n      throw new Error('Invalid arguments');\n    }\n  };\n\n  /**\n   * Returns an Observable that emits only the first item emitted by the source Observable during sequential time windows of a specified duration.\n   * @param {Number} windowDuration time to wait before emitting another item after emitting the last item\n   * @param {Scheduler} [scheduler] the Scheduler to use internally to manage the timers that handle timeout for each item. If not provided, defaults to Scheduler.timeout.\n   * @returns {Observable} An Observable that performs the throttle operation.\n   */\n  observableProto.throttle = function (windowDuration, scheduler) {\n    isScheduler(scheduler) || (scheduler = defaultScheduler);\n    var duration = +windowDuration || 0;\n    if (duration <= 0) { throw new RangeError('windowDuration cannot be less or equal zero.'); }\n    var source = this;\n    return new AnonymousObservable(function (o) {\n      var lastOnNext = 0;\n      return source.subscribe(\n        function (x) {\n          var now = scheduler.now();\n          if (lastOnNext === 0 || now - lastOnNext >= duration) {\n            lastOnNext = now;\n            o.onNext(x);\n          }\n        },function (e) { o.onError(e); }, function () { o.onCompleted(); }\n      );\n    }, source);\n  };\n\n  var PausableObservable = (function (__super__) {\n    inherits(PausableObservable, __super__);\n    function PausableObservable(source, pauser) {\n      this.source = source;\n      this.controller = new Subject();\n\n      if (pauser && pauser.subscribe) {\n        this.pauser = this.controller.merge(pauser);\n      } else {\n        this.pauser = this.controller;\n      }\n\n      __super__.call(this);\n    }\n\n    PausableObservable.prototype._subscribe = function (o) {\n      var conn = this.source.publish(),\n        subscription = conn.subscribe(o),\n        connection = disposableEmpty;\n\n      var pausable = this.pauser.distinctUntilChanged().subscribe(function (b) {\n        if (b) {\n          connection = conn.connect();\n        } else {\n          connection.dispose();\n          connection = disposableEmpty;\n        }\n      });\n\n      return new NAryDisposable([subscription, connection, pausable]);\n    };\n\n    PausableObservable.prototype.pause = function () {\n      this.controller.onNext(false);\n    };\n\n    PausableObservable.prototype.resume = function () {\n      this.controller.onNext(true);\n    };\n\n    return PausableObservable;\n\n  }(Observable));\n\n  /**\n   * Pauses the underlying observable sequence based upon the observable sequence which yields true/false.\n   * @example\n   * var pauser = new Rx.Subject();\n   * var source = Rx.Observable.interval(100).pausable(pauser);\n   * @param {Observable} pauser The observable sequence used to pause the underlying sequence.\n   * @returns {Observable} The observable sequence which is paused based upon the pauser.\n   */\n  observableProto.pausable = function (pauser) {\n    return new PausableObservable(this, pauser);\n  };\n\n  function combineLatestSource(source, subject, resultSelector) {\n    return new AnonymousObservable(function (o) {\n      var hasValue = [false, false],\n        hasValueAll = false,\n        isDone = false,\n        values = new Array(2),\n        err;\n\n      function next(x, i) {\n        values[i] = x;\n        hasValue[i] = true;\n        if (hasValueAll || (hasValueAll = hasValue.every(identity))) {\n          if (err) { return o.onError(err); }\n          var res = tryCatch(resultSelector).apply(null, values);\n          if (res === errorObj) { return o.onError(res.e); }\n          o.onNext(res);\n        }\n        isDone && values[1] && o.onCompleted();\n      }\n\n      return new BinaryDisposable(\n        source.subscribe(\n          function (x) {\n            next(x, 0);\n          },\n          function (e) {\n            if (values[1]) {\n              o.onError(e);\n            } else {\n              err = e;\n            }\n          },\n          function () {\n            isDone = true;\n            values[1] && o.onCompleted();\n          }),\n        subject.subscribe(\n          function (x) {\n            next(x, 1);\n          },\n          function (e) { o.onError(e); },\n          function () {\n            isDone = true;\n            next(true, 1);\n          })\n        );\n    }, source);\n  }\n\n  var PausableBufferedObservable = (function (__super__) {\n    inherits(PausableBufferedObservable, __super__);\n    function PausableBufferedObservable(source, pauser) {\n      this.source = source;\n      this.controller = new Subject();\n\n      if (pauser && pauser.subscribe) {\n        this.pauser = this.controller.merge(pauser);\n      } else {\n        this.pauser = this.controller;\n      }\n\n      __super__.call(this);\n    }\n\n    PausableBufferedObservable.prototype._subscribe = function (o) {\n      var q = [], previousShouldFire;\n\n      function drainQueue() { while (q.length > 0) { o.onNext(q.shift()); } }\n\n      var subscription =\n        combineLatestSource(\n          this.source,\n          this.pauser.startWith(false).distinctUntilChanged(),\n          function (data, shouldFire) {\n            return { data: data, shouldFire: shouldFire };\n          })\n          .subscribe(\n            function (results) {\n              if (previousShouldFire !== undefined && results.shouldFire !== previousShouldFire) {\n                previousShouldFire = results.shouldFire;\n                // change in shouldFire\n                if (results.shouldFire) { drainQueue(); }\n              } else {\n                previousShouldFire = results.shouldFire;\n                // new data\n                if (results.shouldFire) {\n                  o.onNext(results.data);\n                } else {\n                  q.push(results.data);\n                }\n              }\n            },\n            function (err) {\n              drainQueue();\n              o.onError(err);\n            },\n            function () {\n              drainQueue();\n              o.onCompleted();\n            }\n          );\n      return subscription;      \n    };\n\n    PausableBufferedObservable.prototype.pause = function () {\n      this.controller.onNext(false);\n    };\n\n    PausableBufferedObservable.prototype.resume = function () {\n      this.controller.onNext(true);\n    };\n\n    return PausableBufferedObservable;\n\n  }(Observable));\n\n  /**\n   * Pauses the underlying observable sequence based upon the observable sequence which yields true/false,\n   * and yields the values that were buffered while paused.\n   * @example\n   * var pauser = new Rx.Subject();\n   * var source = Rx.Observable.interval(100).pausableBuffered(pauser);\n   * @param {Observable} pauser The observable sequence used to pause the underlying sequence.\n   * @returns {Observable} The observable sequence which is paused based upon the pauser.\n   */\n  observableProto.pausableBuffered = function (pauser) {\n    return new PausableBufferedObservable(this, pauser);\n  };\n\n  var ControlledObservable = (function (__super__) {\n    inherits(ControlledObservable, __super__);\n    function ControlledObservable (source, enableQueue, scheduler) {\n      __super__.call(this);\n      this.subject = new ControlledSubject(enableQueue, scheduler);\n      this.source = source.multicast(this.subject).refCount();\n    }\n\n    ControlledObservable.prototype._subscribe = function (o) {\n      return this.source.subscribe(o);\n    };\n\n    ControlledObservable.prototype.request = function (numberOfItems) {\n      return this.subject.request(numberOfItems == null ? -1 : numberOfItems);\n    };\n\n    return ControlledObservable;\n\n  }(Observable));\n\n  var ControlledSubject = (function (__super__) {\n    inherits(ControlledSubject, __super__);\n    function ControlledSubject(enableQueue, scheduler) {\n      enableQueue == null && (enableQueue = true);\n\n      __super__.call(this);\n      this.subject = new Subject();\n      this.enableQueue = enableQueue;\n      this.queue = enableQueue ? [] : null;\n      this.requestedCount = 0;\n      this.requestedDisposable = null;\n      this.error = null;\n      this.hasFailed = false;\n      this.hasCompleted = false;\n      this.scheduler = scheduler || currentThreadScheduler;\n    }\n\n    addProperties(ControlledSubject.prototype, Observer, {\n      _subscribe: function (o) {\n        return this.subject.subscribe(o);\n      },\n      onCompleted: function () {\n        this.hasCompleted = true;\n        if (!this.enableQueue || this.queue.length === 0) {\n          this.subject.onCompleted();\n          this.disposeCurrentRequest();\n        } else {\n          this.queue.push(Notification.createOnCompleted());\n        }\n      },\n      onError: function (error) {\n        this.hasFailed = true;\n        this.error = error;\n        if (!this.enableQueue || this.queue.length === 0) {\n          this.subject.onError(error);\n          this.disposeCurrentRequest();\n        } else {\n          this.queue.push(Notification.createOnError(error));\n        }\n      },\n      onNext: function (value) {\n        if (this.requestedCount <= 0) {\n          this.enableQueue && this.queue.push(Notification.createOnNext(value));\n        } else {\n          (this.requestedCount-- === 0) && this.disposeCurrentRequest();\n          this.subject.onNext(value);\n        }\n      },\n      _processRequest: function (numberOfItems) {\n        if (this.enableQueue) {\n          while (this.queue.length > 0 && (numberOfItems > 0 || this.queue[0].kind !== 'N')) {\n            var first = this.queue.shift();\n            first.accept(this.subject);\n            if (first.kind === 'N') {\n              numberOfItems--;\n            } else {\n              this.disposeCurrentRequest();\n              this.queue = [];\n            }\n          }\n        }\n\n        return numberOfItems;\n      },\n      request: function (number) {\n        this.disposeCurrentRequest();\n        var self = this;\n\n        this.requestedDisposable = this.scheduler.schedule(number,\n        function(s, i) {\n          var remaining = self._processRequest(i);\n          var stopped = self.hasCompleted || self.hasFailed;\n          if (!stopped && remaining > 0) {\n            self.requestedCount = remaining;\n\n            return disposableCreate(function () {\n              self.requestedCount = 0;\n            });\n              // Scheduled item is still in progress. Return a new\n              // disposable to allow the request to be interrupted\n              // via dispose.\n          }\n        });\n\n        return this.requestedDisposable;\n      },\n      disposeCurrentRequest: function () {\n        if (this.requestedDisposable) {\n          this.requestedDisposable.dispose();\n          this.requestedDisposable = null;\n        }\n      }\n    });\n\n    return ControlledSubject;\n  }(Observable));\n\n  /**\n   * Attaches a controller to the observable sequence with the ability to queue.\n   * @example\n   * var source = Rx.Observable.interval(100).controlled();\n   * source.request(3); // Reads 3 values\n   * @param {bool} enableQueue truthy value to determine if values should be queued pending the next request\n   * @param {Scheduler} scheduler determines how the requests will be scheduled\n   * @returns {Observable} The observable sequence which only propagates values on request.\n   */\n  observableProto.controlled = function (enableQueue, scheduler) {\n\n    if (enableQueue && isScheduler(enableQueue)) {\n      scheduler = enableQueue;\n      enableQueue = true;\n    }\n\n    if (enableQueue == null) {  enableQueue = true; }\n    return new ControlledObservable(this, enableQueue, scheduler);\n  };\n\n  /**\n   * Pipes the existing Observable sequence into a Node.js Stream.\n   * @param {Stream} dest The destination Node.js stream.\n   * @returns {Stream} The destination stream.\n   */\n  observableProto.pipe = function (dest) {\n    var source = this.pausableBuffered();\n\n    function onDrain() {\n      source.resume();\n    }\n\n    dest.addListener('drain', onDrain);\n\n    source.subscribe(\n      function (x) {\n        !dest.write(String(x)) && source.pause();\n      },\n      function (err) {\n        dest.emit('error', err);\n      },\n      function () {\n        // Hack check because STDIO is not closable\n        !dest._isStdio && dest.end();\n        dest.removeListener('drain', onDrain);\n      });\n\n    source.resume();\n\n    return dest;\n  };\n\n  var TransduceObserver = (function (__super__) {\n    inherits(TransduceObserver, __super__);\n    function TransduceObserver(o, xform) {\n      this._o = o;\n      this._xform = xform;\n      __super__.call(this);\n    }\n\n    TransduceObserver.prototype.next = function (x) {\n      var res = tryCatch(this._xform['@@transducer/step']).call(this._xform, this._o, x);\n      if (res === errorObj) { this._o.onError(res.e); }\n    };\n\n    TransduceObserver.prototype.error = function (e) { this._o.onError(e); };\n\n    TransduceObserver.prototype.completed = function () {\n      this._xform['@@transducer/result'](this._o);\n    };\n\n    return TransduceObserver;\n  }(AbstractObserver));\n\n  function transformForObserver(o) {\n    return {\n      '@@transducer/init': function() {\n        return o;\n      },\n      '@@transducer/step': function(obs, input) {\n        return obs.onNext(input);\n      },\n      '@@transducer/result': function(obs) {\n        return obs.onCompleted();\n      }\n    };\n  }\n\n  /**\n   * Executes a transducer to transform the observable sequence\n   * @param {Transducer} transducer A transducer to execute\n   * @returns {Observable} An Observable sequence containing the results from the transducer.\n   */\n  observableProto.transduce = function(transducer) {\n    var source = this;\n    return new AnonymousObservable(function(o) {\n      var xform = transducer(transformForObserver(o));\n      return source.subscribe(new TransduceObserver(o, xform));\n    }, source);\n  };\n\n  var AnonymousObservable = Rx.AnonymousObservable = (function (__super__) {\n    inherits(AnonymousObservable, __super__);\n\n    // Fix subscriber to check for undefined or function returned to decorate as Disposable\n    function fixSubscriber(subscriber) {\n      return subscriber && isFunction(subscriber.dispose) ? subscriber :\n        isFunction(subscriber) ? disposableCreate(subscriber) : disposableEmpty;\n    }\n\n    function setDisposable(s, state) {\n      var ado = state[0], self = state[1];\n      var sub = tryCatch(self.__subscribe).call(self, ado);\n      if (sub === errorObj && !ado.fail(errorObj.e)) { thrower(errorObj.e); }\n      ado.setDisposable(fixSubscriber(sub));\n    }\n\n    function AnonymousObservable(subscribe, parent) {\n      this.source = parent;\n      this.__subscribe = subscribe;\n      __super__.call(this);\n    }\n\n    AnonymousObservable.prototype._subscribe = function (o) {\n      var ado = new AutoDetachObserver(o), state = [ado, this];\n\n      if (currentThreadScheduler.scheduleRequired()) {\n        currentThreadScheduler.schedule(state, setDisposable);\n      } else {\n        setDisposable(null, state);\n      }\n      return ado;\n    };\n\n    return AnonymousObservable;\n\n  }(Observable));\n\n  var AutoDetachObserver = (function (__super__) {\n    inherits(AutoDetachObserver, __super__);\n\n    function AutoDetachObserver(observer) {\n      __super__.call(this);\n      this.observer = observer;\n      this.m = new SingleAssignmentDisposable();\n    }\n\n    var AutoDetachObserverPrototype = AutoDetachObserver.prototype;\n\n    AutoDetachObserverPrototype.next = function (value) {\n      var result = tryCatch(this.observer.onNext).call(this.observer, value);\n      if (result === errorObj) {\n        this.dispose();\n        thrower(result.e);\n      }\n    };\n\n    AutoDetachObserverPrototype.error = function (err) {\n      var result = tryCatch(this.observer.onError).call(this.observer, err);\n      this.dispose();\n      result === errorObj && thrower(result.e);\n    };\n\n    AutoDetachObserverPrototype.completed = function () {\n      var result = tryCatch(this.observer.onCompleted).call(this.observer);\n      this.dispose();\n      result === errorObj && thrower(result.e);\n    };\n\n    AutoDetachObserverPrototype.setDisposable = function (value) { this.m.setDisposable(value); };\n    AutoDetachObserverPrototype.getDisposable = function () { return this.m.getDisposable(); };\n\n    AutoDetachObserverPrototype.dispose = function () {\n      __super__.prototype.dispose.call(this);\n      this.m.dispose();\n    };\n\n    return AutoDetachObserver;\n  }(AbstractObserver));\n\n  var InnerSubscription = function (s, o) {\n    this._s = s;\n    this._o = o;\n  };\n\n  InnerSubscription.prototype.dispose = function () {\n    if (!this._s.isDisposed && this._o !== null) {\n      var idx = this._s.observers.indexOf(this._o);\n      this._s.observers.splice(idx, 1);\n      this._o = null;\n    }\n  };\n\n  /**\n   *  Represents an object that is both an observable sequence as well as an observer.\n   *  Each notification is broadcasted to all subscribed observers.\n   */\n  var Subject = Rx.Subject = (function (__super__) {\n    inherits(Subject, __super__);\n    function Subject() {\n      __super__.call(this);\n      this.isDisposed = false;\n      this.isStopped = false;\n      this.observers = [];\n      this.hasError = false;\n    }\n\n    addProperties(Subject.prototype, Observer.prototype, {\n      _subscribe: function (o) {\n        checkDisposed(this);\n        if (!this.isStopped) {\n          this.observers.push(o);\n          return new InnerSubscription(this, o);\n        }\n        if (this.hasError) {\n          o.onError(this.error);\n          return disposableEmpty;\n        }\n        o.onCompleted();\n        return disposableEmpty;\n      },\n      /**\n       * Indicates whether the subject has observers subscribed to it.\n       * @returns {Boolean} Indicates whether the subject has observers subscribed to it.\n       */\n      hasObservers: function () { checkDisposed(this); return this.observers.length > 0; },\n      /**\n       * Notifies all subscribed observers about the end of the sequence.\n       */\n      onCompleted: function () {\n        checkDisposed(this);\n        if (!this.isStopped) {\n          this.isStopped = true;\n          for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n            os[i].onCompleted();\n          }\n\n          this.observers.length = 0;\n        }\n      },\n      /**\n       * Notifies all subscribed observers about the exception.\n       * @param {Mixed} error The exception to send to all observers.\n       */\n      onError: function (error) {\n        checkDisposed(this);\n        if (!this.isStopped) {\n          this.isStopped = true;\n          this.error = error;\n          this.hasError = true;\n          for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n            os[i].onError(error);\n          }\n\n          this.observers.length = 0;\n        }\n      },\n      /**\n       * Notifies all subscribed observers about the arrival of the specified element in the sequence.\n       * @param {Mixed} value The value to send to all observers.\n       */\n      onNext: function (value) {\n        checkDisposed(this);\n        if (!this.isStopped) {\n          for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n            os[i].onNext(value);\n          }\n        }\n      },\n      /**\n       * Unsubscribe all observers and release resources.\n       */\n      dispose: function () {\n        this.isDisposed = true;\n        this.observers = null;\n      }\n    });\n\n    /**\n     * Creates a subject from the specified observer and observable.\n     * @param {Observer} observer The observer used to send messages to the subject.\n     * @param {Observable} observable The observable used to subscribe to messages sent from the subject.\n     * @returns {Subject} Subject implemented using the given observer and observable.\n     */\n    Subject.create = function (observer, observable) {\n      return new AnonymousSubject(observer, observable);\n    };\n\n    return Subject;\n  }(Observable));\n\n  /**\n   *  Represents the result of an asynchronous operation.\n   *  The last value before the OnCompleted notification, or the error received through OnError, is sent to all subscribed observers.\n   */\n  var AsyncSubject = Rx.AsyncSubject = (function (__super__) {\n    inherits(AsyncSubject, __super__);\n\n    /**\n     * Creates a subject that can only receive one value and that value is cached for all future observations.\n     * @constructor\n     */\n    function AsyncSubject() {\n      __super__.call(this);\n      this.isDisposed = false;\n      this.isStopped = false;\n      this.hasValue = false;\n      this.observers = [];\n      this.hasError = false;\n    }\n\n    addProperties(AsyncSubject.prototype, Observer.prototype, {\n      _subscribe: function (o) {\n        checkDisposed(this);\n\n        if (!this.isStopped) {\n          this.observers.push(o);\n          return new InnerSubscription(this, o);\n        }\n\n        if (this.hasError) {\n          o.onError(this.error);\n        } else if (this.hasValue) {\n          o.onNext(this.value);\n          o.onCompleted();\n        } else {\n          o.onCompleted();\n        }\n\n        return disposableEmpty;\n      },\n      /**\n       * Indicates whether the subject has observers subscribed to it.\n       * @returns {Boolean} Indicates whether the subject has observers subscribed to it.\n       */\n      hasObservers: function () { checkDisposed(this); return this.observers.length > 0; },\n      /**\n       * Notifies all subscribed observers about the end of the sequence, also causing the last received value to be sent out (if any).\n       */\n      onCompleted: function () {\n        var i, len;\n        checkDisposed(this);\n        if (!this.isStopped) {\n          this.isStopped = true;\n          var os = cloneArray(this.observers), len = os.length;\n\n          if (this.hasValue) {\n            for (i = 0; i < len; i++) {\n              var o = os[i];\n              o.onNext(this.value);\n              o.onCompleted();\n            }\n          } else {\n            for (i = 0; i < len; i++) {\n              os[i].onCompleted();\n            }\n          }\n\n          this.observers.length = 0;\n        }\n      },\n      /**\n       * Notifies all subscribed observers about the error.\n       * @param {Mixed} error The Error to send to all observers.\n       */\n      onError: function (error) {\n        checkDisposed(this);\n        if (!this.isStopped) {\n          this.isStopped = true;\n          this.hasError = true;\n          this.error = error;\n\n          for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n            os[i].onError(error);\n          }\n\n          this.observers.length = 0;\n        }\n      },\n      /**\n       * Sends a value to the subject. The last value received before successful termination will be sent to all subscribed and future observers.\n       * @param {Mixed} value The value to store in the subject.\n       */\n      onNext: function (value) {\n        checkDisposed(this);\n        if (this.isStopped) { return; }\n        this.value = value;\n        this.hasValue = true;\n      },\n      /**\n       * Unsubscribe all observers and release resources.\n       */\n      dispose: function () {\n        this.isDisposed = true;\n        this.observers = null;\n        this.error = null;\n        this.value = null;\n      }\n    });\n\n    return AsyncSubject;\n  }(Observable));\n\n  var AnonymousSubject = Rx.AnonymousSubject = (function (__super__) {\n    inherits(AnonymousSubject, __super__);\n    function AnonymousSubject(observer, observable) {\n      this.observer = observer;\n      this.observable = observable;\n      __super__.call(this);\n    }\n\n    addProperties(AnonymousSubject.prototype, Observer.prototype, {\n      _subscribe: function (o) {\n        return this.observable.subscribe(o);\n      },\n      onCompleted: function () {\n        this.observer.onCompleted();\n      },\n      onError: function (error) {\n        this.observer.onError(error);\n      },\n      onNext: function (value) {\n        this.observer.onNext(value);\n      }\n    });\n\n    return AnonymousSubject;\n  }(Observable));\n\n  /**\n   *  Represents a value that changes over time.\n   *  Observers can subscribe to the subject to receive the last (or initial) value and all subsequent notifications.\n   */\n  var BehaviorSubject = Rx.BehaviorSubject = (function (__super__) {\n    inherits(BehaviorSubject, __super__);\n    function BehaviorSubject(value) {\n      __super__.call(this);\n      this.value = value;\n      this.observers = [];\n      this.isDisposed = false;\n      this.isStopped = false;\n      this.hasError = false;\n    }\n\n    addProperties(BehaviorSubject.prototype, Observer.prototype, {\n      _subscribe: function (o) {\n        checkDisposed(this);\n        if (!this.isStopped) {\n          this.observers.push(o);\n          o.onNext(this.value);\n          return new InnerSubscription(this, o);\n        }\n        if (this.hasError) {\n          o.onError(this.error);\n        } else {\n          o.onCompleted();\n        }\n        return disposableEmpty;\n      },\n      /**\n       * Gets the current value or throws an exception.\n       * Value is frozen after onCompleted is called.\n       * After onError is called always throws the specified exception.\n       * An exception is always thrown after dispose is called.\n       * @returns {Mixed} The initial value passed to the constructor until onNext is called; after which, the last value passed to onNext.\n       */\n      getValue: function () {\n        checkDisposed(this);\n        if (this.hasError) { thrower(this.error); }\n        return this.value;\n      },\n      /**\n       * Indicates whether the subject has observers subscribed to it.\n       * @returns {Boolean} Indicates whether the subject has observers subscribed to it.\n       */\n      hasObservers: function () { checkDisposed(this); return this.observers.length > 0; },\n      /**\n       * Notifies all subscribed observers about the end of the sequence.\n       */\n      onCompleted: function () {\n        checkDisposed(this);\n        if (this.isStopped) { return; }\n        this.isStopped = true;\n        for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n          os[i].onCompleted();\n        }\n\n        this.observers.length = 0;\n      },\n      /**\n       * Notifies all subscribed observers about the exception.\n       * @param {Mixed} error The exception to send to all observers.\n       */\n      onError: function (error) {\n        checkDisposed(this);\n        if (this.isStopped) { return; }\n        this.isStopped = true;\n        this.hasError = true;\n        this.error = error;\n\n        for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n          os[i].onError(error);\n        }\n\n        this.observers.length = 0;\n      },\n      /**\n       * Notifies all subscribed observers about the arrival of the specified element in the sequence.\n       * @param {Mixed} value The value to send to all observers.\n       */\n      onNext: function (value) {\n        checkDisposed(this);\n        if (this.isStopped) { return; }\n        this.value = value;\n        for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n          os[i].onNext(value);\n        }\n      },\n      /**\n       * Unsubscribe all observers and release resources.\n       */\n      dispose: function () {\n        this.isDisposed = true;\n        this.observers = null;\n        this.value = null;\n        this.error = null;\n      }\n    });\n\n    return BehaviorSubject;\n  }(Observable));\n\n  /**\n   * Represents an object that is both an observable sequence as well as an observer.\n   * Each notification is broadcasted to all subscribed and future observers, subject to buffer trimming policies.\n   */\n  var ReplaySubject = Rx.ReplaySubject = (function (__super__) {\n\n    var maxSafeInteger = Math.pow(2, 53) - 1;\n\n    function createRemovableDisposable(subject, observer) {\n      return disposableCreate(function () {\n        observer.dispose();\n        !subject.isDisposed && subject.observers.splice(subject.observers.indexOf(observer), 1);\n      });\n    }\n\n    inherits(ReplaySubject, __super__);\n\n    /**\n     *  Initializes a new instance of the ReplaySubject class with the specified buffer size, window size and scheduler.\n     *  @param {Number} [bufferSize] Maximum element count of the replay buffer.\n     *  @param {Number} [windowSize] Maximum time length of the replay buffer.\n     *  @param {Scheduler} [scheduler] Scheduler the observers are invoked on.\n     */\n    function ReplaySubject(bufferSize, windowSize, scheduler) {\n      this.bufferSize = bufferSize == null ? maxSafeInteger : bufferSize;\n      this.windowSize = windowSize == null ? maxSafeInteger : windowSize;\n      this.scheduler = scheduler || currentThreadScheduler;\n      this.q = [];\n      this.observers = [];\n      this.isStopped = false;\n      this.isDisposed = false;\n      this.hasError = false;\n      this.error = null;\n      __super__.call(this);\n    }\n\n    addProperties(ReplaySubject.prototype, Observer.prototype, {\n      _subscribe: function (o) {\n        checkDisposed(this);\n        var so = new ScheduledObserver(this.scheduler, o), subscription = createRemovableDisposable(this, so);\n\n        this._trim(this.scheduler.now());\n        this.observers.push(so);\n\n        for (var i = 0, len = this.q.length; i < len; i++) {\n          so.onNext(this.q[i].value);\n        }\n\n        if (this.hasError) {\n          so.onError(this.error);\n        } else if (this.isStopped) {\n          so.onCompleted();\n        }\n\n        so.ensureActive();\n        return subscription;\n      },\n      /**\n       * Indicates whether the subject has observers subscribed to it.\n       * @returns {Boolean} Indicates whether the subject has observers subscribed to it.\n       */\n      hasObservers: function () { checkDisposed(this); return this.observers.length > 0; },\n      _trim: function (now) {\n        while (this.q.length > this.bufferSize) {\n          this.q.shift();\n        }\n        while (this.q.length > 0 && (now - this.q[0].interval) > this.windowSize) {\n          this.q.shift();\n        }\n      },\n      /**\n       * Notifies all subscribed observers about the arrival of the specified element in the sequence.\n       * @param {Mixed} value The value to send to all observers.\n       */\n      onNext: function (value) {\n        checkDisposed(this);\n        if (this.isStopped) { return; }\n        var now = this.scheduler.now();\n        this.q.push({ interval: now, value: value });\n        this._trim(now);\n\n        for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n          var observer = os[i];\n          observer.onNext(value);\n          observer.ensureActive();\n        }\n      },\n      /**\n       * Notifies all subscribed observers about the exception.\n       * @param {Mixed} error The exception to send to all observers.\n       */\n      onError: function (error) {\n        checkDisposed(this);\n        if (this.isStopped) { return; }\n        this.isStopped = true;\n        this.error = error;\n        this.hasError = true;\n        var now = this.scheduler.now();\n        this._trim(now);\n        for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n          var observer = os[i];\n          observer.onError(error);\n          observer.ensureActive();\n        }\n        this.observers.length = 0;\n      },\n      /**\n       * Notifies all subscribed observers about the end of the sequence.\n       */\n      onCompleted: function () {\n        checkDisposed(this);\n        if (this.isStopped) { return; }\n        this.isStopped = true;\n        var now = this.scheduler.now();\n        this._trim(now);\n        for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n          var observer = os[i];\n          observer.onCompleted();\n          observer.ensureActive();\n        }\n        this.observers.length = 0;\n      },\n      /**\n       * Unsubscribe all observers and release resources.\n       */\n      dispose: function () {\n        this.isDisposed = true;\n        this.observers = null;\n      }\n    });\n\n    return ReplaySubject;\n  }(Observable));\n\n  /**\n  * Used to pause and resume streams.\n  */\n  Rx.Pauser = (function (__super__) {\n    inherits(Pauser, __super__);\n    function Pauser() {\n      __super__.call(this);\n    }\n\n    /**\n     * Pauses the underlying sequence.\n     */\n    Pauser.prototype.pause = function () { this.onNext(false); };\n\n    /**\n    * Resumes the underlying sequence.\n    */\n    Pauser.prototype.resume = function () { this.onNext(true); };\n\n    return Pauser;\n  }(Subject));\n\n  if (true) {\n    root.Rx = Rx;\n\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return Rx;\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (freeExports && freeModule) {\n    // in Node.js or RingoJS\n    if (moduleExports) {\n      (freeModule.exports = Rx).Rx = Rx;\n    } else {\n      freeExports.Rx = Rx;\n    }\n  } else {\n    // in a browser or Rhino\n    root.Rx = Rx;\n  }\n\n  // All code before this point will be filtered from stack traces.\n  var rEndingLine = captureLine();\n\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(90)(module), __webpack_require__(10), __webpack_require__(81)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar superagent = __webpack_require__(84);\n\nvar ajax = function(obj, cb) {\n  var url = obj.url;\n  var type = obj.method || obj.type || 'post';\n  var data = obj.data;\n  var request = superagent;\n\n  if (type.toLowerCase() === 'post') {\n    request = request.post( url ).send( data );\n  } else {\n    request = request.get( url );\n  }\n\n  request.end(function(res) {\n   return cb && res && cb(res.body || '');\n  });\n};\n\nmodule.exports = ajax;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Rx = __webpack_require__(2);\nvar config = __webpack_require__(1);\n\n\n/**\n*  user information event\n*  @memberof AlphaPoint\n*  @name userInformation\n*  @see {@link https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/subjects/behaviorsubject.md Rx.BehaviorSubject}\n*  @example\n*  var userInformation = AlphaPoint.userInformation.subscribe(\n*    function (data) {\n*      //data = {\n*      //  isAccepted: boolean,\n*      //  UseAuthy2FA: boolean,\n*      //  UseGoogle2FA: boolean,\n*      //  affiliateId: string,\n*      //  firstName: string,\n*      //  lastName: string,\n*      //  verificationLevels: number[]\n*      //}\n*    }\n*  );\n*\n*  // when finished with event subscription\n*  userInformation.dispose()\n*/\nvar userInformation = new Rx.BehaviorSubject({});\n\n/**\n*  user account event\n*  @memberof AlphaPoint\n*  @name accountInformation\n*  @see {@link https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/subjects/behaviorsubject.md Rx.BehaviorSubject}\n*  @example\n*  var accountInformation = AlphaPoint.accountInformation.subscribe(\n*    function (data) {\n*      //data = {\n*      //  currencies:[{\n*      //    balance: number,\n*      //    hold: number,\n*      //    name: string,\n*      //    unconfirmed: number\n*      //  }]\n*      //}\n*    }\n*  );\n*\n*  // when finished with event subscription\n*  accountInformation.dispose()\n*/\nvar accountInformation = new Rx.BehaviorSubject({});\n\n/**\n*  session event\n*  @memberof AlphaPoint\n*  @name session\n*  @see {@link https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/subjects/behaviorsubject.md Rx.BehaviorSubject}\n*  @example\n*  var session = AlphaPoint.session.subscribe(\n*    function (data) {\n*      //data = {\n*      //  accountId: number,\n*      //  expiryTimeMinutes: number,\n*      //  isAccepted: boolean,\n*      //  isFromAPIKey: boolean,\n*      //  lastActivityTime: number,\n*      //  sessionToken: string,\n*      //  timeLoggedOn: number,\n*      //  twoFaRequestType: string,\n*      //  userId: string\n*      //}\n*    }\n*  );\n*\n*  // when finished with event subscription\n*  session.dispose()\n*\n*  @param {string} test\n*/\nvar session = new Rx.BehaviorSubject({initial:true});\n\n/**\n*  account actions event\n*  @memberof AlphaPoint\n*  @name accountActions\n*  @see {@link https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/subjects/behaviorsubject.md Rx.BehaviorSubject}\n*  @example\n*  var accountActions = AlphaPoint.accountActions.subscribe(\n*    function (data) {\n*      //data = {\n*      //\n*      //}\n*    }\n*  );\n*\n*  // when finished with event subscription\n*  accountActions.dispose()\n*/\nvar accountActions = new Rx.BehaviorSubject([]);\n\n/**\n*  open orders event\n*  @memberof AlphaPoint\n*  @name openOrders\n*  @see {@link https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/subjects/behaviorsubject.md Rx.BehaviorSubject}\n*  @example\n*  var openOrders = AlphaPoint.openOrders.subscribe(\n*    function (data) {\n*      //data = {\n*      //\n*      //}\n*    }\n*  );\n*\n*  // when finished with event subscription\n*  openOrders.dispose()\n*/\nvar openOrders = new Rx.BehaviorSubject([]);\n\n/**\n*  L2 And Trades event\n*  @memberof AlphaPoint\n*  @name getL2AndTradesSubject\n*  @see {@link https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/subjects/subject.md Rx.Subject}\n*  @example\n*  var getL2AndTradesSubject = AlphaPoint.getL2AndTradesSubject.subscribe(\n*    function (data) {\n*      //data = {\n*      //\n*      //}\n*    }\n*  );\n*\n*  // when finished with event subscription\n*  getL2AndTradesSubject.dispose()\n*/\nvar getL2AndTradesSubject = new Rx.Subject();\n\nvar language = new Rx.BehaviorSubject({});\n\n\n\nvar getL2AndTrades = {};\nvar realTimeData = {};\n\nvar prodPair = new Rx.BehaviorSubject(config.prodPair);\n\n// var fromWebsocket = require('./fromWebsocket');\n// var getRealTimeSubject = fromWebsocket(config.charting_url);\nvar ajaxObserver = Rx.Observable.fromCallback( __webpack_require__(3) );\n\nvar tickers = [];\n\nmodule.exports = {\n  userInformation: userInformation,\n  accountInformation: accountInformation,\n  session: session,\n  prodPair: prodPair,\n  getL2AndTrades: getL2AndTrades,\n  realTimeData: realTimeData,\n  getL2AndTradesSubject: getL2AndTradesSubject,\n  // getRealTimeSubject: getRealTimeSubject,\n  tickers: tickers,\n  accountActions: accountActions,\n  language: language,\n  openOrders: openOrders\n};\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n// Helper class that containes various helper functions, classes, and patterns\r\n\r\n// Event class helps with c# style events\r\n\r\nfunction getCookie(cname) {\r\n    var name = cname + \"=\";\r\n    var ca = document.cookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') c = c.substring(1);\r\n        if (c.indexOf(name) == 0) return c.substring(name.length, c.length);\r\n    }\r\n    return \"\";\r\n}\r\n\r\nfunction setCookie(cname, cvalue, exminutes) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exminutes * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \"; \" + expires;\r\n}\r\n\r\n// returns the data in the callback, or null if there was an error\r\nfunction getRequest(url, callback)\r\n{\r\n    var request = new XMLHttpRequest();\r\n    request.open('GET', url, true);\r\n\r\n    request.onload = function () {\r\n        if (request.status >= 200 && request.status < 400) {\r\n            // Success!\r\n            callback(request.responseText);\r\n        } else {\r\n            // We reached our target server, but it returned an error\r\n            callback(null);\r\n        }\r\n    };\r\n\r\n    request.onerror = function () {\r\n        callback(null);\r\n    };\r\n\r\n    request.send();\r\n}\r\n\r\nfunction setElementHtml(url, htmlElement) {\r\n    if (!htmlElement)\r\n    {\r\n        alert(\"setElementHtml(\" + url + \",htmlElement) .. error\");\r\n        return;\r\n    }\r\n    var request = new XMLHttpRequest();\r\n    request.open('GET', url, true);\r\n    request.onload = function () {\r\n        if (request.status >= 200 && request.status < 400) {\r\n            insertAndExecute(htmlElement, request.responseText);\r\n          //  $(htmlElement).html(request.responseText);\r\n        }\r\n    };\r\n    request.send();\r\n}\r\n\r\n\r\n// sorts an associative array in js\r\nfunction getSortedKeys(obj) {\r\n    var keys = []; for (var key in obj) keys.push(key);\r\n    return keys.sort(function (a, b) { return obj[a] - obj[b] });\r\n}\r\n\r\n\r\n\r\nfunction insertAndExecute(htmElem, text) {\r\n    htmElem.innerHTML = text;\r\n    var scripts = [];\r\n    ret = htmElem.childNodes;\r\n    for (var i = 0; ret[i]; i++) {\r\n        if (nodeName(ret[i], \"script\") && (!ret[i].type || ret[i].type.toLowerCase() === \"text/javascript\")) {\r\n            scripts.push(ret[i].parentNode ? ret[i].parentNode.removeChild(ret[i]) : ret[i]);\r\n        }\r\n    }\r\n\r\n    for (script in scripts) {\r\n        evalScript(scripts[script]);\r\n    }\r\n}\r\nfunction nodeName(elem, name) {\r\n    return elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase();\r\n}\r\nfunction evalScript(elem) {\r\n    data = (elem.text || elem.textContent || elem.innerHTML || \"\");\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0] || document.documentElement,\r\n    script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n    script.appendChild(document.createTextNode(data));\r\n    head.insertBefore(script, head.firstChild);\r\n    head.removeChild(script);\r\n\r\n    if (elem.parentNode) {\r\n        elem.parentNode.removeChild(elem);\r\n    }\r\n}\r\n/// Usage:     \r\n/// var radios = document.getElementsByName('abc');\r\n/// var selected = getSelectedRadioInput(radios);\r\nfunction getSelectedRadioInput(radios) {\r\n    for (var i = 0, length = radios.length; i < length; i++) {\r\n        if (radios[i].checked) {\r\n            return radios[i].value;\r\n        }\r\n    }\r\n}\r\n\r\n/// Usage: \r\n/// hide(document.querySelectorAll('.target'));\r\n/// hide(document.querySelector('.target'));\r\n/// hide(document.getElementById('target'));\r\nfunction hide(elements) {\r\n    elements = elements.length ? elements : [elements];\r\n    for (var index = 0; index < elements.length; index++) {\r\n        elements[index].style.display = 'none';\r\n    }\r\n}\r\n\r\n// Usage:\r\n/// var elements = document.querySelectorAll('.target');\r\n/// show(elements);\r\n/// show(elements, 'inline-block'); // The second param allows you to specify a display value\r\nfunction show(elements, specifiedDisplay) {\r\n    elements = elements.length ? elements : [elements];\r\n    for (var index = 0; index < elements.length; index++) {\r\n        elements[index].style.display = specifiedDisplay || 'block';\r\n    }\r\n}\r\n\r\n\r\n/// Event Class (http://stackoverflow.com/questions/15963984/simulate-c-sharp-like-events-in-javascript) ///\r\n/// Event Class\r\nfunction Event(sender) {\r\n    this._sender = sender;\r\n    this._listeners = [];\r\n}\r\n\r\nEvent.prototype = {\r\n    attach: function (listener) {\r\n        this._listeners.push(listener);\r\n    },\r\n    notify: function (args) {\r\n        var event = this;\r\n        event._listeners.forEach(function(listener) {\r\n            listener(event._sender, args);\r\n        });\r\n    }\r\n};\r\n\r\n/*\r\nAnd your my class. For example:\r\n\r\nfunction MyClass(name) {\r\n     var self = this;\r\n     self.Name = name;\r\n     self.nameChanged = new Event(this);\r\n\r\n     self.setName = function (newName){\r\n         self.Name = newName;\r\n         self.nameChanged.notify(newName);\r\n     }\r\n}\r\nSubscribe to event example code:\r\n\r\nvar my_class_obj = new MyClass(\"Test\");\r\nmy_class_obj.nameChanged.attach(function (sender,args){\r\n\r\n});\r\nmy_class_obj.setName(\"newName\");\r\nYou can attach more event handlers and all these event handlers will get called. And you can also add more events as you'd like: addressChanged event for example. This approach also simulate c# event (sender and args)\r\n\r\n*/\r\n/// END Event Class ///\r\n/// END Event Class ///\r\n\r\nfunction updateArrayByPx(array, trade) {\r\n  var current = null;\r\n\r\n  array.forEach(function(obj, i) {\r\n    if (obj.Price === trade.Price) {\r\n      if (!trade.Quantity) {\r\n        array.splice(i, 1);\r\n      } else {\r\n        obj.Quantity = trade.Quantity; // updating the quantity on an order\r\n        current = obj;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (!current && trade.Quantity) {\r\n    array.push(trade);\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nmodule.exports = {\r\n    getCookie: getCookie,\r\n    setCookie: setCookie,\r\n    getRequest: getRequest,\r\n    setElementHtml: setElementHtml,\r\n    getSortedKeys: getSortedKeys,\r\n    insertAndExecute: insertAndExecute,\r\n    nodeName: nodeName,\r\n    evalScript: evalScript,\r\n    getSelectedRadioInput: getSelectedRadioInput,\r\n    hide: hide,\r\n    show: show,\r\n    Event: Event,\r\n    updateArrayByPx: updateArrayByPx\r\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Rx = __webpack_require__(2);\n\n//List of BehaviorSubjects\nvar authenticateSubject = new Rx.BehaviorSubject([]);\nvar webAuthenticateSubject = new Rx.BehaviorSubject([]);\nvar products = new Rx.BehaviorSubject([]);\nvar instruments = new Rx.BehaviorSubject([]);\nvar oms = new Rx.BehaviorSubject([]);\nvar registerUser = new Rx.BehaviorSubject([]);\nvar resetPass = new Rx.BehaviorSubject([]);\nvar subscribe1 = new Rx.BehaviorSubject([]);\nvar subscribe2 = new Rx.BehaviorSubject([]);\nvar subscribe1Update = new Rx.BehaviorSubject([]);\nvar subscribe2Update = new Rx.BehaviorSubject([]);\nvar subscribe2UpdateBook = new Rx.BehaviorSubject([]);\nvar subscribeTradesSubject = new Rx.BehaviorSubject([]);\nvar getTickerHist = new Rx.BehaviorSubject([]);\nvar unsubscribe1 = new Rx.BehaviorSubject([]);\nvar unsubscribe2 = new Rx.BehaviorSubject([]);\nvar unsubscribeTrades = new Rx.BehaviorSubject([]);\nvar orderPrefillPriceAndSide = new Rx.BehaviorSubject({});\n\n//Authenticated\nvar auth2FA = new Rx.BehaviorSubject([]);\nvar Disable2FA = new Rx.BehaviorSubject([]);\nvar EnableGoogle2FA = new Rx.BehaviorSubject([]);\nvar getUser = new Rx.BehaviorSubject([]);\nvar setUser = new Rx.BehaviorSubject([]);\nvar setUserConfig = new Rx.BehaviorSubject([]);\nvar getUserConfig = new Rx.BehaviorSubject([]);\nvar getUserConfigVal = new Rx.BehaviorSubject([]);\nvar reqVerifyEmail = new Rx.BehaviorSubject([]);\nvar openorders = new Rx.BehaviorSubject([]);\nvar tradeReports = new Rx.BehaviorSubject([]);\nvar openquotes = new Rx.BehaviorSubject([]);\nvar accountTrades = new Rx.BehaviorSubject([]);\nvar accountTransactions = new Rx.BehaviorSubject([]);\nvar accountHistory = new Rx.BehaviorSubject([]);\nvar accountDepositHistory = new Rx.BehaviorSubject([]);\nvar accountWithDrawHistory = new Rx.BehaviorSubject([]);\nvar accountPositions = new Rx.BehaviorSubject([]);\nvar accountEvents = new Rx.BehaviorSubject([]);\nvar accountInfo = new Rx.BehaviorSubject([]);\nvar userAccounts = new Rx.BehaviorSubject([]);\nvar selectedAccount = new Rx.BehaviorSubject(null);\nvar orderHistory = new Rx.BehaviorSubject([]);\nvar orderfee = new Rx.BehaviorSubject([]);\nvar sendorder = new Rx.BehaviorSubject([]);\nvar submitBlockTradeEvent = new Rx.BehaviorSubject([]);\nvar cancel = new Rx.BehaviorSubject([]);\nvar cancelReplace = new Rx.BehaviorSubject([]);\nvar cancelAll = new Rx.BehaviorSubject([]);\nvar modify = new Rx.BehaviorSubject([]);\nvar rejectedOrders = new Rx.BehaviorSubject([]);\nvar sellOrders = new Rx.BehaviorSubject([]);\nvar buyOrders = new Rx.BehaviorSubject([]);\nvar sellOrdersUpdate = new Rx.BehaviorSubject([]);\nvar buyOrdersUpdate = new Rx.BehaviorSubject([]);\nvar lvl2Sells = new Rx.BehaviorSubject([]); // for Joe\nvar lvl2Buys = new Rx.BehaviorSubject([]); // for Joe\nvar lvl2SellsUpdate = new Rx.BehaviorSubject([]); // for Joe\nvar lvl2BuysUpdate = new Rx.BehaviorSubject([]); // for Joe\nvar lvl2RawUpdate = new Rx.BehaviorSubject([]); // for Joe\nvar lvl2Update = new Rx.BehaviorSubject([]);\nvar deposits = new Rx.BehaviorSubject([]);\nvar withdrawTemplateTypes = new Rx.BehaviorSubject([]);\nvar withdrawTemplate = new Rx.BehaviorSubject([]);\nvar submitWithdraw = new Rx.BehaviorSubject([]);\nvar createWithdrawTicket = new Rx.BehaviorSubject([]);\nvar createDeposit = new Rx.BehaviorSubject([]);\nvar keys = new Rx.BehaviorSubject([]);\nvar accountBalances = new Rx.BehaviorSubject([]);\nvar accountOrders = new Rx.BehaviorSubject([]);\nvar addApiKey = new Rx.BehaviorSubject([]);\nvar removeApiKey = new Rx.BehaviorSubject([]);\nvar myApiKeys = new Rx.BehaviorSubject([]);\nvar logoutEvent = new Rx.BehaviorSubject([]);\nvar openorderEvents = new Rx.BehaviorSubject([]);\nvar transfunds = new Rx.BehaviorSubject([]);\nvar requestfunds = new Rx.BehaviorSubject([]);\nvar getrequests = new Rx.BehaviorSubject([]);\nvar confirmrequests = new Rx.BehaviorSubject([]);\nvar rejectrequests = new Rx.BehaviorSubject([]);\nvar verifylevel = new Rx.BehaviorSubject([]);\nvar verificationLevelUpdate = new Rx.BehaviorSubject([]);\nvar sessionLoaded = new Rx.BehaviorSubject(false);\nvar userReports = new Rx.BehaviorSubject([]);\nvar userReportTickets = new Rx.BehaviorSubject([]);\nvar depositTemplate = new Rx.BehaviorSubject({});\n\nvar list = {\n  //Unauthenticated\n  authenticateSubject: authenticateSubject,\n  webAuthenticateSubject: webAuthenticateSubject,\n  products: products,\n  instruments: instruments,\n  oms: oms,\n  registerUser: registerUser,\n  resetPass: resetPass,\n  subscribe1: subscribe1,\n  subscribe2: subscribe2,\n  subscribe1Update: subscribe1Update,\n  subscribe2Update: subscribe2Update,\n  subscribe2UpdateBook: subscribe2UpdateBook,\n  subscribeTradesSubject: subscribeTradesSubject,\n  getTickerHist: getTickerHist,\n  unsubscribe1: unsubscribe1,\n  unsubscribe2: unsubscribe2,\n  unsubscribeTrades: unsubscribeTrades,\n  orderPrefillPriceAndSide: orderPrefillPriceAndSide,\n  buyOrders: buyOrders,\n  sellOrders: sellOrders,\n  buyOrdersUpdate: buyOrdersUpdate,\n  sellOrdersUpdate: sellOrdersUpdate,\n  lvl2Buys: lvl2Buys,\n  lvl2Sells: lvl2Sells,\n  lvl2BuysUpdate: lvl2BuysUpdate,\n  lvl2SellsUpdate: lvl2SellsUpdate,\n  lvl2RawUpdate: lvl2RawUpdate,\n  lvl2Update: lvl2Update,\n\n  //Authenticated\n  auth2FA: auth2FA,\n  Disable2FA: Disable2FA,\n  EnableGoogle2FA: EnableGoogle2FA,\n  getUser: getUser,\n  setUser: setUser,\n  setUserConfig: setUserConfig,\n  getUserConfig: getUserConfig,\n  getUserConfigVal: getUserConfigVal,\n  reqVerifyEmail: reqVerifyEmail,\n  openorders: openorders,\n  tradeReports: tradeReports,\n  openquotes: openquotes,\n  accountTrades: accountTrades,\n  accountTransactions: accountTransactions,\n  accountHistory: accountHistory,\n  accountDepositHistory: accountDepositHistory,\n  accountWithDrawHistory: accountWithDrawHistory,\n  accountPositions: accountPositions,\n  accountEvents: accountEvents,\n  accountInfo: accountInfo,\n  userAccounts: userAccounts,\n  orderHistory: orderHistory,\n  orderfee: orderfee,\n  sendorder: sendorder,\n  submitBlockTradeEvent: submitBlockTradeEvent,\n  cancel: cancel,\n  cancelReplace: cancelReplace,\n  cancelAll: cancelAll,\n  modify: modify,\n  deposits: deposits,\n  withdrawTemplateTypes: withdrawTemplateTypes,\n  withdrawTemplate: withdrawTemplate,\n  submitWithdraw: submitWithdraw,\n  createWithdrawTicket: createWithdrawTicket,\n  createDeposit: createDeposit,\n  selectedAccount: selectedAccount,\n  rejectedOrders: rejectedOrders,\n  keys: keys,\n  accountBalances: accountBalances,\n  accountOrders: accountOrders,\n  addApiKey: addApiKey,\n  removeApiKey: removeApiKey,\n  myApiKeys: myApiKeys,\n  logoutEvent: logoutEvent,\n  openorderEvents: openorderEvents,\n  transfunds: transfunds,\n  requestfunds: requestfunds,\n  getrequests: getrequests,\n  confirmrequests: confirmrequests,\n  rejectrequests: rejectrequests,\n  verifylevel: verifylevel,\n  verificationLevelUpdate: verificationLevelUpdate,\n  sessionLoaded: sessionLoaded,\n  userReports: userReports,\n  userReportTickets: userReportTickets,\n  depositTemplate: depositTemplate,\n};\n\nmodule.exports = list;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nvar redirect = function (url){\r\n  var myPath = url.split('/'); //split by\r\n  myPath = myPath.pop(); // make url the last element in the array\r\n\r\n  // console.log(\"Local Storage\",localStorage);\r\n\r\n  console.log(\"Path\", myPath);\r\n\r\n  if(localStorage.SessionToken == \"undefined\" && (myPath !=\"\" && myPath !=\"index.html\" && myPath !=\"confirmWithdraw.html\" && myPath !=\"resetPassword.html\"  && myPath !=\"verifyEmail.html\"  && myPath !=\"trade.html\") ){\r\n\r\n    localStorage.setItem('coindirectRedirect', true);\r\n    console.log(\"Location\",myPath);\r\n\r\n    $.bootstrapGrowl('You are not logged in.',{ type: 'danger',allow_dismiss:true, align:AlphaPoint.config.growlwerPosition ,delay:AlphaPoint.config.growlwerDelay,offset: {from: 'top', amount: 30}, left:'70%'});\r\n    $.bootstrapGrowl('You will be redirected',{ type: 'danger',allow_dismiss:true, align:AlphaPoint.config.growlwerPosition ,delay:AlphaPoint.config.growlwerDelay,offset: {from: 'top', amount: 30}, left:'70%'});\r\n    setTimeout(function(){ document.location = \"index.html\" }, 4000)\r\n  }\r\n\r\n  var redirectedStatus = (localStorage.coindirectRedirect) ? JSON.parse(localStorage.coindirectRedirect) : false;\r\n  if(redirectedStatus && myPath ==\"index.html\"){\r\n    $.bootstrapGrowl('You have been redirected',{ type: 'danger',allow_dismiss:true, align:AlphaPoint.config.growlwerPosition ,delay:AlphaPoint.config.growlwerDelay,offset: {from: 'top', amount: 30}, left:'70%'});\r\n    localStorage.setItem('coindirectRedirect', false);\r\n  }\r\n\r\n  var redirectedStatusUsers = (localStorage.userSettingsUpdate) ? JSON.parse(localStorage.userSettingsUpdate) : false;\r\n  if(redirectedStatusUsers && myPath ==\"settings.html\"){\r\n    $.bootstrapGrowl('Account Information Updated',{ type: 'info',allow_dismiss:true, align:AlphaPoint.config.growlwerPosition ,delay:AlphaPoint.config.growlwerDelay,offset: {from: 'top', amount: 30}, left:'70%'});\r\n    localStorage.setItem('userSettingsUpdate', false);\r\n  }\r\n}\r\n\r\nmodule.exports = redirect;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar config = __webpack_require__(1);\r\nvar format = __webpack_require__(28);\r\nvar orderBookCreate= __webpack_require__(59);\r\nvar level1Update = [];\r\nvar updateArrayByPx = __webpack_require__(9).updateArrayByPx;\r\n\r\nfunction init() {\r\n  document.APAPI.SubscribeToEvent('Logout', function(data) {\r\n    AlphaPoint.logoutV2.onNext(data);\r\n    if (data.result) AlphaPoint.logout();\r\n  });\r\n  document.APAPI.SubscribeToEvent('SubscribeLevel1', function(data) {\r\n      // var tickerBook = AlphaPoint.tickerBook.value;\r\n      // if(!tickerBook) tickerBook = []\r\n      // tickerBook.push(data)\r\n      AlphaPoint.tickerBook.onNext(data);\r\n  });\r\n  document.APAPI.SubscribeToEvent('SubscribeLevel2', function(data) {\r\n      AlphaPoint.subscribe2.onNext(data);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('RegisterNewUser', function(data) {\r\n    AlphaPoint.registerUser.onNext(data);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('GetUserInfo', function(data) {\r\n    AlphaPoint.getUser.onNext(data);\r\n  });\r\n  document.APAPI.SubscribeToEvent('GetUserConfig', function(data) {\r\n    AlphaPoint.getUserConfig.onNext(data);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('GetTickerHistory', function(data) {\r\n    AlphaPoint.getTickerHist.onNext(data);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('RequestVerifyEmail', function(data) {\r\n    AlphaPoint.reqVerifyEmail.onNext(data);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('Level1UpdateEvent', function(data) {\r\n\r\n    AlphaPoint.tickerBook.onNext(data);\r\n\r\n    var orderBook = AlphaPoint.orderBook.value;\r\n    level1Update.push(data);\r\n    AlphaPoint.subscribe1.onNext(level1Update);\r\n    if (!orderBook[data.InstrumentId]) orderBook[data.InstrumentId] = {};\r\n    orderBook[data.InstrumentId].ticker = data;\r\n    AlphaPoint.orderBook.onNext(orderBook);\r\n\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('Level2UpdateEvent', function(data) {\r\n    var orderBook = AlphaPoint.orderBook.value;\r\n    var orders = format.orders(data);\r\n\r\n    if (AlphaPoint.config.L2UpdateMethod == 2) {\r\n        return AlphaPoint.lvl2RawUpdate.onNext(data);\r\n    }\r\n\r\n    if (orders.length > 0) {\r\n      if (!orderBook[orders[0].ProductPairCode]) {\r\n        orderBook[orders[0].ProductPairCode] = {};\r\n      }\r\n\r\n      var buys = orders.filter(function(trade) {\r\n        return trade.Side == 0;\r\n      });\r\n\r\n      var sells = orders.filter(function(trade){\r\n        return trade.Side == 1;\r\n      })\r\n    }\r\n\r\n    if (buys.length > 0) {\r\n      if (orderBook[buys[0].ProductPairCode].buys) {\r\n        buys.forEach(function(buy) {\r\n          orderBook[buys[0].ProductPairCode].buys = updateArrayByPx((orderBook[buys[0].ProductPairCode] || {}).buys, buy);\r\n        });\r\n      } else {\r\n        orderBook[buys[0].ProductPairCode].buys = buys;\r\n      }\r\n\r\n      if (orderBook[buys[0].ProductPairCode].buys2) {\r\n        buys.forEach(function(buy) {\r\n          orderBook[buys[0].ProductPairCode].buys = updateArrayByPx((orderBook[buys[0].ProductPairCode] || {}).buys2, buy);\r\n        });\r\n      } else {\r\n      orderBook[buys[0].ProductPairCode].buys2 = buys;\r\n      }\r\n\r\n      orderBook[buys[0].ProductPairCode].buys.sort(function (a, b) {\r\n        if (a.Price < b.Price) return 1;\r\n        if (a.Price > b.Price) return -1;\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    if (sells.length > 0) {\r\n      if (orderBook[sells[0].ProductPairCode].sells) {\r\n        sells.forEach(function(sell) {\r\n          (orderBook[sells[0].ProductPairCode] || {} ).sells = updateArrayByPx((orderBook[sells[0].ProductPairCode] || {}).sells, sell);\r\n        });\r\n      } else {\r\n        orderBook[sells[0].ProductPairCode].sells = sells;\r\n      }\r\n\r\n      if (orderBook[sells[0].ProductPairCode].sells2) {\r\n        sells.forEach(function(sell) {\r\n          (orderBook[sells[0].ProductPairCode] || {}).sells = updateArrayByPx((orderBook[sells[0].ProductPairCode] || {}).sells, sell);\r\n        });\r\n      } else {\r\n        orderBook[sells[0].ProductPairCode].sells2 = sells;\r\n      }\r\n\r\n      orderBook[sells[0].ProductPairCode].sells.sort(function(a, b) {\r\n        if (a.Price > b.Price) return 1;\r\n        if (a.Price < b.Price) return -1;\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    AlphaPoint.orderBook.onNext(orderBook);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('OrderTradeEvent', function(data) {\r\n    var newTrades = AlphaPoint.accountTrades.value;\r\n\r\n    newTrades.push(data)\r\n    AlphaPoint.accountTrades.onNext(newTrades);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('OrderStateEvent', function(data) {\r\n    AlphaPoint.accountBalances.onNext(data);\r\n\r\n    if (data.OrderState === 'Canceled') {\r\n      var newOrders = AlphaPoint.openorders.value.filter(function(order) {\r\n        return order.OrderId !== data.OrderId;\r\n      });\r\n\r\n      if (data.OrderType === 'BlockTrade') {\r\n        return AlphaPoint.tradeReports.onNext(\r\n          AlphaPoint.tradeReports.value.filter(function(order) {\r\n            return order.OrderId !== data.OrderId;\r\n          })\r\n        );\r\n      }\r\n\r\n      AlphaPoint.openorders.onNext(newOrders);\r\n    }\r\n\r\n    if (data.OrderState === 'Working') {\r\n      var newOrders = AlphaPoint.openorders.value.filter(function(order) {\r\n        return order.OrderId !== data.OrderId;\r\n      });\r\n\r\n      if (data.OrderType === 'BlockTrade') {\r\n        return AlphaPoint.tradeReports.onNext(AlphaPoint.tradeReports.value.concat(data));\r\n      }\r\n\r\n      newOrders.push(data);\r\n      AlphaPoint.openorders.onNext(newOrders);\r\n    }\r\n\r\n    if (data.OrderState === 'FullyExecuted') {\r\n      var newOrders = AlphaPoint.openorders.value.filter(function(order) {\r\n          return order.OrderId !== data.OrderId;\r\n      });\r\n\r\n      AlphaPoint.openorders.onNext(newOrders);\r\n    }\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('AccountPositionEvent', function(data) {\r\n    var oldPositions = AlphaPoint.accountPositions.value;\r\n\r\n    for (var j = 0; j < oldPositions.length; j++) {\r\n      if (oldPositions[j].ProductId == data.ProductId) oldPositions[j] = data;\r\n    }\r\n    AlphaPoint.accountPositions.onNext(oldPositions);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('NewOrderRejectEvent', function(data) {\r\n    AlphaPoint.rejectedOrders.onNext(data);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('MarketStateUpdate', function(data) {\r\n    var instrument = AlphaPoint.instruments.value.find(function(instrument) {\r\n      return instrument.InstrumentId === data.VenueInstrumentId;\r\n    });\r\n\r\n    $.bootstrapGrowl(\r\n      'Market for ' + instrument.Symbol + ' is ' + data.NewStatus,\r\n      Object.assign({}, AlphaPoint.config.growlerDefaultOptions, { type: 'info' })\r\n    );\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('TradeDataUpdateEvent', function(data) {\r\n    var trades = format.trades(data) || [];\r\n    var orderBook = AlphaPoint.orderBook.value;\r\n\r\n    if (trades.length) {\r\n      if (!orderBook[trades[0].ProductPairCode]) orderBook[trades[0].ProductPairCode] = {};\r\n      trades.forEach(function(trade) {\r\n        if (orderBook[trades[0].ProductPairCode].trades) {\r\n          return orderBook[trades[0].ProductPairCode].trades.push(trade);\r\n        }\r\n        return orderBook[trades[0].ProductPairCode].trades = [].concat(trade);\r\n      });\r\n    }\r\n    AlphaPoint.orderBook.onNext(orderBook);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('LogoutEvent', function(data) {\r\n    AlphaPoint.logout();\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('VerificationLevelUpdateEvent', function(data) {\r\n    if (data.VerificationStatus === 'Approved') {\r\n      $.bootstrapGrowl(\r\n        'Your verification has been ' + data.VerificationStatus,\r\n        Object.assign({}, AlphaPoint.config.growlerDefaultOptions, { type: 'success' })\r\n      );\r\n      $.bootstrapGrowl(\r\n        'You are now level ' + data.VerificationLevel + ' verified',\r\n        Object.assign({}, AlphaPoint.config.growlerDefaultOptions, { type: 'success' })\r\n      );\r\n    }\r\n    if (data.VerificationStatus != \"Approved\") {\r\n      $.bootstrapGrowl(data.VerificationStatus, Object.assign({}, AlphaPoint.config.growlerDefaultOptions, { type: 'success' }));\r\n    }\r\n    AlphaPoint.verificationLevelUpdate.onNext(data);\r\n  });\r\n}\r\n\r\nmodule.exports = init;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar AP_API = __webpack_require__(14);\nvar APObjects = __webpack_require__(13);\nvar initSubscriptions = __webpack_require__(9);\nvar library = __webpack_require__(56);\n\nwindow.AP_API = AP_API;\nwindow.AlphaPoint = library;\nwindow.setElementHtml = __webpack_require__(5).setElementHtml;\n\ndocument.APAPI = new AP_API();\ndocument.wsConnection = document.APAPI.Connect(localStorage.getItem('lastUsedServer') || APConfig.API_V2_URL);\n\ndocument.AlphaPoint = {};\ndocument.AlphaPoint.OrderHelpers = {};\nAPObjects.initOrderHelpers();\n\ndocument.APAPI.addOnOpenCallback(function() {\n  var apiRef = document.APAPI;\n\n  initSubscriptions();\n  apiRef.Session = new APObjects.SessionClass(apiRef);\n  apiRef.Session.Init(function () {\n    apiRef.IsConnectedEvent.notify(true);\n  }); // lets init the session, and raise the connected event\n\n  library.socketOpen.onNext(true);\n\n  if (localStorage.SessionToken && localStorage.SessionToken !== 'undefined') {\n    var token = { SessionToken: localStorage.SessionToken };\n\n    AlphaPoint.WebAuthenticate(token);\n  }\n});\n\ndocument.APAPI.addOnCloseCallback(function() {\n  var apiRef = document.APAPI;\n\n  apiRef.IsConnectedEvent.notify(false);\n  library.socketOpen.onNext(false);\n});\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (true) {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Event = __webpack_require__(5).Event;\r\n\r\n// AlphaPoint Javascript API Client\r\n// Native JS, no jquery\r\n\r\n// Contains all the alphapoint objects for a session\r\n// Uses the Event pattern in helper.js\r\n\r\n// User Info\r\n// Account Info\r\n// Balances\r\n// My Open Orders\r\n// My Recent Trades\r\n// My Account Actions\r\n// My Positions\r\n\r\n// CLASS API (AlphaPoint API)\r\n\r\n//document.API.Session\r\n//document.API.Session.Products[0].Info,Name/Increment/ETC\r\n//document.API.Session.Instruments[0].OpenOrders\r\n//document.API.Session.Instruments[0].OrderEvent\r\n//document.API.Session.Instruments[0].RecentTrades\r\n//document.API.Session.Instruments[0].NewTradesEvent\r\n//document.API.Session.Instruments[0].Info\r\n// can loop through document.API.Instruments\r\n\r\n//document.API.Session.Accounts[0].Balances\r\n//document.API.Session.Accounts[0].OpenOrders\r\n//document.API.Session.Accounts[0].RecentAccountTransactions\r\n//document.API.Session.Accounts[0].AccountTransactionsEvent\r\n//document.API.Session.Accounts[0].Info\r\n\r\n// This does the logic and state holding for the connection (application level)\r\n// public class Session()\r\nfunction SessionClass(api) {\r\n  var par = this;\r\n  var apiRef = api;\r\n  var userMenu = document.getElementById('userMenu');\r\n  var accountIndicator = document.getElementById('currentSelectedAccount');\r\n\r\n  this.SelectedInstrumentId = null; // this is used on the dashboard for what instrument all the UI widgets are on\r\n  // public Dictionary[InstrumentId] = Instrument;\r\n  this.Instruments = {};\r\n  // public Dictionary[ProductId] = prod;\r\n  this.OMSId = 1;\r\n  this.Products = {};\r\n  this.selectedAccount = null; // this is used on the dashboard for what account all the UI widgets will use\r\n  this.userAccounts = [];\r\n\r\n\r\n  this.Init = function (completedCallback) {\r\n    var completedSegments = 0;\r\n\r\n    apiRef.RPCCall('GetOMSs', { OperatorId: APConfig.OperatorId }, function(data) {\r\n      par.OmsId = data[0].OMSId || data[0].Id;\r\n      AlphaPoint.oms.onNext(data[0].OMSId || data[0].Id);\r\n\r\n      // lets fetch the products\r\n      apiRef.RPCCall('GetProducts', { OMSId: par.OmsId }, function (rv) {\r\n        AlphaPoint.products.onNext(rv);\r\n        // lets populate the products list;\r\n        rv.forEach(function(product) {\r\n          par.Products[product.ProductId] = product;\r\n        });\r\n        sectionDoneInternal();\r\n      });\r\n\r\n      apiRef.RPCCall('GetInstruments', { OMSId: par.OmsId }, function (rv) {\r\n        rv.forEach(function(ins) {\r\n          var orderBook = AlphaPoint.orderBook.value;\r\n          var tickerBook = AlphaPoint.tickerBook.value;\r\n\r\n          if (!orderBook[ins.InstrumentId]) orderBook[ins.InstrumentId] = {};\r\n          orderBook[ins.InstrumentId].Symbol = ins.Symbol;\r\n          orderBook[ins.InstrumentId].InstrumentId = ins.InstrumentId;\r\n          AlphaPoint.orderBook.onNext(orderBook);\r\n\r\n          if (!tickerBook) tickerBook= [];\r\n          AlphaPoint.tickerBook.onNext(tickerBook);\r\n\r\n          // lets populate the products list;\r\n          var newIns = new InstrumentClass(apiRef);\r\n          newIns.Info = ins;\r\n          par.Instruments[ins.InstrumentId] = newIns;\r\n        });\r\n\r\n        sectionDoneInternal();\r\n        AlphaPoint.instruments.onNext(rv);\r\n      });\r\n\r\n      // document.APAPI.RPCCall('GetUserAccounts', { AccountId: 1, OMSId: par.OmsId }, processUserAccounts);\r\n    });\r\n\r\n    function sectionDoneInternal() {\r\n      completedSegments++;\r\n      if (completedSegments === 2) completedCallback();\r\n    }\r\n  };\r\n\r\n  this.UserObj = null;\r\n  this.Accounts = [];\r\n\r\n  this.IsAuthenticated = false;\r\n  this.IsAuthenticatedEvent = new Event(this);\r\n\r\n  apiRef.SubscribeToEvent('AuthenticateUser', function (rv) {\r\n    if (par.IsAuthenticated == true) return;\r\n    if (rv.Authenticated == true) {\r\n      par.IsAuthenticated = true;\r\n      par.UserObj = rv.User;\r\n\r\n      apiRef.RPCCall('GetUserAccounts', { \"OMSId\": par.OmsId }, processUserAccounts);\r\n    } else {\r\n      if (errorCallback) errorCallback(rv);\r\n    }\r\n  });\r\n\r\n  apiRef.SubscribeToEvent('WebAuthenticateUser', function (rv) {\r\n    if (par.IsAuthenticated === true) return;\r\n    if (rv.Authenticated === true) {\r\n      if (rv.Requires2FA === true) return;\r\n      par.IsAuthenticated = true;\r\n      AlphaPoint.session.onNext(rv);\r\n      if (!par.OmsId) { // If no public API\r\n        par.Init(function () {\r\n          apiRef.IsConnectedEvent.notify(true);\r\n        });\r\n      }\r\n      apiRef.RPCCall('GetUserInfo', { \"UserId\": rv.UserId }, function (usrRV) {\r\n        par.UserObj = usrRV;\r\n        apiRef.RPCCall('GetUserAccounts', { \"OMSId\": par.OmsId }, processUserAccounts);\r\n      });\r\n    } else {\r\n      window.localStorage.setItem('SessionToken', 'undefined');\r\n    }\r\n  }.bind(this));\r\n\r\n\r\n  this.changeCurrentAccount = function(accountId) {\r\n    var currentAccount = par.Accounts.find(function(account) {\r\n      return account.AccountId === +accountId;\r\n    });\r\n\r\n    AlphaPoint.selectedAccount.onNext(+accountId);\r\n    par.selectedAccount = +accountId;\r\n    $('#userMenu li:not(#logoutLinkContainer)').remove();\r\n    accountIndicator.innerHTML = currentAccount.AccountInfo.AccountName || accountId;\r\n\r\n    par.userAccounts.filter(function(account) {\r\n      return account != par.selectedAccount;\r\n    }).forEach(function(accountId) {\r\n      var otherAccount = par.Accounts.find(function(account) {\r\n        return account.AccountId === accountId;\r\n      });\r\n      var listEl = document.createElement('li');\r\n\r\n      listEl.innerHTML = '<a data-id=\"' + accountId + '\">Account ' + (otherAccount.AccountInfo.AccountName || accountId);\r\n      if (document.getElementById('logoutLinkContainer')) {\r\n        userMenu.insertBefore(listEl, document.getElementById('logoutLinkContainer'));\r\n      } else {\r\n        userMenu.appendChild(listEl);\r\n      }\r\n    });\r\n  }\r\n\r\n  function processUserAccounts(data) {\r\n    // This is a list of account numbers\r\n    var accountsLength = data.length;\r\n    var selectedAccount = document.APAPI.Session.selectedAccount || data[0];\r\n\r\n    function completedLoadingAcc() {\r\n      accountsLength--;\r\n      if (accountsLength === 0) {\r\n        par.IsAuthenticatedEvent.notify(par.UserObj);\r\n        if (AlphaPoint.config.apexSite) {\r\n          par.changeCurrentAccount(data[0]);\r\n        }\r\n      }\r\n    }\r\n\r\n    data.forEach(function(accountId) {\r\n      var newAcc = new AccountClass(apiRef, accountId);\r\n\r\n      AlphaPoint.getAccountTransactions(accountId);\r\n      AlphaPoint.getRequestTransfers(accountId);\r\n      par.Accounts.push(newAcc);\r\n      newAcc.Init(function () { // account initiated\r\n        completedLoadingAcc();\r\n      });\r\n    });\r\n\r\n    AlphaPoint.getAccountInfo({ AccountId: selectedAccount, OMSId: par.OmsId });\r\n    AlphaPoint.getAPIKey({ UserId: AlphaPoint.userData.value.UserId });\r\n    AlphaPoint.getUserCon({ UserId: AlphaPoint.userData.value.UserId });\r\n\r\n    if (accountsLength) {\r\n      par.userAccounts = data;\r\n      AlphaPoint.userAccounts.onNext(data);\r\n      document.querySelector('.user-menu-container').classList.add('multiple-accounts');\r\n      AlphaPoint.selectedAccount.onNext(data[0]);\r\n    }\r\n\r\n    if (AlphaPoint.userAccounts.value) AlphaPoint.synched.onNext(true);\r\n  }\r\n  // Account list, populated with accounts for the authed user\r\n  // get the accounts by using GetUserAccounts\r\n}\r\n\r\nfunction AccountClass(apiRef, accountId) {\r\n  // all account stuff for one account\r\n  // we automatically subscribe to accounts\r\n  var par = this;\r\n\r\n  this.IsSubscribed = false;\r\n\r\n  this.Init = function (completedCallback) {\r\n    // lets subscribe tot he account stuff.\r\n    // open orders\r\n    // balances\r\n    // etc\r\n\r\n    //GetOpenOrders\r\n    //GetAccountPositions\r\n\r\n    //GetOrderHistory\r\n    //GetAccountTransactions\r\n    //GetAccountTrades\r\n\r\n    //SubscribeAccountEvents\r\n\r\n    //SendOrder\r\n    //ModifyOrder\r\n    //CancelReplaceOrder\r\n    //CancelOrder\r\n    //CancelAllOrders\r\n\r\n    var taskCount = 0;\r\n\r\n    function taskCompleted() {\r\n      taskCount++;\r\n      if (taskCount === 8) {\r\n        if (completedCallback) completedCallback();\r\n      }\r\n    }\r\n\r\n    apiRef.RPCCall('GetAccountInfo', { 'OMSId': document.APAPI.Session.OmsId, 'AccountId': accountId }, function(rv) {\r\n      par.AccountInfo = rv;\r\n      taskCompleted();\r\n    });\r\n\r\n    apiRef.RPCCall('GetOpenOrders', { \"OMSId\": document.APAPI.Session.OmsId, \"AccountId\": accountId }, function (rv) {\r\n      var orders = rv.filter(function(order) { return !order.IsQuote; });\r\n      // This is a list of open order\r\n      rv.forEach(function(order) {\r\n        par.OpenOrders[order.OrderId] = order;\r\n      });\r\n      AlphaPoint.openorders.onNext(AlphaPoint.openorders.value.concat(orders));\r\n\r\n      // console.log(\"GetOpenOrders complete\");\r\n      taskCompleted();\r\n    });\r\n\r\n    apiRef.RPCCall('GetOpenTradeReports', { \"OMSID\": document.APAPI.Session.OmsId, \"AccountId\": accountId }, function (rv) {\r\n      // This is a list of open trade reports\r\n      rv.forEach(function(order) {\r\n        par.OpenTradeReports[order.OrderId] = order;\r\n      });\r\n      AlphaPoint.tradeReports.onNext(AlphaPoint.tradeReports.value.concat(rv));\r\n      taskCompleted();\r\n    });\r\n\r\n    apiRef.RPCCall('GetOpenQuotes', {\r\n      \"OMSId\": document.APAPI.Session.OmsId,\r\n      \"AccountId\": accountId,\r\n      \"InstrumentId\": document.APAPI.Session.SelectedInstrumentId\r\n    }, function (rv) {\r\n      var orders = Object.keys(rv).map(function(side) { return rv[side]; }).filter(function(order) { return order !== null; });\r\n\r\n      // This is an object with latest open bid quote and open ask quote\r\n      par.OpenQuotes = rv;\r\n      AlphaPoint.openquotes.onNext([].concat(orders));\r\n      AlphaPoint.openorders.onNext(AlphaPoint.openorders.value.concat(orders));\r\n      AlphaPoint.config.debug && console.log(\"GetOpenQuotes complete\");\r\n      taskCompleted();\r\n    });\r\n\r\n    apiRef.RPCCall('GetAccountPositions', { \"OMSId\": document.APAPI.Session.OmsId, \"AccountId\": accountId }, function (rv) {\r\n      rv.forEach(function(balance) {\r\n        par.AccountPositions[balance.ProductId] = balance;\r\n      });\r\n      AlphaPoint.accountPositions.onNext(AlphaPoint.accountPositions.value.concat(rv));\r\n\r\n      AlphaPoint.config.debug && console.log(\"GetAccountPositions complete\");\r\n      taskCompleted();\r\n    });\r\n\r\n    apiRef.RPCCall('GetOrderHistory', { \"OMSId\": document.APAPI.Session.OmsId, \"AccountId\": accountId }, function (rv) {\r\n      rv.forEach(function(order) {\r\n        if (order.OrderState !== 'Working') {\r\n          par.InactiveOrders.push(order);\r\n          if (par.InactiveOrders.length > par.InactiveOrdersCacheLength) par.InactiveOrders.pop();\r\n        }\r\n      });\r\n      AlphaPoint.orderHistory.onNext(AlphaPoint.orderHistory.value.concat(rv));\r\n\r\n      AlphaPoint.config.debug && console.log(\"GetOrderHistory complete\");\r\n      taskCompleted();\r\n    });\r\n\r\n    apiRef.RPCCall('GetAccountTrades', { \"OMSId\": document.APAPI.Session.OmsId, \"AccountId\": accountId }, function (rv) {\r\n      rv.forEach(function(trade) {\r\n        par.Trades.push(trade);\r\n      });\r\n      AlphaPoint.accountTrades.onNext(AlphaPoint.accountTrades.value.concat(rv));\r\n\r\n      AlphaPoint.config.debug && console.log(\"GetAccountTrades complete\");\r\n      taskCompleted();\r\n    });\r\n\r\n    apiRef.RPCCall('SubscribeAccountEvents', { \"OMSId\": document.APAPI.Session.OmsId, \"AccountId\": accountId }, function (rv) {\r\n      if (rv.Subscribed === true) par.IsSubscribed = true;\r\n      AlphaPoint.accountEvents.onNext(rv); // Not sure if we need this\r\n\r\n      AlphaPoint.config.debug && console.log(\"SubscribeAccountEvents complete\");\r\n      taskCompleted();\r\n    });\r\n  };\r\n\r\n  this.AccountId = accountId;\r\n  // Region: Trades\r\n  this.Trades = [];\r\n  this.NewTradesUpdateEvent = new Event(this);\r\n  apiRef.SubscribeToEvent('OrderTradeEvent', orderTradeEvent_HandlerFcn);\r\n\r\n  function orderTradeEvent_HandlerFcn(obj) {\r\n    par.Trades.push(obj);\r\n    par.NewTradesUpdateEvent.notify(obj);\r\n  }\r\n  // End Region: Trades\r\n\r\n  // Region: Open orders and Inactive Orders\r\n  apiRef.SubscribeToEvent('OrderStateEvent', orderStateEvent_HandlerFcn);\r\n\r\n  function orderStateEvent_HandlerFcn(order) {\r\n    // check if cur dictionary contains it\r\n    var containsKey = par.OpenOrders[order.OrderId] !== undefined;\r\n\r\n    if (order.OrderState !== 'Working') {\r\n      par.InactiveOrders.push(order);\r\n      if (par.InactiveOrders.length > par.InactiveOrdersCacheLength) par.InactiveOrders.pop();\r\n      par.InactiveOrdersUpdateEvent.notify(order);\r\n      if (!containsKey) return; // we don't have it and it's not working, it's not an open order and we don't want it\r\n    }\r\n\r\n    var eventArgs = new OpenOrdersUpdateEvent_EventArgs();\r\n\r\n    eventArgs.NewOrderState = order;\r\n    if (containsKey) {\r\n      eventArgs.OldOrderState = par.OpenOrders[order.OrderId];\r\n    } else {\r\n      eventArgs.OldOrderState = null;\r\n    }\r\n\r\n    if (order.OrderState !== 'Working') {\r\n      delete par.OpenOrders[order.OrderId];\r\n    } else {\r\n      par.OpenOrders[order.OrderId] = order;\r\n    }\r\n\r\n    par.OpenOrdersUpdateEvent.notify(eventArgs);\r\n  }\r\n\r\n  // public Dictionary[OrderId] = OrderObj\r\n  this.OpenOrders = {};\r\n  this.OpenTradeReports = {};\r\n  this.OpenOrdersUpdateEvent = new Event(this); // sends a OpenOrdersUpdateEvent_EventArgs object with old and new state\r\n  this.InactiveOrdersCacheLength = 100;\r\n  this.InactiveOrders = [];\r\n  this.InactiveOrdersUpdateEvent = new Event(this); // sends a new inactive order added to the list\r\n  // End Region: Open orders and Inactive Orders\r\n\r\n  // Region: AccountPosition\r\n  apiRef.SubscribeToEvent('AccountPositionEvent', accountPositionEvent_HandlerFcn);\r\n    function accountPositionEvent_HandlerFcn(obj) {\r\n      var eventArgs = new AccountPositionsUpdateEvent_EventArgs();\r\n      eventArgs.NewAccountPosition = obj;\r\n      var containsKey = par.AccountPositions[obj.ProductId] !== undefined;\r\n\r\n      if (containsKey) eventArgs.OldAccountPosition = par.AccountPositions[obj.ProductId];\r\n      else eventArgs.OldAccountPosition = null;\r\n\r\n      par.AccountPositions[obj.ProductId] = obj;\r\n      par.AccountPositionsUpdateEvent.notify(eventArgs);\r\n    }\r\n\r\n    // public Dictionary[ProductId] = AccPositionObj\r\n    this.AccountPositions = {};\r\n    this.AccountPositionsUpdateEvent = new Event(this);\r\n    // End Region: AccountPosition\r\n\r\n    this.SendOrder = function (orderSendData) {\r\n      console.log(orderSendData)\r\n      apiRef.RPCCall('SendOrder', orderSendData, function (rv) {\r\n        console.log(rv);\r\n      });\r\n    };\r\n\r\n    this.CancelOrder = function (orderId) {\r\n      apiRef.RPCCall('CancelOrder', { OmsId: document.APAPI.Session.OmsId, OrderId: orderId }, function (rv) {\r\n    });\r\n  };\r\n\r\n  //{\r\n  // \"AccountId\": 4, //Your Account Id [Integer]\r\n  // \"OMSId\": 1,  //OMS Id [Integer] Always 1\r\n  // \"InstrumentId\": 1 //Instrument Id [Integer]\r\n  //}\r\n\r\n  this.CancelAllOrders = function (instrumentId) {\r\n    apiRef.RPCCall('CancelAllOrders', { OmsId: document.APAPI.Session.OmsId, InstrumentId: instrumentId, AccountId: par.AccountId }, function (rv) {});\r\n  };\r\n}\r\n\r\n//{\r\n//    \"AccountId\": 5, //Your Account Id [Integer]\r\n//    \"ClientOrderId\": 99, //Set this to your own id if you wish to use one. It will be useful for recognizing future order states related to this call. [64 bit Integer]\r\n//    \"Quantity\": 1, //Quantity of the Order [Decimal]\r\n//    \"DisplayQuantity\": 0, //Quantity to Display on the Market. If your order is for 1000, and you only want to show 100 at a time in market data, set this to 100. Set to 0 to display all. [Decimal]\r\n//    \"LimitPrice\": 95, //The limit price for this order. [Decimal]\r\n//    \"OrderIdOCO\": 0, //If you would like to have this order cancel another on execution, set this field to the other order's server order id. Omit or set to 0 if no OCO is required. [64 Bit Integer]\r\n//    \"OrderType\": \"Limit\", //The type of order. [String] Values are \"Market\", \"Limit\", \"StopMarket\", \"StopLimit\", \"TrailingStopMarket\", \"TrailingStopLimit\"\r\n//    \"PegPriceType\": \"Last\", //When entering a Stop/Trailing order, set this to the type of price you would like to peg the Stop to. [String] Values are \"Last\", \"Bid\", \"Ask\", \"Midpoint\"\r\n//    \"InstrumentId\": 1, //The Instrument Id [Integer]\r\n//    \"RefPrice\": 0, //When entering a Trailing order, set this to the current price of the market. This ensures the trailing offset is the amount intended in a fast moving market. [Decimal]\r\n//    \"Side\": \"Buy\", //\"Buy\" or \"Sell\"\r\n//    \"StopPrice\": \"96\", //The Stop Price for this order, if it is a stop order. Otherwise you may omit this field. [Decimal]\r\n//    \"TimeInForce\": \"1\", //\"GTC\" (Good Till' Canceled), \"IOC\" (Immediate or Cancel), \"FOK\" (Fill or Kill)\r\n//    \"OMSId\": \"1\" // OMS Id [Integer] Always 1.\r\n//}\r\n\r\n// https://yap.cx/APIDOC.html#SendOrder\r\nfunction OrderSendDataClass() {\r\n  this.AccountId = 0;\r\n  this.ClientOrderId = 0;\r\n  this.Quantity = 0;\r\n  this.DisplayQuantity = 0;\r\n  this.LimitPrice = 0;\r\n  this.OrderIdOCO = 0;\r\n  this.OrderType = document.AlphaPoint.OrderHelpers.OrderType.Unknown;\r\n  this.PegPriceType = document.AlphaPoint.OrderHelpers.PegPriceType.Unknown;\r\n  this.InstrumentId = 0;\r\n  this.RefPrice = 0;\r\n  this.Side = document.AlphaPoint.OrderHelpers.Side.Unknown;\r\n  this.StopPrice = 0;\r\n  this.TimeInForce = document.AlphaPoint.OrderHelpers.TimeInForce.GTC;\r\n  this.OMSId = document.APAPI.Session.OmsId;\r\n  this.Distance = 0;\r\n  // this.SubAccount = \"Exchange\";\r\n}\r\n\r\nfunction initOrderHelpers() {\r\n  /// Market Order - 1\r\n  document.AlphaPoint.OrderHelpers.CreateMarketOrderSendData = function (insId, accId, side, qty) {\r\n    var osd = new OrderSendDataClass();\r\n\r\n    osd.AccountId = accId;\r\n    osd.ClientOrderId = 0;\r\n    osd.DisplayQuantity = 0; // display all\r\n    osd.Quantity = qty;\r\n    osd.OrderType = document.AlphaPoint.OrderHelpers.OrderType.Market;\r\n    osd.InstrumentId = insId;\r\n    osd.Side = side;\r\n    osd.OMSId = document.APAPI.Session.OmsId;\r\n    osd.TimeInForce = \"GTC\";//document.AlphaPoint.OrderHelpers.TimeInForce.GTC;\r\n    return osd;\r\n  }\r\n\r\n  /// Limit Order - 2\r\n  document.AlphaPoint.OrderHelpers.CreateLimitOrderSendData = function (insId, accId, side, qty, px) {\r\n    var osd = new OrderSendDataClass();\r\n\r\n    osd.AccountId = accId;\r\n    osd.ClientOrderId = 0;\r\n    osd.DisplayQuantity = 0; // display all\r\n    osd.Quantity = qty;\r\n    osd.LimitPrice = px;\r\n    osd.OrderType = document.AlphaPoint.OrderHelpers.OrderType.Limit;\r\n    osd.InstrumentId = insId;\r\n    osd.Side = side;\r\n    osd.OMSId = document.APAPI.Session.OmsId;\r\n    osd.TimeInForce = document.AlphaPoint.OrderHelpers.TimeInForce.GTC;\r\n    return osd;\r\n  }\r\n\r\n  /// Stop Market - 3\r\n  document.AlphaPoint.OrderHelpers.CreateStopMarketOrderSendData = function (insId, accId, side, qty, stopPx, pegType) {\r\n    var osd = new OrderSendDataClass();\r\n\r\n    osd.AccountId = accId;\r\n    osd.ClientOrderId = 0;\r\n    osd.DisplayQuantity = 0; // display all\r\n    osd.Quantity = qty;\r\n    osd.OrderType = document.AlphaPoint.OrderHelpers.OrderType.Market;\r\n    osd.InstrumentId = insId;\r\n    osd.Side = side;\r\n    osd.OMSId = document.APAPI.Session.OmsId;\r\n    osd.TimeInForce = \"GTC\";//document.AlphaPoint.OrderHelpers.TimeInForce.GTC;\r\n    osd.StopPrice = stopPx;\r\n    osd.PegPriceType = pegType;\r\n    return osd;\r\n  }\r\n\r\n  /// Stop Limit - 4\r\n  document.AlphaPoint.OrderHelpers.CreateStopLimitOrderSendData = function (insId, accId, side, qty, px, stopPx, pegType) {\r\n    var osd = new OrderSendDataClass();\r\n\r\n    osd.AccountId = accId;\r\n    osd.ClientOrderId = 0;\r\n    osd.DisplayQuantity = 0; // display all\r\n    osd.Quantity = qty;\r\n    osd.LimitPrice = px;\r\n    osd.OrderType = document.AlphaPoint.OrderHelpers.OrderType.Limit;\r\n    osd.InstrumentId = insId;\r\n    osd.Side = side;\r\n    osd.OMSId = document.APAPI.Session.OmsId;\r\n    osd.TimeInForce = document.AlphaPoint.OrderHelpers.TimeInForce.GTC;\r\n    osd.StopPrice = stopPx;\r\n    osd.PegPriceType = pegType;\r\n    return osd;\r\n  }\r\n\r\n  /// Trailing Stop Market - 5\r\n  document.AlphaPoint.OrderHelpers.CreateTrailingStopMarketOrderSendData = function (insId, accId, side, qty, dist, refPx, pegType) {\r\n    var osd = new OrderSendDataClass();\r\n\r\n    osd.AccountId = accId;\r\n    osd.ClientOrderId = 0;\r\n    osd.DisplayQuantity = 0; // display all\r\n    osd.Quantity = qty;\r\n    osd.OrderType = document.AlphaPoint.OrderHelpers.OrderType.Market;\r\n    osd.InstrumentId = insId;\r\n    osd.Side = side;\r\n    osd.OMSId = document.APAPI.Session.OmsId;\r\n    osd.TimeInForce = \"GTC\";//document.AlphaPoint.OrderHelpers.TimeInForce.GTC;\r\n    osd.Distance = dist;\r\n    osd.RefPrice = refPx;\r\n    osd.PegPriceType = pegType;\r\n    return osd;\r\n  }\r\n\r\n  /// Trailing Stop Limit - 6\r\n  document.AlphaPoint.OrderHelpers.CreateTrailingStopLimitOrderSendData = function (insId, accId, side, qty, px, dist, refPx, pegType) {\r\n    var osd = new OrderSendDataClass();\r\n\r\n    osd.AccountId = accId;\r\n    osd.ClientOrderId = 0;\r\n    osd.DisplayQuantity = 0; // display all\r\n    osd.Quantity = qty;\r\n    osd.LimitPrice = px;\r\n    osd.OrderType = document.AlphaPoint.OrderHelpers.OrderType.Limit;\r\n    osd.InstrumentId = insId;\r\n    osd.Side = side;\r\n    osd.OMSId = document.APAPI.Session.OmsId;\r\n    osd.TimeInForce = document.AlphaPoint.OrderHelpers.TimeInForce.GTC;\r\n    return osd;\r\n  }\r\n\r\n  document.AlphaPoint.OrderHelpers.OrderType = {\r\n    Unknown: 0,\r\n    Market: 1,\r\n    Limit: 2,\r\n    StopMarket: 3,\r\n    StopLimit: 4,\r\n    TrailingStopMarket: 5,\r\n    TrailingStopLimit: 6\r\n  }\r\n\r\n  document.AlphaPoint.OrderHelpers.Side = {\r\n    Unknown: 3,\r\n    Buy: 0,\r\n    Sell: 1,\r\n    Short: 2\r\n  }\r\n\r\n  document.AlphaPoint.OrderHelpers.TimeInForce = {\r\n    Unknown: 0,\r\n    GTC: 1,\r\n    IOC: 2,\r\n    FOK: 3\r\n  }\r\n\r\n  document.AlphaPoint.OrderHelpers.PegPriceType = {\r\n    Unknown: 0,\r\n    Last: 1,\r\n    Bid: 2,\r\n    Ask: 3\r\n  }\r\n}\r\n\r\n// public class OpenOrdersUpdateEvent_EventArgs(). OldOrderState will be null if there is none\r\nfunction OpenOrdersUpdateEvent_EventArgs() {\r\n  this.OldOrderState = null;\r\n  this.NewOrderState = null;\r\n}\r\n\r\n// public class AccountPositionsUpdateEvent_EventArgs(), OldAccountPosition will be null if there is none\r\nfunction AccountPositionsUpdateEvent_EventArgs() {\r\n  this.OldAccountPosition = null;\r\n  this.NewAccountPosition = null;\r\n}\r\n\r\n// public class Instrument()\r\nfunction InstrumentClass(api) {\r\n  var apiRef = api;\r\n  var par = this;\r\n\r\n  apiRef.SubscribeToEvent('Level2UpdateEvent', Level2UpdateEvent_HandlerFcn);\r\n  apiRef.SubscribeToEvent('Level1UpdateEvent', Level1UpdateEvent_HandlerFcn);\r\n  apiRef.SubscribeToEvent('TradeDataUpdateEvent', TradesUpdateEvent_HandlerFcn);\r\n\r\n  // Info\r\n  this.Info = null;\r\n  // LEVEL 2, Subscription, Event, and Data Objects\r\n\r\n  function getBestSellPrice() {\r\n    var minAskPrice = Number.MAX_VALUE;\r\n\r\n    if (!Object.keys(par.L2Sells).length) {\r\n      var minAskPrice = 0;\r\n    } else {\r\n      for (var key in par.L2Sells) {\r\n        if (par.L2Sells[key].Price < minAskPrice) {\r\n          minAskPrice = par.L2Sells[key].Price;\r\n        }\r\n      }\r\n    }\r\n\r\n    return minAskPrice;\r\n  }\r\n\r\n  function getBestBuyPrice() {\r\n    var maxBidPrice = 0;\r\n    for (var key in par.L2Buys) {\r\n      if (par.L2Buys[key].Price > maxBidPrice) {\r\n        maxBidPrice = par.L2Buys[key].Price;\r\n      }\r\n    }\r\n    return maxBidPrice;\r\n  }\r\n\r\n  this.IsLevel2Subscribed = false;\r\n  this.L2CacheLength = 300;\r\n  this.L2Buys = {}; // L2Buys[Price] = new L2Item();\r\n  this.L2Sells = {}; // L2Sells[Price] = new L2Item();\r\n  this.L2BestBuyPrice = null;\r\n  this.L2BestSellPrice = null;\r\n  this.SubscribeLevel2 = function(bSubscribe, completeCallback) {\r\n    if (bSubscribe) {\r\n      if (par.IsLevel2Subscribed) return; //Already subscribed\r\n      par.IsLevel2Subscribed = true;\r\n\r\n      var req = {\r\n        \"OMSId\": 1,  //OMS Identifier [Integer] Always 1\r\n        \"InstrumentId\": par.Info.InstrumentId,  //Instrument's Identifer [Integer]\r\n        \"Depth\": par.L2CacheLength //The Depth of the book to subscribe to updates for. In this example, you would receive 10 price levels on each side of the market. [Integer]\r\n      };\r\n      // lets subscribe\r\n      apiRef.RPCCall('SubscribeLevel2', req, function (rv) {\r\n        Level2UpdateEvent_HandlerFcn(rv);// first update, maybe just populate the book\r\n        if (completeCallback) completeCallback();\r\n      });\r\n    } else { // unsibscribe\r\n      if (!par.IsLevel2Subscribed) return; //Already unsubscribed\r\n      par.IsLevel2Subscribed = false;\r\n      var req = {\r\n        \"OMSId\": 1,  //OMS Identifier [Integer] Always 1\r\n        \"InstrumentId\": par.Info.InstrumentId,  //Instrument's Identifer [Integer]\r\n      };\r\n\r\n      apiRef.RPCCall('UnsubscribeLevel2', req, function (rv) {\r\n          par.L2Buys = {};\r\n          par.L2Sells = {};\r\n          if (completeCallback) completeCallback();\r\n      });\r\n    }\r\n  };\r\n\r\n  function Level2UpdateEvent_HandlerFcn(d) {\r\n    // check if it's for me?\r\n    if (!par.IsLevel2Subscribed) return;\r\n    if (d.length === 0) return;\r\n    if (!d[0]) return;\r\n    if (d[0][7] !== par.Info.InstrumentId) return; // if the first element is not for this instrument class exit\r\n\r\n    var Level2DataClass_ArrayObj = [];\r\n\r\n    d.forEach(function(el, index) {\r\n      var l2Data = new Level2DataClass(el);\r\n\r\n      Level2DataClass_ArrayObj.push(l2Data);\r\n\r\n      AlphaPoint.lvl2Update.onNext(l2Data);\r\n\r\n      if (l2Data.Side === 0) { // buy\r\n        if (l2Data.ActionType === 0 || l2Data.ActionType === 1 ) { // new or update\r\n          par.L2Buys[l2Data.Price] = l2Data;\r\n        } else if (l2Data.ActionType === 2) { // delete\r\n          delete par.L2Buys[l2Data.Price];\r\n        }\r\n      } else if (l2Data.Side === 1) { // sell\r\n        if (l2Data.ActionType === 0 || l2Data.ActionType === 1) { // new or update\r\n          par.L2Sells[l2Data.Price] = l2Data;\r\n        } else if (l2Data.ActionType === 2) { // delete\r\n          delete par.L2Sells[l2Data.Price];\r\n        }\r\n      }\r\n    });\r\n\r\n    par.L2BestBuyPrice = getBestBuyPrice();\r\n    par.L2BestSellPrice = getBestSellPrice();\r\n    $(\"#L1Bid\").html(par.L2BestBuyPrice.toFixed(2));\r\n    $(\"#L1Ask\").html(par.L2BestSellPrice.toFixed(2));\r\n    par.L2ChangedEvent.notify(Level2DataClass_ArrayObj);\r\n  }\r\n  this.L2ChangedEvent = new Event(this); // Array of Level2DataClass\r\n\r\n  // LEVEL 1, Subscription, Event, and Data Objects\r\n  this.IsLevel1Subscribed = false;\r\n  this.L1Data = null;\r\n  this.L1ChangedEvent = new Event(this); // Level1DataClass\r\n\r\n  this.SubscribeLevel1 = function (bSubscribe, completeCallback) {\r\n    if (bSubscribe) {\r\n      if (par.IsLevel1Subscribed) return; //Already subscribed\r\n      par.IsLevel1Subscribed = true;\r\n      par.L1ChangedEvent.attach(updateTickerData);\r\n      var req = {\r\n        \"OMSId\": 1,  //OMS Identifier [Integer] Always 1\r\n        \"InstrumentId\": par.Info.InstrumentId,  //Instrument's Identifer [Integer]\r\n      };\r\n      // lets subscribe\r\n      apiRef.RPCCall('SubscribeLevel1', req, function (rv) {\r\n        Level1UpdateEvent_HandlerFcn(rv);// first update, maybe just populate the book\r\n        if (completeCallback) completeCallback();\r\n      });\r\n    } else { // unsibscribe\r\n      if (!par.IsLevel1Subscribed) return; //Already unsubscribed\r\n      par.IsLevel1Subscribed = false;\r\n      var req = {\r\n        \"OMSId\": 1,  //OMS Identifier [Integer] Always 1\r\n        \"InstrumentId\": par.Info.InstrumentId,  //Instrument's Identifer [Integer]\r\n      };\r\n\r\n      apiRef.RPCCall('UnsubscribeLevel1', req, function (rv) {\r\n        par.L1Data = null;\r\n        if (completeCallback) completeCallback();\r\n      });\r\n    }\r\n  };\r\n\r\n  function Level1UpdateEvent_HandlerFcn(data) {\r\n    if (par.IsLevel1Subscribed === false) return; // check if it's for me?\r\n    par.L1Data = data;\r\n    par.L1ChangedEvent.notify(data);\r\n  }\r\n\r\n  function updateTickerData(sender, data) {\r\n    var l1Data = data;\r\n    //update the L1 data\r\n    if (l1Data) {\r\n      $(\"#L1LastPrice\").html(l1Data.LastTradedPx.toFixed(2));\r\n      $(\"#L124HRChange\").html(l1Data.Rolling24HrPxChange.toFixed(2) + \"%\");\r\n      // $(\"#L1Bid\").html(l1Data.BestBid.toFixed(2));\r\n      // $(\"#L1Ask\").html(l1Data.BestOffer.toFixed(2));\r\n      $(\"#L124HRVolume\").html(l1Data.Rolling24HrVolume.toFixed(2) + \" \" + document.APAPI.Session.Instruments[l1Data.InstrumentId].Info.Product1Symbol);\r\n      $(\"#L124HRLow\").html(l1Data.SessionLow.toFixed(2));\r\n      $(\"#L124HRHigh\").html(l1Data.SessionHigh.toFixed(2));\r\n    }\r\n  }\r\n\r\n  // TRADES, Recent and New trades\r\n  this.RecentTradesCacheLength = 100;\r\n  this.IsTradesSubscribed = false;\r\n  this.RecentTrades = []; // array of recent trades\r\n  this.TradesChangedEvent = new Event(this); // Param contains new trades\r\n  this.SubscribeTrades = function (bSubscribe, completeCallback) {\r\n    if (bSubscribe) {\r\n      if (par.IsTradesSubscribed) return; //Already subscribed\r\n      par.IsTradesSubscribed = true;\r\n      var req = {\r\n        \"OMSId\": 1,  //OMS Identifier [Integer] Always 1\r\n        \"InstrumentId\": par.Info.InstrumentId,  //Instrument's Identifer [Integer]\r\n        \"IncludeLastCount\": par.RecentTradesCacheLength\r\n      };\r\n      // lets subscribe\r\n      apiRef.RPCCall('SubscribeTrades', req, function (rv) {\r\n        TradesUpdateEvent_HandlerFcn(rv);// first update, maybe just populate the book\r\n        if (completeCallback) completeCallback();\r\n      });\r\n    } else { // unsibscribe\r\n      if (!par.IsTradesSubscribed) return; //Already unsubscribed\r\n      par.IsTradesSubscribed = false;\r\n      var req = {\r\n        \"OMSId\": 1,  //OMS Identifier [Integer] Always 1\r\n        \"InstrumentId\": par.Info.InstrumentId,  //Instrument's Identifer [Integer]\r\n      };\r\n\r\n      apiRef.RPCCall('UnsubscribeTrades', req, function (rv) {\r\n        par.RecentTrades = [];\r\n        if (completeCallback) completeCallback();\r\n      });\r\n    }\r\n  };\r\n\r\n  function TradesUpdateEvent_HandlerFcn(d) {\r\n    // check if it's for me?\r\n    if (par.IsTradesSubscribed == false) return;\r\n    if (d.length == 0) return;\r\n    if (!d[0]) return;\r\n    if (d[0][1] != par.Info.InstrumentId) return; // if the first element is not for this instrument class exit\r\n\r\n    var NewTradesDataClass_ArrayObj = new Array(d.length);\r\n    for (var i in d) {\r\n      //if (d[7] != par.Info.InstrumentId) // its its not for me, skip\r\n      //    continue;\r\n      var tradeData = new TradesDataClass(d[i]);\r\n      NewTradesDataClass_ArrayObj.push(tradeData);\r\n      par.RecentTrades.push(tradeData);\r\n      if (par.RecentTrades.length > par.RecentTradesCacheLength) par.RecentTrades.pop();\r\n    }\r\n\r\n    par.TradesChangedEvent.notify(NewTradesDataClass_ArrayObj);\r\n  }\r\n}\r\n\r\n// Return from server\r\nfunction TradesDataClass(obj) {\r\n  this.TradeId = obj[0];\r\n  this.InstrumentId = obj[1];\r\n  this.Quantity = obj[2];\r\n  this.Price = obj[3];\r\n  this.Order1Id = obj[4];\r\n  this.Order2Id = obj[5];\r\n  this.Timestamp = obj[6];\r\n  this.Direction = obj[7];\r\n  this.TakerSide = obj[8];\r\n}\r\n// Return from server\r\nfunction Level2DataClass(obj) {\r\n  this.UpdateId = obj[0];\r\n  this.NumberOfAccounts = obj[1];\r\n  this.UpdateDateTime = obj[2]; //Timestamp [64 bit Integer] .NET UTC Ticks. See code snippets for examples on converting this to other formats.\r\n  this.ActionType = obj[3]; //Change Type [Integer] 0=New, 1=Update, 2=Delete\r\n  this.LastTradePrice = obj[4];\r\n  this.NumberOfOrders = obj[5];\r\n  this.Price = obj[6];\r\n  this.ProductPairCode = obj[7];\r\n  this.Quantity = obj[8];\r\n  this.Side = obj[9];\r\n}\r\n\r\nmodule.exports = {\r\n  SessionClass: SessionClass,\r\n  initOrderHelpers: initOrderHelpers\r\n};\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Event = __webpack_require__(5).Event;\n\n// LOW LEVEL API, RPC, Events, IsConnected, Session\n// public class AP_API()\nfunction AP_API() {\n    var par = this;\n    var wsConnection = null;\n    var nextIvalue = 0;\n\n    var onOpenCallbacks = [];\n    var onCloseCallbacks = [];\n\n    // private Dictionary[frame.id] = callback;\n    var RPCCall_ReplyWaitObjects = {}\n\n    // private Dictionary[eventName] = callback\n    var RPCEvent_EventWaitObjects = {};\n\n    //############# PUBLIC FIELDS & EVENTS ###############\n    // this.wsUri = APConfig.API_V2_URL;\n    //public bool IsConnected = false;\n    this.IsConnected = false;\n    this.IsConnectedEvent = new Event(this);\n    //############# END PUBLIC FIELDS & EVENTS ###############\n\n    this.addOnOpenCallback = function(callback) {\n        onOpenCallbacks.push(callback);\n    };\n\n    this.addOnCloseCallback = function(callback) {\n        onCloseCallbacks.push(callback);\n    };\n\n    // public void Connect();\n    this.Connect = function (wsUri) {\n        wsConnection = new WebSocket(wsUri);\n\n        wsConnection.onopen = internalOpen;\n        wsConnection.onclose = internalClose;\n        wsConnection.onmessage = internalOnMessage;\n        wsConnection.onerror = internalOnError;\n        wsConnection.SubscribeToEvent = this.SubscribeToEvent;\n        wsConnection.RPCCall = this.RPCCall;\n        wsConnection.RPCCallLevel2 = this.RPCCallLevel2;\n\n        return wsConnection;\n    };\n\n    // public void RPCCall(function_name, paramObject, callback);\n    this.RPCCall = function (function_name, paramObject, callback, level) {\n        var frame = {\n            \"m\": level || 0,\n            \"i\": nextIvalue,\n            \"n\": function_name,\n            \"o\": paramObject ? JSON.stringify(paramObject) : ''\n        };\n\n        wsConnection.send(JSON.stringify(frame));\n        if (callback && typeof callback === 'function') {\n            RPCCall_ReplyWaitObjects[nextIvalue] = callback;\n        }\n        nextIvalue += 2;\n    };\n\n    this.SubscribeToEvent = function (eventName, callback) {\n        if (RPCEvent_EventWaitObjects[eventName] === undefined) {\n            RPCEvent_EventWaitObjects[eventName] = [];\n        }\n        RPCEvent_EventWaitObjects[eventName].push(callback);\n    };\n\n    this.closeConnection = function() {\n        wsConnection.close();\n    };\n\n    // private void internalOpen();\n    function internalOpen(d) {\n        par.IsConnected = true;\n        par.IsConnectedEvent.notify();\n        onOpenCallbacks.forEach(function(callback) { callback(); });\n    }\n\n    // private void internalClose();\n    function internalClose(d) {\n        par.IsConnected = false;\n        onCloseCallbacks.forEach(function(callback) { callback(); });\n    }\n\n    // private void internalOnMessage(ev); hooked into this.wsConnection.onmessage = internalOnMessage;\n    function internalOnMessage(ev) {\n        var frame = JSON.parse(ev.data);\n        var rpcCallback = RPCCall_ReplyWaitObjects[frame.i];\n\n        if (rpcCallback) {\n            if (frame.o != '') {\n                try {\n                    rpcCallback(JSON.parse(frame.o));\n                } catch(e) {\n                    // console.error(e);\n                }\n            } else {\n                rpcCallback();\n            }\n            delete RPCCall_ReplyWaitObjects[frame.i];\n        }\n\n        if (RPCEvent_EventWaitObjects[frame.n]) {\n            if (frame.o != '') {\n                for (var i = 0; i < RPCEvent_EventWaitObjects[frame.n].length; ++i) {\n                    try {\n                        RPCEvent_EventWaitObjects[frame.n][i](JSON.parse(frame.o));\n                    } catch(e) {\n                        console.error(e);\n                    }\n                }\n            } else {\n                for (var i = 0; i < RPCEvent_EventWaitObjects[frame.n].length; ++i) {\n                    RPCEvent_EventWaitObjects[frame.n][i]();\n                }\n            }\n        }\n    }\n\n    function internalOnError(evt) {\n        console.log(\"ERROR MESSAGE\",evt);\n    }\n} // END CLASS AP_API()\n\nmodule.exports = AP_API;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar subscribeAccountEvents = function(accountId) {\r\n  var requestPayload = {AccountId: accountId, OMSId: AlphaPoint.oms.value} || {} ;\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('SubscribeAccountEvents', requestPayload, function(data) {});\r\n  });\r\n};\r\n\r\nmodule.exports = subscribeAccountEvents;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar Authenticate = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('AuthenticateUser', requestPayload, function(data) {\r\n      AlphaPoint.authenticateSubject.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = Authenticate;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar authenticate2FA = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('Authenticate2FA', requestPayload, function(data) {\r\n      AlphaPoint.auth2FA.onNext(data);\r\n      logs.userData.onNext(data);\r\n\r\n      // Getting a SessionToken\r\n      if (data.Authenticated) {\r\n        logs.session.onNext(data);\r\n        logs.session.subscribe(function (data) {\r\n            if(data.SessionToken) localStorage.setItem(\"SessionToken\", data.SessionToken);\r\n        });\r\n        logs.userData.subscribe(function(data) {\r\n            localStorage.setItem(\"UserId\", data.UserId)\r\n        });\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = authenticate2FA;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar cancelAllOrders= function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('CancelAllOrders', requestPayload, console.log);\r\n  })\r\n};\r\n\r\nmodule.exports = cancelAllOrders\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n//var socket = require (\"./\");\r\n\r\nvar logs = __webpack_require__(0);\r\n\r\n// var Message = require('./socketSend');\r\n// var Message = require('../connection/socketSend');\r\n\r\nvar cancelOrder = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('CancelOrder', requestPayload, function(data) {\r\n      AlphaPoint.cancel.onNext(data);\r\n      console.log(data);\r\n    });\r\n    // Message('CancelOrder', requestPayload);\r\n  });\r\n};\r\n\r\nmodule.exports = cancelOrder;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar cancelReplaceOrder = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('CancelReplaceOrder', requestPayload, console.log);\r\n  });\r\n};\r\n\r\nmodule.exports = cancelReplaceOrder;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar confirmRequestTransfers = function(data) {\r\n  requestPayload = data || {} ;\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('ConfirmRequestTransferFunds', requestPayload, function(data) {\r\n      AlphaPoint.confirmrequests.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = confirmRequestTransfers;\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar createAPIKey = function(requestPayload) {\r\n  console.log(\"AlphaPoint.userID\",AlphaPoint.userData);\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('AddUserAPIKey', requestPayload, function(data) {\r\n      AlphaPoint.addApiKey.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = createAPIKey;\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\n\nvar registerNewUser = function(requestPayload) {\n  requestPayload = requestPayload || {};\n\n  logs.socketOpen.filter(function(open) {\n    return open;\n  }).take(1).subscribe(function(open) {\n    document.APAPI.RPCCall('RegisterNewUser', requestPayload);\n  });\n}\n\nmodule.exports = registerNewUser;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar createDepositTicket = function(data) {\r\n  var requestPayload = {\r\n    OMSId: AlphaPoint.oms.value,\r\n    accountId: data.accountId,\r\n    assetId: data.productId,\r\n    assetName: data.currencyCode,\r\n    amount: data.amount,\r\n    RequestUser: data.accountId,\r\n    OperatorId: AlphaPoint.config.OperatorId,\r\n    Status: data.status,\r\n    DepositInfo: data.depositInfo\r\n  };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('createDepositTicket', requestPayload, function(data) {\r\n      AlphaPoint.createDeposit.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\n\r\nmodule.exports = createDepositTicket;\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar createWithdrawTicket = function(data) {\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('createWithdrawTicket', data, function(data) {\r\n      AlphaPoint.createWithdrawTicket.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = createWithdrawTicket;\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar disable2FA = function(requestPayload) {\r\n  requestPayload = requestPayload || {};  \r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('Disable2FA', requestPayload, function(data) {\r\n      AlphaPoint.Disable2FA.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = disable2FA;\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar enableGoogle2FA = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n    \r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('EnableGoogle2FA', requestPayload, function(data) {\r\n      AlphaPoint.EnableGoogle2FA.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = enableGoogle2FA;\r\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Rx = __webpack_require__(2);\r\n\r\nvar orders = function(arrayOrders) {\r\n  var orders = arrayOrders.length ? arrayOrders.map(function(info) {\r\n    var order = {\r\n      UpdateId: info[0],\r\n      Account: info[1],\r\n      TimeStamp:info[2],\r\n      ActionType: info[3],\r\n      LastTradePrice: info[4],\r\n      Orders: info[5],\r\n      Price: +info[6],\r\n      ProductPairCode: info[7],\r\n      Quantity: +info[8],\r\n      Side: info[9],\r\n    };\r\n    \r\n    return order;\r\n  }) : [];\r\n\r\n  return orders;\r\n};\r\n\r\nvar trades = function(arrayTrades) {\r\n  var trades =  arrayTrades.length ? arrayTrades.map(function(info) {\r\n    var trade = {\r\n      TradeId: info[0],\r\n      ProductPairCode: info[1],\r\n      Quantity: +info[2],\r\n      Price: +info[3],\r\n      Order1: info[4],\r\n      Order2: info[5],\r\n      TradeTime:info[6],\r\n      Direction: info[7],\r\n      Side: info[8],\r\n      IsBlockTrade: info[9] ? true : false,\r\n    };\r\n    \r\n    return trade;\r\n  }) : [];\r\n\r\n  return trades;\r\n};\r\n\r\nmodule.exports = {\r\n  orders:orders,\r\n  trades:trades,\r\n};\r\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar config = __webpack_require__(1);\r\nvar logs = __webpack_require__(0);\r\n\r\nvar getLogout = function() {\r\n  var requestPayload = {};\r\n  \r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('Logout', requestPayload);\r\n    logs.session.onNext({});\r\n    document.location = AlphaPoint.config.logoutRedirect;\r\n  });\r\n};\r\n\r\nmodule.exports = getLogout;\r\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getAPIKey = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetUserAPIKeys', requestPayload, function(data) {\r\n      AlphaPoint.myApiKeys.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getAPIKey;\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getAccountDepositHistory = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetAccountDepositHistory', requestPayload, function(data) {\r\n      AlphaPoint.accountDepositHistory.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getAccountDepositHistory;\r\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getAccountHistory = function(requestPayload) {\r\n  var requestPayload = {\r\n    AccountId:AlphaPoint.userAccounts.value,\r\n    OMSId:AlphaPoint.oms.value\r\n  };\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetAccountHistory', requestPayload, function(data) {\r\n      AlphaPoint.accountHistory.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getAccountHistory;\r\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getAccountInfo = function(requestPayload){\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetAccountInfo', requestPayload, function(data) {\r\n      AlphaPoint.config.debug && console.log(\"GetAccountInfo\", data);\r\n      AlphaPoint.accountInfo.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getAccountInfo;\r\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getAccountPositions = function(accountId) {\r\n  if (AlphaPoint.oms.value == false) return;\r\n\r\n  var requestPayload = {\r\n    AccountId: accountId,\r\n    OMSId: AlphaPoint.oms.value\r\n  };\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetAccountPositions', requestPayload, function(data) {\r\n      AlphaPoint.accountPositions.onNext(AlphaPoint.accountPositions.value.concat(data));\r\n    });\r\n  });\r\n};\r\n\r\n\r\nmodule.exports = getAccountPositions;\r\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getAccountTrades = function(accountId) {\r\n  var requestPayload = {\r\n    AccountId: accountId,\r\n    OMSId: AlphaPoint.oms.value,\r\n    StartIndex: 0,\r\n    Count: 100\r\n  };\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetAccountTrades', requestPayload, function(data) {\r\n      AlphaPoint.accountTrades.onNext(AlphaPoint.accountTrades.value.concat(data));\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getAccountTrades;\r\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getAccountTransactions = function(accountId) {\r\n  var requestPayload = {\r\n    AccountId: accountId,\r\n    OMSId: AlphaPoint.oms.value,\r\n    StartIndex: 0,\r\n    Count: 100\r\n  };\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetAccountTransactions', requestPayload, function(data) {\r\n      AlphaPoint.accountTransactions.onNext(AlphaPoint.accountTransactions.value.concat(data));\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getAccountTransactions;\r\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getAccountWithDrawHistory = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetAccountWithDrawHistory', requestPayload, function(data) {\r\n      console.log(\"GetAccountWithdrawHistory\",data);\r\n      AlphaPoint.accountWithDrawHistory.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getAccountWithDrawHistory;\r\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getDepositInfo = function(requestPayload) {\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetDepositInfo', requestPayload, function(data) {\r\n      var keys = data.DepositInfo && JSON.parse(data.DepositInfo);\r\n      AlphaPoint.keys.onNext(keys)\r\n      AlphaPoint.deposits.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getDepositInfo;\r\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\n\nvar getDepositRequestInfoTemplate = function(requestPayload) {\n  logs.socketOpen.filter(function(open) {\n    return open;\n  }).take(1).subscribe(function(open) {\n    document.APAPI.RPCCall('GetDepositRequestInfoTemplate', requestPayload, function(data) {\n      console.log('GetDepositRequestInfoTemplate response: ', data);\n      AlphaPoint.depositTemplate.onNext(data || {});\n    });\n  });\n};\n\nmodule.exports = getDepositRequestInfoTemplate;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getInstruments = function() {\r\n  var requestPayload = { OMSId:AlphaPoint.oms.value };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetInstruments', requestPayload, function(data) {\r\n      AlphaPoint.instruments.onNext(data);\r\n\r\n      data.forEach(function(ins) {\r\n        var orderBook = AlphaPoint.orderBook.value;\r\n        var tickerBook = AlphaPoint.tickerBook.value;\r\n        \r\n        if (!orderBook[ins.InstrumentId]) orderBook[ins.InstrumentId] = {};\r\n        orderBook[ins.InstrumentId].Symbol = ins.Symbol;\r\n        orderBook[ins.InstrumentId].InstrumentId = ins.InstrumentId;\r\n        AlphaPoint.orderBook.onNext(orderBook);\r\n      \r\n        if (!tickerBook) tickerBook= [];\r\n        AlphaPoint.tickerBook.onNext(tickerBook);\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\n\r\nmodule.exports = getInstruments;\r\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ajax = __webpack_require__(3);\r\nvar config = __webpack_require__(1);\r\nvar events = __webpack_require__(4);\r\n\r\nvar cache = {};\r\n\r\nvar getLanguage = function(data, callback) {\r\n  data = data || {};\r\n  data.language = data.language || config.defaultLanguage;\r\n\r\n  if (!data.language) return callback && callback({});\r\n\r\n  if (cache[data.language]) return callback && callback(cache[data.language]);\r\n\r\n  ajax({url: config.languagesLocation + '/' + data.language + '.json', type: 'GET' }, function(res) {\r\n    if (res) {\r\n      events.language.onNext(res);\r\n      if (callback) { callback(res); }\r\n    } else {\r\n      ajax({url: config.languagesLocation + '/' + config.defaultLanguage + '.json', type: 'GET' }, function(res) {\r\n        if (res) {\r\n          events.language.onNext(res);\r\n          if (callback) { callback(res); }\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = getLanguage;\r\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar config = __webpack_require__(1);\r\nvar logs = __webpack_require__(0);\r\n\r\nvar getOMS = function() {\r\n  var requestPayload = { OperatorId: config.OperatorId };\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetOMSs', requestPayload, function(data) {\r\n      AlphaPoint.oms.onNext(data[0].OMSId);\r\n      AlphaPoint.getInstruments();\r\n      AlphaPoint.getProducts();\r\n      AlphaPoint.getUserAccounts(1);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getOMS;\r\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getOpenOrders = function(accountId) {\r\n  if ( AlphaPoint.oms.value == false || AlphaPoint.userAccounts.value == false ) return;\r\n\r\n  var requestPayload = {\r\n    AccountId: accountId,\r\n    OMSId: AlphaPoint.oms.value\r\n  };\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetOpenOrders', requestPayload, function(data) {\r\n      AlphaPoint.openorders.onNext(AlphaPoint.openorders.value.concat(data));\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getOpenOrders;\r\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getOrderFee = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetOrderFee', requestPayload, function(data) {\r\n      AlphaPoint.orderfee.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getOrderFee;\r\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getOrderHistory = function(accountId) {\r\n  var requestPayload = {\r\n    AccountId: accountId,\r\n    OMSId: AlphaPoint.oms.value\r\n  };\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetOrderHistory', requestPayload, function(data) {\r\n      AlphaPoint.orderHistory.onNext(AlphaPoint.orderHistory.value.concat(data));\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getOrderHistory;\r\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getProducts= function() {\r\n  if (AlphaPoint.oms.value == false) return;\r\n  var requestPayload = { OMSId: AlphaPoint.oms.value };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetProducts', requestPayload, function(data) {\r\n      AlphaPoint.products.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getProducts;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getRequestTransfers = function(accountId) {\r\n  var requestPayload = {\r\n    OMSId:AlphaPoint.oms.value,\r\n    OperatorId:AlphaPoint.config.OperatorId,\r\n    PayerAccountId: accountId,\r\n    Status:0\r\n  };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetRequestTransfers', requestPayload, function(data) {\r\n      AlphaPoint.getrequests.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getRequestTransfers;\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getUserAccounts = function(AccountId) {\r\n  var requestPayload = { AccountId: AccountId, OMSId: AlphaPoint.oms.value } || {};\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetUserAccounts', requestPayload, function(data) {\r\n      const selectedAccount = document.APAPI.Session.selectedAccount;\r\n\r\n      AlphaPoint.userAccounts.onNext(data);\r\n      data.forEach(function(accountId) {\r\n        AlphaPoint.getOpenOrders(accountId);\r\n        AlphaPoint.getAccountPositions(accountId);\r\n        AlphaPoint.getAccountTrades(accountId);\r\n        AlphaPoint.getAccountTransactions(accountId);\r\n        AlphaPoint.subscribeAccountEvents(accountId);\r\n        AlphaPoint.getOrderHistory(accountId);\r\n        AlphaPoint.getRequestTransfers(accountId);\r\n      });\r\n      AlphaPoint.getAccountInfo({ AccountId: document.APAPI.Session.selectedAccount, OMSId: AlphaPoint.oms.value });\r\n      AlphaPoint.getAPIKey({ UserId: AlphaPoint.userData.value.UserId });\r\n      AlphaPoint.getUserCon({ UserId: AlphaPoint.userData.value.UserId });\r\n      if (AlphaPoint.userAccounts.value) AlphaPoint.synched.onNext(true);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getUserAccounts;\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getUserCon = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetUserConfig', requestPayload, function(data) {\r\n      AlphaPoint.getUserConfig.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getUserCon;\r\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getUserConfigValue = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetUserConfigValue', requestPayload, function(data) {\r\n      AlphaPoint.getUserConfigVal.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getUserConfigValue;\r\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getUserInfo = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetUserInfo', requestPayload, function(data) {\r\n      AlphaPoint.getUser.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\n\r\nmodule.exports = getUserInfo;\r\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\n\nvar getUserReportTickets = function() {\n  var requestPayload = {\n    UserId: AlphaPoint.userData.value.UserId\n  };\n\n  logs.session.filter(function(open) {\n    return open.SessionToken;\n  }).take(1).subscribe(function(open) {\n    document.APAPI.RPCCall('GetUserReportTickets', requestPayload, function(data) {\n      AlphaPoint.userReportTickets.onNext(data);\n    });\n  });\n};\n\nmodule.exports = getUserReportTickets;\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\n\nvar getUserReportWriterResultRecords = function() {\n  var requestPayload = {};\n\n  logs.session.filter(function(open) {\n    return open.SessionToken;\n  }).take(1).subscribe(function(open) {\n    document.APAPI.RPCCall('GetUserReportWriterResultRecords', requestPayload, function(data) {\n      AlphaPoint.userReports.onNext(data);\n    });\n  });\n};\n\nmodule.exports = getUserReportWriterResultRecords;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getWithdrawTemplate= function(data) {\r\n  var requestPayload = {\r\n    OMSId:AlphaPoint.oms.value,\r\n    AccountId:data.accountId,\r\n    ProductId:data.productId,\r\n    templateType: data.templateType\r\n  };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetWithdrawTemplate', requestPayload, function(data) {\r\n      AlphaPoint.withdrawTemplate.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getWithdrawTemplate;\r\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar getWithdrawTemplateTypes= function(data) {\r\n  var requestPayload = {\r\n    OMSId:AlphaPoint.oms.value,\r\n    AccountId:data.accountId,\r\n    ProductId:data.productId,\r\n  };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetWithdrawTemplateTypes', requestPayload, function(data) {\r\n      AlphaPoint.withdrawTemplateTypes.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getWithdrawTemplateTypes;\r\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar config = __webpack_require__(1);\nvar Rx = __webpack_require__(2);\nvar queryString = __webpack_require__(82);\nvar logs = __webpack_require__(0);\nvar list = __webpack_require__(7);\nvar redirect = __webpack_require__(8);\n\n\n/** @namespace **/\nvar AlphaPoint = {\n  config: config,\n\n  //Websocket Library Starts here\n  WebAuthenticate: __webpack_require__(78),\n  Authenticate: __webpack_require__(16),\n  logout: __webpack_require__(57),\n  getLogout: __webpack_require__(29),\n  getProducts: __webpack_require__(46),\n  getInstruments: __webpack_require__(40),\n  getOMS: __webpack_require__(42),\n  registerNewUser: __webpack_require__(23),\n  resetPassword: __webpack_require__(63),\n  subscribeLvl1: __webpack_require__(69),\n  subscribeLvl2: __webpack_require__(70),\n  subscribeTrades: __webpack_require__(71),\n  unsubscribeLvl1: __webpack_require__(74),\n  unsubscribeLvl2: __webpack_require__(75),\n  unsubscribeTradesCall: __webpack_require__(76),\n  authenticate2FA: __webpack_require__(17),\n  disable2FA: __webpack_require__(26),\n  enableGoogle2FA: __webpack_require__(27),\n  getUserInfo: __webpack_require__(51),\n  setUserInfo: __webpack_require__(66),\n  setUserCon: __webpack_require__(65),\n  getUserCon: __webpack_require__(49),\n  getUserConfigValue: __webpack_require__(50),\n  getOpenOrders: __webpack_require__(43),\n  getAccountTrades: __webpack_require__(35),\n  getAccountTransactions: __webpack_require__(36),\n  getAccountHistory: __webpack_require__(32),\n  getAccountDepositHistory: __webpack_require__(31),\n  getAccountWithDrawHistory: __webpack_require__(37),\n  getAccountPositions: __webpack_require__(34),\n  subscribeAccountEvents: __webpack_require__(15),\n  getAccountInfo: __webpack_require__(33),\n  getUserAccounts: __webpack_require__(48),\n  getOrderHistory: __webpack_require__(45),\n  getOrderFee: __webpack_require__(44),\n  sendOrder: __webpack_require__(64),\n  submitBlockTrade: __webpack_require__(68),\n  cancelOrder: __webpack_require__(19),\n  cancelReplaceOrder: __webpack_require__(20),\n  cancelAllOrders: __webpack_require__(18),\n  modifyOrder: __webpack_require__(58),\n  getDepositInfo: __webpack_require__(38),\n  getDepositRequestInfoTemplate: __webpack_require__(39),\n  getWithdrawTemplateTypes: __webpack_require__(55),\n  getWithdrawTemplate: __webpack_require__(54),\n  withdraw: __webpack_require__(79),\n  createAPIKey: __webpack_require__(22),\n  deleteAPIKey: __webpack_require__(61),\n  getAPIKey: __webpack_require__(30),\n  createDepositTicket: __webpack_require__(24),\n  createWithdrawTicket: __webpack_require__(25),\n  transferFunds: __webpack_require__(72),\n  requestFunds: __webpack_require__(62),\n  getRequestTransfers: __webpack_require__(47),\n  confirmRequestTransfers: __webpack_require__(21),\n  rejectRequestTransfers: __webpack_require__(60),\n  validateUserRegistration: __webpack_require__(77),\n  setUserKYCData:__webpack_require__(67), // For Depth Chart\n  getLanguage: __webpack_require__(41),\n  translation: __webpack_require__(73),\n  redirect: __webpack_require__(8),\n  getUserReportWriterResultRecords: __webpack_require__(53),\n  getUserReportTickets: __webpack_require__(52),\n\n  // BehaviorSubjects\n  list:  __webpack_require__(7),\n  selectedAccount: list.selectedAccount,\n  authenticateSubject: list.authenticateSubject,\n  webAuthenticateSubject: list.webAuthenticateSubject,\n  products: list.products,\n  instruments: list.instruments,\n  oms: list.oms,\n  registerUser: list.registerUser,\n  resetPass: list.resetPass,\n  subscribe1: list.subscribe1,\n  subscribe2: list.subscribe2,\n  subscribe1Update: list.subscribe1Update,\n  subscribe2Update: list.subscribe2Update,\n  subscribe2UpdateBook: list.subscribe2Update,\n  subscribeTradesSubject: list.subscribeTradesSubject,\n  getTickerHist: list.getTickerHist,\n  unsubscribe1: list.unsubscribe1,\n  unsubscribe2: list.unsubscribe2,\n  unsubscribeTrades: list.unsubscribeTrades,\n  orderPrefillPriceAndSide: list.orderPrefillPriceAndSide,\n  auth2FA: list.auth2FA,\n  Disable2FA: list.Disable2FA,\n  EnableGoogle2FA: list.EnableGoogle2FA,\n  getUser: list.getUser,\n  setUser: list.setUser,\n  setUserConfig: list.setUserConfig,\n  getUserConfig: list.getUserConfig,\n  getUserConfigVal: list.getUserConfigVal,\n  reqVerifyEmail: list.reqVerifyEmail,\n  openorders: list.openorders,\n  tradeReports: list.tradeReports,\n  openquotes: list.openquotes,\n  accountTrades: list.accountTrades,\n  accountTransactions: list.accountTransactions,\n  accountHistory: list.accountHistory,\n  accountDepositHistory: list.accountDepositHistory,\n  accountWithDrawHistory: list.accountWithDrawHistory,\n  accountPositions: list.accountPositions,\n  accountEvents: list.accountEvents,\n  accountInfo: list.accountInfo,\n  userAccounts: list.userAccounts,\n  orderfee: list.orderfee,\n  orderHistory: list.orderHistory,\n  sendorder: list.sendorder,\n  submitBlockTradeEvent: list.submitBlockTradeEvent,\n  cancel: list.cancel,\n  cancelReplace: list.cancelReplace,\n  cancelAll: list.cancelAll,\n  modify: list.modify,\n  deposits: list.deposits,\n  withdrawTemplateTypes: list.withdrawTemplateTypes,\n  withdrawTemplate: list.withdrawTemplate,\n  submitWithdraw: list.submitWithdraw,\n  createDeposit: list.createDeposit,\n  keys: list.keys,\n  rejectedOrders: list.rejectedOrders,\n  buyOrders: list.buyOrders,\n  sellOrders: list.sellOrders,\n  buyOrdersUpdate: list.buyOrdersUpdate,\n  sellOrdersUpdate: list.sellOrdersUpdate,\n  lvl2Buys: list.lvl2Buys,\n  lvl2Sells: list.lvl2Sells,\n  lvl2BuysUpdate: list.lvl2BuysUpdate,\n  lvl2SellsUpdate: list.lvl2SellsUpdate,\n  lvl2RawUpdate: list.lvl2RawUpdate,\n  lvl2Update: list.lvl2Update,\n  accountBalances: list.accountBalances,\n  accountOrders: list.accountOrders,\n  addApiKey: list.addApiKey,\n  removeApiKey: list.removeApiKey,\n  myApiKeys: list.myApiKeys,\n  logoutEvent: list.logoutEvent,\n  openorderEvents: list.openorderEvents,\n  transfunds: list.transfunds,\n  requestfunds: list.requestfunds,\n  getrequests: list.getrequests,\n  confirmrequests: list.confirmrequests,\n  rejectrequests: list.rejectrequests,\n  verifylevel: list.verifylevel,\n  verificationLevelUpdate: list.verificationLevelUpdate,\n  sessionLoaded: list.sessionLoaded,\n  userReports: list.userReports,\n  userReportTickets: list.userReportTickets,\n  depositTemplate: list.depositTemplate,\n\n  // Captured data\n  logs : __webpack_require__(0),\n  userData: logs.userData,\n  session: logs.session,\n  socketOpen: logs.socketOpen,\n  prodPair: logs.prodPair,\n  orderBook : logs.orderBook,\n  tickerBook : logs.tickerBook,\n  tickerData : logs.tickerData,\n  logoutV2 : logs.logoutV2,\n  loginStatusRedirect: logs.loginStatusRedirect,\n  prodProduct: logs.prodProduct,\n  setProductPair: logs.prodPair.onNext.bind(logs.prodPair),\n  setProduct: logs.prodProduct.onNext.bind(logs.prodProduct),\n  synched: logs.synched,\n  instrumentChange: logs.instrumentChange,\n  language: logs.language, // not sure what this is doing currently\n  queryString: queryString\n};\n\nmodule.exports = AlphaPoint;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar config = __webpack_require__(1);\nvar logs = __webpack_require__(0);\n\nfunction reset() {\n  logs.session.onNext({})\n}\n\nvar logout = function(data) {\n  data = data || {};\n  data.SessionToken = data.SessionToken\n\n  if (data.SessionToken) {\n    logs.session.onNext({})\n    document.location = AlphaPoint.config.logoutRedirect;\n  } else {\n    reset();\n    document.location = AlphaPoint.config.logoutRedirect;\n  }\n};\n\nmodule.exports = logout;\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar modifyOrder = function(requestPayload) {\r\n  var requestPayload = {\r\n    OMSId:localStorage.oms,\r\n    OrderId:2565\r\n  };\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('ModifyOrder', requestPayload, console.log);\r\n  });\r\n};\r\n\r\nmodule.exports = modifyOrder;\r\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Rx = __webpack_require__(2);\r\nvar orderBook = function(orders) {};\r\n\r\nvar orderBookCreate = { orderBook: orderBook };\r\n\r\nmodule.exports = orderBookCreate\r\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar rejectRequestTransfers = function(data) {\r\n  requestPayload = data || {} ;\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('RejectRequestTransferFunds', requestPayload, function(data) {\r\n      console.log(\"RejectRequestTransferFunds\", data);\r\n      AlphaPoint.rejectrequests.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = rejectRequestTransfers;\r\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar deleteAPIKey = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('RemoveUserAPIKey', requestPayload, function(data) {\r\n      console.log(\"RemoveUserAPIKey\", data);\r\n      AlphaPoint.removeApiKey.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = deleteAPIKey;\r\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar requestFunds = function(data) {\r\n  requestPayload = data || {} ;\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('RequestTransferFunds', requestPayload, function(data) {\r\n      AlphaPoint.requestfunds.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = requestFunds;\r\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar resetPassword = function(data) {\r\n  var requestPayload = {\r\n    userName:data.UserName\r\n  };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('ResetPassword',requestPayload, function(data) {\r\n      AlphaPoint.resetPass.onNext(data);\r\n      if (data.result) {\r\n        $.bootstrapGrowl('Please check your email for password reset link', { \r\n          type: 'info',\r\n          allow_dismiss: true,\r\n          align: AlphaPoint.config.growlwerPosition,\r\n          delay: AlphaPoint.config.growlwerDelay,\r\n          offset: { from: 'top', amount: 30 },\r\n          left: '70%'\r\n        });\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = resetPassword;\r\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar sendOrder = function(data) {\r\n  requestPayload = data || {} ;\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('SendOrder', requestPayload, function(data) {\r\n      AlphaPoint.sendorder.onNext(data);\r\n      console.log(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = sendOrder;\r\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar setUserCon = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('SetUserConfig', requestPayload, function(data) {\r\n      AlphaPoint.setUserConfig.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = setUserCon;\r\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar setUserInfo = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('SetUserInfo', requestPayload, function(data) {\r\n      AlphaPoint.setUser.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = setUserInfo;\r\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar config = __webpack_require__(1);\r\nvar ajax = __webpack_require__(3);\r\nvar events = __webpack_require__(4);\r\n\r\n/**\r\n*  {@link AlphaPoint.getUserInfo} callback\r\n*  @callback AlphaPoint~getUserInfoCallback\r\n*  @param {object} response\r\n*  @param {boolean} response.isAccepted\r\n*  @param {string} response.rejectReason\r\n*  @param {string} response.affiliateId\r\n*  @param {string} response.firstName\r\n*  @param {string} response.lastName\r\n*  @param {boolean} response.UseAuthy2FA\r\n*  @param {boolean} response.UseGoogle2FA\r\n*  @param {boolean} response.GoogleAuthSiteName\r\n*  @param {number[]} response.verificationLevels\r\n*/\r\n\r\n/**\r\n*  getUserInfo\r\n*  @memberof AlphaPoint\r\n*  @param {object} data\r\n*  @param {string} data.firstName\r\n*  @param {string} data.lastName\r\n*  @param {boolean} data.UseAuthy2FA\r\n*  @param {boolean} data.UseGoogle2FA\r\n*  @param {string} [data.sessionToken=Logged in sessionToken]\r\n*  @param {AlphaPoint~getUserInfoCallback} [callback] - The callback that handles the response.\r\n*/\r\nvar setUserKYCData = function(data, callback) {\r\n  data = data || {};\r\n\r\n  var newData = {};\r\n  newData.sessionToken = data.sessionToken || events.session.value.sessionToken;\r\n\r\n  var userKYC_KVP = [];\r\n  for (var key in data) {\r\n    if (data[key] === undefined) data[key]='';\r\n    if (key !== 'sessionToken' && key !== 'idFrontB64' && key!=='idBackB64' && key!=='idHeldB64') {\r\n      userKYC_KVP.push({key:key, value: data[key].toString()});\r\n    }\r\n  }\r\n  newData.userKYC_KVP = userKYC_KVP;\r\n  newData.idFrontB64 = data['idFrontB64'];\r\n  newData.idBackB64 = data['idBackB64'];\r\n  newData.idHeldB64 = data['idHeldB64'];\r\n\r\n  if ( !newData.sessionToken || !newData.userKYC_KVP.length ) {\r\n    console.log('setUserInfo missing fields');\r\n    return;\r\n  }\r\n  console.log(\"kyc data: \"+JSON.stringify(newData));\r\n  ajax({ url: config.http.SetUserKYCData, data: newData}, function(res) {\r\n    console.log(res);\r\n    return callback && callback(res);\r\n  });\r\n};\r\n\r\nmodule.exports = setUserKYCData;\r\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\n\nvar submitBlockTrade = function(data) {\n  requestPayload = data || {} ;\n\n  logs.socketOpen.filter(function(open) {\n    return open;\n  }).take(1).subscribe(function(open) {\n    document.APAPI.RPCCall('SubmitBlockTrade', requestPayload, function(data) {\n      AlphaPoint.submitBlockTradeEvent.onNext(data);\n    });\n  });\n};\n\nmodule.exports = submitBlockTrade;\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar subscribeLvl1 = function(requestPayload) {\r\n  var InstrumentId = requestPayload;\r\n  requestPayload = { OMSId: AlphaPoint.oms.value, InstrumentId: InstrumentId };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('SubscribeLevel1', requestPayload, function(data) {\r\n      var level1Trades = [];\r\n      var tickerBook = AlphaPoint.tickerBook.value;\r\n\r\n      level1Trades.push(data);\r\n      AlphaPoint.subscribe1.onNext(level1Trades);\r\n      if (!tickerBook) tickerBook = [];\r\n      tickerBook.push(data)\r\n      AlphaPoint.tickerBook.onNext(tickerBook);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = subscribeLvl1;\r\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar subscribeLvl2 = function(requestPayload) {\r\n  var InstrumentId = requestPayload;\r\n  request\r\n  Payload = { OMSId: AlphaPoint.oms.value, InstrumentId: InstrumentId, Depth: 250 };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('SubscribeLevel2', requestPayload, function(data) {\r\n      var orders = format.orders(data);\r\n      var orderBook = AlphaPoint.orderBook.value;\r\n      var buys = orders.filter(function(order) {\r\n        return order.Side == 0;\r\n      });\r\n\r\n      buys.sort(function (a, b){\r\n        if (a.Price < b.Price) return 1;\r\n        if (a.Price > b.Price) return -1;\r\n        return 0;\r\n      });\r\n\r\n      if (orders.length > 0) {\r\n        if (!orderBook[orders[0].ProductPairCode]) {\r\n          orderBook[orders[0].ProductPairCode] = {};\r\n        }\r\n        orderBook[orders[0].ProductPairCode].buys = buys;\r\n        orderBook[orders[0].ProductPairCode].buys2 = buys;\r\n      }\r\n\r\n      var sells = orders.filter(function(order) {\r\n        return order.Side == 1;\r\n      })\r\n\r\n      sells.sort(function (a, b) {\r\n        if (a.Price > b.Price) return 1;\r\n        if (a.Price < b.Price) return -1;\r\n        return 0;\r\n      });\r\n\r\n      if (orders.length) {\r\n        orderBook[orders[0].ProductPairCode].sells = sells;\r\n        orderBook[orders[0].ProductPairCode].sells2 = sells;\r\n      }\r\n      AlphaPoint.orderBook.onNext(orderBook);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = subscribeLvl2;\r\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar subscribeTrades = function(requestPayload) {\r\n  var InstrumentId = requestPayload;\r\n  \r\n  requestPayload = { OMSId: AlphaPoint.oms.value, InstrumentId: InstrumentId, IncludeLastCount: 20 };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('SubscribeTrades', requestPayload, function(data) {\r\n      var trades = format.trades(data);\r\n      var orderBook = AlphaPoint.orderBook.value;\r\n\r\n      if(trades.length) {\r\n        if (!orderBook[trades[0].ProductPairCode]) {\r\n          orderBook[trades[0].ProductPairCode] = {};\r\n        }\r\n        orderBook[trades[0].ProductPairCode].trades = trades;\r\n      } else {\r\n      }\r\n      AlphaPoint.orderBook.onNext(orderBook);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = subscribeTrades;\r\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar transferFunds = function(data) {\r\n  requestPayload = data || {} ;\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('TransferFunds', requestPayload, function(data) {\r\n      AlphaPoint.transfunds.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = transferFunds;\r\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar events = __webpack_require__(4);\r\n\r\nfunction nested(obj, attrString) {\r\n  if (!attrString.split || !attrString.split) return null;\r\n\r\n  var path = attrString.split(\".\");\r\n  for (var i in path) {\r\n    obj = obj[path[i]];\r\n    if (!obj) return '';\r\n  }\r\n  return obj;\r\n}\r\n\r\nvar translation = function(path, callback) {\r\n  var result = nested(events.language.value, path);\r\n\r\n  return result;\r\n};\r\n\r\nmodule.exports = translation;\r\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar unsubscribeLvl1 = function() {\r\n  var InstrumentId;\r\n  var prodPair = AlphaPoint.prodPair.value;\r\n\r\n  AlphaPoint.instruments.subscribe(function(data) {\r\n    if (prodPair === 'BTCUSD') InstrumentId = data.length && data[0].InstrumentId;\r\n    if (prodPair === 'LTCUSD') InstrumentId = data.length && data[1].InstrumentId;\r\n  });\r\n\r\n  requestPayload = { OMSId: AlphaPoint.oms.value, InstrumentId: InstrumentId };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('UnsubscribeLevel1', requestPayload, console.log);\r\n  });\r\n};\r\n\r\nmodule.exports = unsubscribeLvl1;\r\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar unsubscribeLvl2 = function(id) {\r\n  var InstrumentId;\r\n  var prodPair = AlphaPoint.prodPair.value;\r\n\r\n  requestPayload = { OMSId: AlphaPoint.oms.value, InstrumentId: InstrumentId };\r\n  requestPayload = { OMSId: AlphaPoint.oms.value, InstrumentId: id };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('UnsubscribeLevel2', requestPayload, console.log);\r\n  });\r\n};\r\n\r\nmodule.exports = unsubscribeLvl2;\r\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar unsubscribeTradesCall = function() {\r\n  var InstrumentId;\r\n  AlphaPoint.instruments.subscribe(function(data) {\r\n    InstrumentId = data.length && data[0].InstrumentId;\r\n  });\r\n\r\n  requestPayload = { OMSId: AlphaPoint.oms.value, InstrumentId: InstrumentId };\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('UnsubscribeTrades', requestPayload, console.log);\r\n  });\r\n};\r\n\r\nmodule.exports = unsubscribeTradesCall;\r\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar validateUserRegistration = function(data) {\r\n  requestPayload = data || {} ;\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('ValidateUserRegistration', requestPayload, function(data) {\r\n      var res = JSON.parse(data.result);\r\n      AlphaPoint.verifylevel.onNext(res);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = validateUserRegistration;\r\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar WebAuthenticate = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('WebAuthenticateUser', requestPayload, function(data) {\r\n      AlphaPoint.webAuthenticateSubject.onNext(data);\r\n      logs.session.onNext(data);\r\n      logs.userData.onNext(data);\r\n\r\n      //Getting a SessionToken\r\n      logs.session.subscribe(function(data) {\r\n        localStorage.setItem(\"SessionToken\", data.SessionToken);\r\n      });\r\n\r\n      // To handle User Id\r\n      logs.userData.subscribe(function(data) {\r\n        localStorage.setItem(\"UserId\" ,data.UserId)\r\n      });\r\n    });\r\n\r\n  });\r\n};\r\n\r\nmodule.exports = WebAuthenticate;\r\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar logs = __webpack_require__(0);\r\n\r\nvar withdraw = function(data) {\r\n  var requestPayload;\r\n\r\n  switch (data.templateType) {\r\n    case \"FIAT\": {\r\n      requestPayload = {\r\n        OMSId: AlphaPoint.oms.value,\r\n        accountId: data.accountId,\r\n        productId: data.productId,\r\n        amount: data.amount,\r\n        templateForm: JSON.stringify({\r\n          TemplateType: data.templateType,\r\n          bankAddress: data.bankAddress,\r\n          fullName: data.fullName,\r\n          language: data.language,\r\n          comment: data.comment,\r\n          bankAccountNumber: data.bankAccountNumber,\r\n          bankAccountName: data.bankAccountName,\r\n          swiftCode: data.swiftCode\r\n        }),\r\n        TemplateType: data.templateType\r\n      };\r\n      break;\r\n    }\r\n    case \"ETH\": {\r\n      requestPayload = {\r\n        OMSId: AlphaPoint.oms.value,\r\n        accountId: data.accountId,\r\n        productId: data.productId,\r\n        amount: data.amount,\r\n        templateForm: JSON.stringify({\r\n          TemplateType: data.templateType,\r\n          Adress: data.sendToAddress\r\n        }),\r\n        TemplateType: data.templateType\r\n      };\r\n      break;\r\n    }\r\n    case \"XMR\": {\r\n      requestPayload = {\r\n        OMSId: AlphaPoint.oms.value,\r\n        accountId: data.accountId,\r\n        productId: data.productId,\r\n        amount: data.amount,\r\n        templateForm: JSON.stringify({\r\n          TemplateType: data.templateType,\r\n          Address: data.sendToAddress,\r\n          PaymentId: data.PaymentId\r\n        }),\r\n        TemplateType: data.templateType\r\n      };\r\n      break;\r\n    }\r\n    default: {\r\n      requestPayload = {\r\n        OMSId: AlphaPoint.oms.value,\r\n        accountId: data.accountId,\r\n        productId: data.productId,\r\n        amount: data.amount,\r\n        templateForm: JSON.stringify({\r\n          TemplateType: data.templateType,\r\n          Comment: ' ',\r\n          ExternalAddress: data.sendToAddress\r\n        }),\r\n        TemplateType: data.templateType\r\n      };\r\n    }\r\n  };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n      document.APAPI.RPCCall('CreateWithdrawTicket', requestPayload, function (data) {\r\n      AlphaPoint.submitWithdraw.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = withdraw;\r\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar strictUriEncode = __webpack_require__(83);\nvar objectAssign = __webpack_require__(80);\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result || accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nexports.extract = function (str) {\n\treturn str.split('?')[1] || '';\n};\n\nexports.parse = function (str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^(\\?|#|&)/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeURIComponent(val);\n\n\t\tformatter(decodeURIComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n};\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort().map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = __webpack_require__(12);\nvar RequestBase = __webpack_require__(86);\nvar isObject = __webpack_require__(6);\nvar isFunction = __webpack_require__(85);\nvar ResponseBase = __webpack_require__(87);\nvar shouldRetry = __webpack_require__(88);\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = exports = module.exports = function(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only verison of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n      status = 204;\n  }\n  this._setStatusProperties(status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (null === this.text && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method != 'HEAD'\n      ? this._parseBody(this.text ? this.text : this.xhr.response)\n      : null;\n  }\n}\n\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if(this.req._parser) {\n    return this.req._parser(this, str);\n  }\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n        new_err.original = err;\n        new_err.response = res;\n        new_err.status = res.status;\n      }\n    } catch(e) {\n      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\nEmitter(Request.prototype);\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (typeof pass === 'object' && pass !== null) { // pass is optional and can substitute for options\n    options = pass;\n  }\n  if (!options) {\n    options = {\n      type: 'function' === typeof btoa ? 'basic' : 'auto',\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', 'Basic ' + btoa(user + ':' + pass));\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n      \n    case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', 'Bearer ' + user);\n    break;  \n  }\n  return this;\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, options){\n  if (file) {\n    if (this._data) {\n      throw Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  // console.log(this._retries, this._maxRetries)\n  if (this._maxRetries && this._retries++ < this._maxRetries && shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function(){\n  console.warn(\"This is not supported in browser version of superagent\");\n  return this;\n};\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.pipe = Request.prototype.write = function(){\n  throw Error(\"Streaming is not supported in browser version of superagent\");\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\nRequest.prototype._appendQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;\n  }\n\n  if (this._sort) {\n    var index = this.url.indexOf('?');\n    if (index >= 0) {\n      var queryArr = this.url.substring(index + 1).split('&');\n      if (isFunction(this._sort)) {\n        queryArr.sort(this._sort);\n      } else {\n        queryArr.sort();\n      }\n      this.url = this.url.substring(0, index) + '?' + queryArr.join('&');\n    }\n  }\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nRequest.prototype._isHost = function _isHost(obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n}\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  if (this._endCalled) {\n    console.warn(\"Warning: .end() was called twice. This is not supported in superagent\");\n  }\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._appendQueryString();\n\n  return this._end();\n};\n\nRequest.prototype._end = function() {\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = function(){\n    var readyState = xhr.readyState;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n    if (4 != readyState) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  }\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n\n    if (this.header.hasOwnProperty(field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn){\n  var req = request('DELETE', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Check if `fn` is a function.\n *\n * @param {Function} fn\n * @return {Boolean}\n * @api private\n */\nvar isObject = __webpack_require__(6);\n\nfunction isFunction(fn) {\n  var tag = isObject(fn) ? Object.prototype.toString.call(fn) : '';\n  return tag === '[object Function]';\n}\n\nmodule.exports = isFunction;\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = __webpack_require__(6);\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in RequestBase.prototype) {\n    obj[key] = RequestBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function _clearTimeout(){\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, read, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function timeout(options){\n  if (!options || 'object' !== typeof options) {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    return this;\n  }\n\n  for(var option in options) {\n    switch(option) {\n      case 'deadline':\n        this._timeout = options.deadline;\n        break;\n      case 'response':\n        this._responseTimeout = options.response;\n        break;\n      default:\n        console.warn(\"Unknown timeout option\", option);\n    }\n  }\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function retry(count){\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  return this;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function() {\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    if (this._endCalled) {\n      console.warn(\"Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises\");\n    }\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\nRequestBase.prototype.catch = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\nRequestBase.prototype.ok = function(cb) {\n  if ('function' !== typeof cb) throw Error(\"Callback required\");\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function(res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nRequestBase.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function(name, val) {\n\n  // name should be either a string or an object.\n  if (null === name ||  undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    console.error(\".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  if (Array.isArray(val)) {\n    for (var i in val) {\n      this.field(name, val[i]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  if ('boolean' === typeof val) {\n    val = '' + val;\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nRequestBase.prototype.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function(on){\n  // This is browser-only functionality. Node side is no-op.\n  if(on==undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.send = function(data){\n  var isObj = isObject(data);\n  var type = this._header['content-type'];\n\n  if (this._formData) {\n    console.error(\".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObj && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObj || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function(sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function(reason, timeout, errno){\n  if (this._aborted) {\n    return;\n  }\n  var err = new Error(reason + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  err.errno = errno;\n  this.timedout = true;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function() {\n  var self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  }\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(function(){\n      self._timeoutError('Response timeout of ', self._responseTimeout, 'ETIMEDOUT');\n    }, this._responseTimeout);\n  }\n}\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/**\n * Module dependencies.\n */\n\nvar utils = __webpack_require__(89);\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in ResponseBase.prototype) {\n    obj[key] = ResponseBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function(field){\n    return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function(header){\n    // TODO: moar!\n    // TODO: make this a util\n\n    // content-type\n    var ct = header['content-type'] || '';\n    this.type = utils.type(ct);\n\n    // params\n    var params = utils.params(ct);\n    for (var key in params) this[key] = params[key];\n\n    this.links = {};\n\n    // links\n    try {\n        if (header.link) {\n            this.links = utils.parseLinks(header.link);\n        }\n    } catch (err) {\n        // ignore\n    }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function(status){\n    var type = status / 100 | 0;\n\n    // status / class\n    this.status = this.statusCode = status;\n    this.statusType = type;\n\n    // basics\n    this.info = 1 == type;\n    this.ok = 2 == type;\n    this.redirect = 3 == type;\n    this.clientError = 4 == type;\n    this.serverError = 5 == type;\n    this.error = (4 == type || 5 == type)\n        ? this.toError()\n        : false;\n\n    // sugar\n    this.accepted = 202 == status;\n    this.noContent = 204 == status;\n    this.badRequest = 400 == status;\n    this.unauthorized = 401 == status;\n    this.notAcceptable = 406 == status;\n    this.forbidden = 403 == status;\n    this.notFound = 404 == status;\n};\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports) {\n\nvar ERROR_CODES = [\n  'ECONNRESET',\n  'ETIMEDOUT',\n  'EADDRINFO',\n  'ESOCKETTIMEDOUT'\n];\n\n/**\n * Determine if a request should be retried.\n * (Borrowed from segmentio/superagent-retry)\n *\n * @param {Error} err\n * @param {Response} [res]\n * @returns {Boolean}\n */\nmodule.exports = function shouldRetry(err, res) {\n  if (err && err.code && ~ERROR_CODES.indexOf(err.code)) return true;\n  if (res && res.status && res.status >= 500) return true;\n  // Superagent timeout\n  if (err && 'timeout' in err && err.code == 'ECONNABORTED') return true;\n  if (err && 'crossDomain' in err) return true;\n  return false;\n};\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports) {\n\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = function(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = function(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */);\n    var key = parts.shift();\n    var val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = function(str){\n  return str.split(/ *, */).reduce(function(obj, str){\n    var parts = str.split(/ *; */);\n    var url = parts[0].slice(1, -1);\n    var rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    obj[rel] = url;\n    return obj;\n  }, {});\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = function(header, shouldStripCookie){\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header['host'];\n  if (shouldStripCookie) {\n    delete header['cookie'];\n  }\n  return header;\n};\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(11);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// library.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 91);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 07184a1730f8bd1629aa","var Rx = require('rx-lite');\r\nvar config = require('./config');\r\nvar socketOpen = new Rx.BehaviorSubject(false);\r\nvar userData = new Rx.BehaviorSubject({});\r\nvar session = new Rx.BehaviorSubject({initial:true});\r\nvar prodPair = new Rx.BehaviorSubject(localStorage.SessionPair || config.prodPair)\r\nvar orderBook = new Rx.BehaviorSubject({})\r\nvar tickerBook = new Rx.BehaviorSubject([])\r\nvar tickerData = new Rx.BehaviorSubject({})\r\nvar prodProduct = new Rx.BehaviorSubject(1);\r\nvar language = new Rx.BehaviorSubject({});\r\nvar logoutV2 = new Rx.BehaviorSubject({});\r\nvar loginStatusRedirect = new Rx.BehaviorSubject(false);\r\nvar instrumentChange = new Rx.BehaviorSubject(1);\r\nvar synched = new Rx.BehaviorSubject(false);\r\n\r\nvar logs = {\r\n  socketOpen:socketOpen,\r\n  userData: userData,\r\n  session:session,\r\n  language: language,\r\n  prodPair:prodPair,\r\n  prodProduct:prodProduct,\r\n  orderBook :orderBook,\r\n  tickerBook :tickerBook,\r\n  tickerData: tickerData,\r\n  logoutV2 :logoutV2,\r\n  loginStatusRedirect:loginStatusRedirect,\r\n  instrumentChange: instrumentChange,\r\n  synched:synched,\r\n};\r\n\r\nmodule.exports = logs;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/logs.js","var config = global.APConfig || {};\n\nvar exchange = {};\nif (config.exchange) exchange = config.exchange;\n\nvar defaultConfig = {\n  displayBalancesHeaders: config.displayBalancesHeaders || false,\n  noBalanceFilter: config.noBalanceFilter || false,\n  BalanceHover: config.BalanceHover || true,\n  showDepositBankDetails: config.showDepositBankDetails || false,\n  depositFileUpload: config.depositFileUpload || false,\n  nonFavIconSpinner: config.nonFavIconSpinner || false, //used by CoinDirect when there is no fav icons used\n  showWidgetPageNumbers: config.showWidgetPageNumbers || true,\n  showTermsandConditions: config.showTermsandConditions || true,\n  registerFormModal: config.registerFormModal || true,\n\n  siteName: config.siteName || '',\n  templateStyle: config.templateStyle || '',\n  clefLogin: config.clefLogin || '',\n  useClef: config.useClef || false,\n  clefFix: config.clefFix || false,\n  clefRedirectURL: config.clefRedirectURL || '',\n  companyName: config.companyName || 'Alitin',\n  companyCopyright: config.companyCopyright || 'Bitcoin Co', // company copyright text\n  kycURL_NetVerify_SingleDocument: config.kycURL_NetVerify_SingleDocument || '',\n  loginRedirect: config.loginRedirect || '',\n  apiKeysLevel: config.apiKeysLevel || 0,\n  withdrawLevel: config.withdrawLevel || 0,\n  debugging: config.debugging || false,\n  kycType:  config.kycType || 'Identity Mind',\n  kycClientId:  config.kycClientId || '',\n  kycURL:  config.kycURL || 'http://dev-validation.alphapoint.com/api/im/ValidateUserRegistration_v2',\n\n  API_V2_URL:  config.API_V2_URL || 'ws://206.72.204.48:8086/WSGateway/',\n  OperatorId: config.OperatorId || 1,\n  prodPair:  config.prodPair || 'BTCUSD',\n  decimalPlaces: config.decimalPlaces || 4 ,\n  growlwerPosition: config.growlwerPosition || 'left',\n  growlwerDelay: config.growlwerDelay || 4000,\n\n  authy2FA: config.authy2FA, // enable authentication using 2FA\n  authGoogle: config.authGoogle, // enable authentication using Google\n\n  defaultLanguage: config.defaultLanguage || 'en',\n  languagesLocation: config.languagesLocation || 'dist/lang',\n\n  api_version: exchange.app_version || config.api_version || 'v1',\n  use_sim: exchange.use_sim || config.use_sim,\n\n  app_url_sim: exchange.app_url_sim ||'https://sim3.alphapoint.com:8400/ajax',\n  ws_url_sim: exchange.ws_url_sim ||'wss://sim3.alphapoint.com:8401',\n\n  app_url: exchange.app_url || config.app_url || 'https://sim3.alphapoint.com:8400/ajax',\n  ws_url: exchange.ws_url || config.ws_url || 'wss://sim3.alphapoint.com:8401',\n  ws_apis: [\n    'GetTicker',\n    'GetL2AndTrades',\n    'GetAccountInfo',\n    'GetAccountActions',\n  ],\n  ws: {},\n  http: {},\n\n  chart: config.chart || {},\n  charting_url: exchange.charting_url || config.charting_url || 'wss://dev2.alphapoint.com:8402/v1/GetRealTime/',\n  charting_library: config.charting_library || 'libs/charting_library_new/',\n\n  deposit: config.deposit || {\n    types: {\n      bitcoin: 1,\n      usd: 2,\n      eur: 3,\n      pm: 4\n    },\n    items: [\n      {\n        type: 1,\n        title: 'Digital Currency',\n      }, {\n        type: 2,\n        title: 'USD - United States Dollars',\n        instrument: 'USD',\n      }, {\n        type: 3,\n        title: 'EUR - Euro',\n        instrument: 'EUR',\n      }, {\n        type: 4,\n        title: 'Perfect Money',\n        parameters: { // Perfect Money parameters\n          currencies: [\n            {\n              title: 'USD',\n              account: 'XX'\n            }, {\n              title: 'EUR',\n              account: 'XX'\n            }\n          ],\n          payeeName: 'Alitin Exchange', // payee name\n        }\n      }\n    ]\n  },\n  withdraw: config.withdraw || {\n    types: {\n      fiat: 1,\n      digital: 2,\n      perfectMoney: 3\n    },\n    items: [\n      {\n        type: 2,\n        title: 'BTC - BitCoin',\n        instrument: 'BTC',\n      }, {\n        type: 2,\n        title: 'LTC - LiteCoin',\n        instrument: 'LTC',\n      }, {\n        type: 2,\n        title: 'PPC',\n        instrument: 'PPC',\n      }, {\n        type: 2,\n        title: 'NMC',\n        instrument: 'NMC',\n      }, {\n        type: 1,\n        title: 'EUR - Euro',\n        instrument: 'EUR',\n      }, {\n        type: 2,\n        title: 'CNY',\n        instrument: 'CNY',\n      }, {\n        type: 1,\n        title: 'USD - United States Dollar',\n        instrument: 'USD',\n      }, {\n        type: 3,\n        title: 'Perfect Money',\n      }\n    ]\n  }\n};\n\nfunction method_url(methodName) {\n  return (this.use_sim ? this.app_url_sim : this.app_url) + '/' + this.api_version + '/' + methodName;\n}\n\nfunction ws_method_url(methodName) {\n  return (this.use_sim ? this.ws_url_sim : this.ws_url) + '/' + this.api_version + '/' + methodName + '/';\n}\n\ndefaultConfig.ws_apis.forEach(function(url) {\n  defaultConfig.ws[url] = ws_method_url.call(defaultConfig, url);\n});\n\nfor (var field in defaultConfig) {\n  config[field] = defaultConfig[field];\n}\n\nmodule.exports = config;\n\n\n\n// WEBPACK FOOTER //\n// ./src/config.js","// Copyright (c) Microsoft, All rights reserved. See License.txt in the project root for license information.\n\n;(function (undefined) {\n\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  function checkGlobal(value) {\n    return (value && value.Object === Object) ? value : null;\n  }\n\n  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType) ? exports : null;\n  var freeModule = (objectTypes[typeof module] && module && !module.nodeType) ? module : null;\n  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global === 'object' && global);\n  var freeSelf = checkGlobal(objectTypes[typeof self] && self);\n  var freeWindow = checkGlobal(objectTypes[typeof window] && window);\n  var moduleExports = (freeModule && freeModule.exports === freeExports) ? freeExports : null;\n  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n  var root = freeGlobal || ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) || freeSelf || thisGlobal || Function('return this')();\n\n  var Rx = {\n    internals: {},\n    config: {\n      Promise: root.Promise\n    },\n    helpers: { }\n  };\n\n  // Defaults\n  var noop = Rx.helpers.noop = function () { },\n    identity = Rx.helpers.identity = function (x) { return x; },\n    defaultNow = Rx.helpers.defaultNow = Date.now,\n    defaultComparer = Rx.helpers.defaultComparer = function (x, y) { return isEqual(x, y); },\n    defaultSubComparer = Rx.helpers.defaultSubComparer = function (x, y) { return x > y ? 1 : (x < y ? -1 : 0); },\n    defaultKeySerializer = Rx.helpers.defaultKeySerializer = function (x) { return x.toString(); },\n    defaultError = Rx.helpers.defaultError = function (err) { throw err; },\n    isPromise = Rx.helpers.isPromise = function (p) { return !!p && typeof p.subscribe !== 'function' && typeof p.then === 'function'; },\n    isFunction = Rx.helpers.isFunction = (function () {\n\n      var isFn = function (value) {\n        return typeof value == 'function' || false;\n      };\n\n      // fallback for older versions of Chrome and Safari\n      if (isFn(/x/)) {\n        isFn = function(value) {\n          return typeof value == 'function' && toString.call(value) == '[object Function]';\n        };\n      }\n\n      return isFn;\n    }());\n\n    function cloneArray(arr) {\n      var len = arr.length, a = new Array(len);\n      for(var i = 0; i < len; i++) { a[i] = arr[i]; }\n      return a;\n    }\n\n  var errorObj = {e: {}};\n  \n  function tryCatcherGen(tryCatchTarget) {\n    return function tryCatcher() {\n      try {\n        return tryCatchTarget.apply(this, arguments);\n      } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n      }\n    };\n  }\n\n  var tryCatch = Rx.internals.tryCatch = function tryCatch(fn) {\n    if (!isFunction(fn)) { throw new TypeError('fn must be a function'); }\n    return tryCatcherGen(fn);\n  };\n\n  function thrower(e) {\n    throw e;\n  }\n\n  Rx.config.longStackSupport = false;\n  var hasStacks = false, stacks = tryCatch(function () { throw new Error(); })();\n  hasStacks = !!stacks.e && !!stacks.e.stack;\n\n  // All code after this point will be filtered from stack traces reported by RxJS\n  var rStartingLine = captureLine(), rFileName;\n\n  var STACK_JUMP_SEPARATOR = 'From previous event:';\n\n  function makeStackTraceLong(error, observable) {\n    // If possible, transform the error stack trace by removing Node and RxJS\n    // cruft, then concatenating with the stack trace of `observable`.\n    if (hasStacks &&\n        observable.stack &&\n        typeof error === 'object' &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n      var stacks = [];\n      for (var o = observable; !!o; o = o.source) {\n        if (o.stack) {\n          stacks.unshift(o.stack);\n        }\n      }\n      stacks.unshift(error.stack);\n\n      var concatedStacks = stacks.join('\\n' + STACK_JUMP_SEPARATOR + '\\n');\n      error.stack = filterStackString(concatedStacks);\n    }\n  }\n\n  function filterStackString(stackString) {\n    var lines = stackString.split('\\n'), desiredLines = [];\n    for (var i = 0, len = lines.length; i < len; i++) {\n      var line = lines[i];\n\n      if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n        desiredLines.push(line);\n      }\n    }\n    return desiredLines.join('\\n');\n  }\n\n  function isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n    if (!fileNameAndLineNumber) {\n      return false;\n    }\n    var fileName = fileNameAndLineNumber[0], lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === rFileName &&\n      lineNumber >= rStartingLine &&\n      lineNumber <= rEndingLine;\n  }\n\n  function isNodeFrame(stackLine) {\n    return stackLine.indexOf('(module.js:') !== -1 ||\n      stackLine.indexOf('(node.js:') !== -1;\n  }\n\n  function captureLine() {\n    if (!hasStacks) { return; }\n\n    try {\n      throw new Error();\n    } catch (e) {\n      var lines = e.stack.split('\\n');\n      var firstLine = lines[0].indexOf('@') > 0 ? lines[1] : lines[2];\n      var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n      if (!fileNameAndLineNumber) { return; }\n\n      rFileName = fileNameAndLineNumber[0];\n      return fileNameAndLineNumber[1];\n    }\n  }\n\n  function getFileNameAndLineNumber(stackLine) {\n    // Named functions: 'at functionName (filename:lineNumber:columnNumber)'\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) { return [attempt1[1], Number(attempt1[2])]; }\n\n    // Anonymous functions: 'at filename:lineNumber:columnNumber'\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) { return [attempt2[1], Number(attempt2[2])]; }\n\n    // Firefox style: 'function@filename:lineNumber or @filename:lineNumber'\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) { return [attempt3[1], Number(attempt3[2])]; }\n  }\n\n  var EmptyError = Rx.EmptyError = function() {\n    this.message = 'Sequence contains no elements.';\n    Error.call(this);\n  };\n  EmptyError.prototype = Object.create(Error.prototype);\n  EmptyError.prototype.name = 'EmptyError';\n\n  var ObjectDisposedError = Rx.ObjectDisposedError = function() {\n    this.message = 'Object has been disposed';\n    Error.call(this);\n  };\n  ObjectDisposedError.prototype = Object.create(Error.prototype);\n  ObjectDisposedError.prototype.name = 'ObjectDisposedError';\n\n  var ArgumentOutOfRangeError = Rx.ArgumentOutOfRangeError = function () {\n    this.message = 'Argument out of range';\n    Error.call(this);\n  };\n  ArgumentOutOfRangeError.prototype = Object.create(Error.prototype);\n  ArgumentOutOfRangeError.prototype.name = 'ArgumentOutOfRangeError';\n\n  var NotSupportedError = Rx.NotSupportedError = function (message) {\n    this.message = message || 'This operation is not supported';\n    Error.call(this);\n  };\n  NotSupportedError.prototype = Object.create(Error.prototype);\n  NotSupportedError.prototype.name = 'NotSupportedError';\n\n  var NotImplementedError = Rx.NotImplementedError = function (message) {\n    this.message = message || 'This operation is not implemented';\n    Error.call(this);\n  };\n  NotImplementedError.prototype = Object.create(Error.prototype);\n  NotImplementedError.prototype.name = 'NotImplementedError';\n\n  var notImplemented = Rx.helpers.notImplemented = function () {\n    throw new NotImplementedError();\n  };\n\n  var notSupported = Rx.helpers.notSupported = function () {\n    throw new NotSupportedError();\n  };\n\n  // Shim in iterator support\n  var $iterator$ = (typeof Symbol === 'function' && Symbol.iterator) ||\n    '_es6shim_iterator_';\n  // Bug for mozilla version\n  if (root.Set && typeof new root.Set()['@@iterator'] === 'function') {\n    $iterator$ = '@@iterator';\n  }\n\n  var doneEnumerator = Rx.doneEnumerator = { done: true, value: undefined };\n\n  var isIterable = Rx.helpers.isIterable = function (o) {\n    return o && o[$iterator$] !== undefined;\n  };\n\n  var isArrayLike = Rx.helpers.isArrayLike = function (o) {\n    return o && o.length !== undefined;\n  };\n\n  Rx.helpers.iterator = $iterator$;\n\n  var bindCallback = Rx.internals.bindCallback = function (func, thisArg, argCount) {\n    if (typeof thisArg === 'undefined') { return func; }\n    switch(argCount) {\n      case 0:\n        return function() {\n          return func.call(thisArg)\n        };\n      case 1:\n        return function(arg) {\n          return func.call(thisArg, arg);\n        };\n      case 2:\n        return function(value, index) {\n          return func.call(thisArg, value, index);\n        };\n      case 3:\n        return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n    }\n\n    return function() {\n      return func.apply(thisArg, arguments);\n    };\n  };\n\n  /** Used to determine if values are of the language type Object */\n  var dontEnums = ['toString',\n    'toLocaleString',\n    'valueOf',\n    'hasOwnProperty',\n    'isPrototypeOf',\n    'propertyIsEnumerable',\n    'constructor'],\n  dontEnumsLength = dontEnums.length;\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\nvar objectProto = Object.prototype,\n    hasOwnProperty = objectProto.hasOwnProperty,\n    objToString = objectProto.toString,\n    MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\nvar keys = Object.keys || (function() {\n    var hasOwnProperty = Object.prototype.hasOwnProperty,\n        hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\n        dontEnums = [\n          'toString',\n          'toLocaleString',\n          'valueOf',\n          'hasOwnProperty',\n          'isPrototypeOf',\n          'propertyIsEnumerable',\n          'constructor'\n        ],\n        dontEnumsLength = dontEnums.length;\n\n    return function(obj) {\n      if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n        throw new TypeError('Object.keys called on non-object');\n      }\n\n      var result = [], prop, i;\n\n      for (prop in obj) {\n        if (hasOwnProperty.call(obj, prop)) {\n          result.push(prop);\n        }\n      }\n\n      if (hasDontEnumBug) {\n        for (i = 0; i < dontEnumsLength; i++) {\n          if (hasOwnProperty.call(obj, dontEnums[i])) {\n            result.push(dontEnums[i]);\n          }\n        }\n      }\n      return result;\n    };\n  }());\n\nfunction equalObjects(object, other, equalFunc, isLoose, stackA, stackB) {\n  var objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength !== othLength && !isLoose) {\n    return false;\n  }\n  var index = objLength, key;\n  while (index--) {\n    key = objProps[index];\n    if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  var skipCtor = isLoose;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key],\n        result;\n\n    if (!(result === undefined ? equalFunc(objValue, othValue, isLoose, stackA, stackB) : result)) {\n      return false;\n    }\n    skipCtor || (skipCtor = key === 'constructor');\n  }\n  if (!skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    if (objCtor !== othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor === 'function' && objCtor instanceof objCtor &&\n          typeof othCtor === 'function' && othCtor instanceof othCtor)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction equalByTag(object, other, tag) {\n  switch (tag) {\n    case boolTag:\n    case dateTag:\n      return +object === +other;\n\n    case errorTag:\n      return object.name === other.name && object.message === other.message;\n\n    case numberTag:\n      return (object !== +object) ?\n        other !== +other :\n        object === +other;\n\n    case regexpTag:\n    case stringTag:\n      return object === (other + '');\n  }\n  return false;\n}\n\nvar isObject = Rx.internals.isObject = function(value) {\n  var type = typeof value;\n  return !!value && (type === 'object' || type === 'function');\n};\n\nfunction isObjectLike(value) {\n  return !!value && typeof value === 'object';\n}\n\nfunction isLength(value) {\n  return typeof value === 'number' && value > -1 && value % 1 === 0 && value <= MAX_SAFE_INTEGER;\n}\n\nvar isHostObject = (function() {\n  try {\n    Object({ 'toString': 0 } + '');\n  } catch(e) {\n    return function() { return false; };\n  }\n  return function(value) {\n    return typeof value.toString !== 'function' && typeof (value + '') === 'string';\n  };\n}());\n\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n}\n\nvar isArray = Array.isArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) === arrayTag;\n};\n\nfunction arraySome (array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction equalArrays(array, other, equalFunc, isLoose, stackA, stackB) {\n  var index = -1,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength !== othLength && !(isLoose && othLength > arrLength)) {\n    return false;\n  }\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index],\n        result;\n\n    if (result !== undefined) {\n      if (result) {\n        continue;\n      }\n      return false;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (isLoose) {\n      if (!arraySome(other, function(othValue) {\n            return arrValue === othValue || equalFunc(arrValue, othValue, isLoose, stackA, stackB);\n          })) {\n        return false;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, isLoose, stackA, stackB))) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction baseIsEqualDeep(object, other, equalFunc, isLoose, stackA, stackB) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = objToString.call(object);\n    if (objTag === argsTag) {\n      objTag = objectTag;\n    } else if (objTag !== objectTag) {\n      objIsArr = isTypedArray(object);\n    }\n  }\n  if (!othIsArr) {\n    othTag = objToString.call(other);\n    if (othTag === argsTag) {\n      othTag = objectTag;\n    }\n  }\n  var objIsObj = objTag === objectTag && !isHostObject(object),\n      othIsObj = othTag === objectTag && !isHostObject(other),\n      isSameTag = objTag === othTag;\n\n  if (isSameTag && !(objIsArr || objIsObj)) {\n    return equalByTag(object, other, objTag);\n  }\n  if (!isLoose) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, isLoose, stackA, stackB);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  // For more information on detecting circular references see https://es5.github.io/#JO.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] === object) {\n      return stackB[length] === other;\n    }\n  }\n  // Add `object` and `other` to the stack of traversed objects.\n  stackA.push(object);\n  stackB.push(other);\n\n  var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, isLoose, stackA, stackB);\n\n  stackA.pop();\n  stackB.pop();\n\n  return result;\n}\n\nfunction baseIsEqual(value, other, isLoose, stackA, stackB) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, isLoose, stackA, stackB);\n}\n\nvar isEqual = Rx.internals.isEqual = function (value, other) {\n  return baseIsEqual(value, other);\n};\n\n  var hasProp = {}.hasOwnProperty,\n      slice = Array.prototype.slice;\n\n  var inherits = Rx.internals.inherits = function (child, parent) {\n    function __() { this.constructor = child; }\n    __.prototype = parent.prototype;\n    child.prototype = new __();\n  };\n\n  var addProperties = Rx.internals.addProperties = function (obj) {\n    for(var sources = [], i = 1, len = arguments.length; i < len; i++) { sources.push(arguments[i]); }\n    for (var idx = 0, ln = sources.length; idx < ln; idx++) {\n      var source = sources[idx];\n      for (var prop in source) {\n        obj[prop] = source[prop];\n      }\n    }\n  };\n\n  // Rx Utils\n  var addRef = Rx.internals.addRef = function (xs, r) {\n    return new AnonymousObservable(function (observer) {\n      return new BinaryDisposable(r.getDisposable(), xs.subscribe(observer));\n    });\n  };\n\n  function arrayInitialize(count, factory) {\n    var a = new Array(count);\n    for (var i = 0; i < count; i++) {\n      a[i] = factory();\n    }\n    return a;\n  }\n\n  /**\n   * Represents a group of disposable resources that are disposed together.\n   * @constructor\n   */\n  var CompositeDisposable = Rx.CompositeDisposable = function () {\n    var args = [], i, len;\n    if (Array.isArray(arguments[0])) {\n      args = arguments[0];\n    } else {\n      len = arguments.length;\n      args = new Array(len);\n      for(i = 0; i < len; i++) { args[i] = arguments[i]; }\n    }\n    this.disposables = args;\n    this.isDisposed = false;\n    this.length = args.length;\n  };\n\n  var CompositeDisposablePrototype = CompositeDisposable.prototype;\n\n  /**\n   * Adds a disposable to the CompositeDisposable or disposes the disposable if the CompositeDisposable is disposed.\n   * @param {Mixed} item Disposable to add.\n   */\n  CompositeDisposablePrototype.add = function (item) {\n    if (this.isDisposed) {\n      item.dispose();\n    } else {\n      this.disposables.push(item);\n      this.length++;\n    }\n  };\n\n  /**\n   * Removes and disposes the first occurrence of a disposable from the CompositeDisposable.\n   * @param {Mixed} item Disposable to remove.\n   * @returns {Boolean} true if found; false otherwise.\n   */\n  CompositeDisposablePrototype.remove = function (item) {\n    var shouldDispose = false;\n    if (!this.isDisposed) {\n      var idx = this.disposables.indexOf(item);\n      if (idx !== -1) {\n        shouldDispose = true;\n        this.disposables.splice(idx, 1);\n        this.length--;\n        item.dispose();\n      }\n    }\n    return shouldDispose;\n  };\n\n  /**\n   *  Disposes all disposables in the group and removes them from the group.\n   */\n  CompositeDisposablePrototype.dispose = function () {\n    if (!this.isDisposed) {\n      this.isDisposed = true;\n      var len = this.disposables.length, currentDisposables = new Array(len);\n      for(var i = 0; i < len; i++) { currentDisposables[i] = this.disposables[i]; }\n      this.disposables = [];\n      this.length = 0;\n\n      for (i = 0; i < len; i++) {\n        currentDisposables[i].dispose();\n      }\n    }\n  };\n\n  /**\n   * Provides a set of static methods for creating Disposables.\n   * @param {Function} dispose Action to run during the first call to dispose. The action is guaranteed to be run at most once.\n   */\n  var Disposable = Rx.Disposable = function (action) {\n    this.isDisposed = false;\n    this.action = action || noop;\n  };\n\n  /** Performs the task of cleaning up resources. */\n  Disposable.prototype.dispose = function () {\n    if (!this.isDisposed) {\n      this.action();\n      this.isDisposed = true;\n    }\n  };\n\n  /**\n   * Creates a disposable object that invokes the specified action when disposed.\n   * @param {Function} dispose Action to run during the first call to dispose. The action is guaranteed to be run at most once.\n   * @return {Disposable} The disposable object that runs the given action upon disposal.\n   */\n  var disposableCreate = Disposable.create = function (action) { return new Disposable(action); };\n\n  /**\n   * Gets the disposable that does nothing when disposed.\n   */\n  var disposableEmpty = Disposable.empty = { dispose: noop };\n\n  /**\n   * Validates whether the given object is a disposable\n   * @param {Object} Object to test whether it has a dispose method\n   * @returns {Boolean} true if a disposable object, else false.\n   */\n  var isDisposable = Disposable.isDisposable = function (d) {\n    return d && isFunction(d.dispose);\n  };\n\n  var checkDisposed = Disposable.checkDisposed = function (disposable) {\n    if (disposable.isDisposed) { throw new ObjectDisposedError(); }\n  };\n\n  var disposableFixup = Disposable._fixup = function (result) {\n    return isDisposable(result) ? result : disposableEmpty;\n  };\n\n  // Single assignment\n  var SingleAssignmentDisposable = Rx.SingleAssignmentDisposable = function () {\n    this.isDisposed = false;\n    this.current = null;\n  };\n  SingleAssignmentDisposable.prototype.getDisposable = function () {\n    return this.current;\n  };\n  SingleAssignmentDisposable.prototype.setDisposable = function (value) {\n    if (this.current) { throw new Error('Disposable has already been assigned'); }\n    var shouldDispose = this.isDisposed;\n    !shouldDispose && (this.current = value);\n    shouldDispose && value && value.dispose();\n  };\n  SingleAssignmentDisposable.prototype.dispose = function () {\n    if (!this.isDisposed) {\n      this.isDisposed = true;\n      var old = this.current;\n      this.current = null;\n      old && old.dispose();\n    }\n  };\n\n  // Multiple assignment disposable\n  var SerialDisposable = Rx.SerialDisposable = function () {\n    this.isDisposed = false;\n    this.current = null;\n  };\n  SerialDisposable.prototype.getDisposable = function () {\n    return this.current;\n  };\n  SerialDisposable.prototype.setDisposable = function (value) {\n    var shouldDispose = this.isDisposed;\n    if (!shouldDispose) {\n      var old = this.current;\n      this.current = value;\n    }\n    old && old.dispose();\n    shouldDispose && value && value.dispose();\n  };\n  SerialDisposable.prototype.dispose = function () {\n    if (!this.isDisposed) {\n      this.isDisposed = true;\n      var old = this.current;\n      this.current = null;\n    }\n    old && old.dispose();\n  };\n\n  var BinaryDisposable = Rx.BinaryDisposable = function (first, second) {\n    this._first = first;\n    this._second = second;\n    this.isDisposed = false;\n  };\n\n  BinaryDisposable.prototype.dispose = function () {\n    if (!this.isDisposed) {\n      this.isDisposed = true;\n      var old1 = this._first;\n      this._first = null;\n      old1 && old1.dispose();\n      var old2 = this._second;\n      this._second = null;\n      old2 && old2.dispose();\n    }\n  };\n\n  var NAryDisposable = Rx.NAryDisposable = function (disposables) {\n    this._disposables = disposables;\n    this.isDisposed = false;\n  };\n\n  NAryDisposable.prototype.dispose = function () {\n    if (!this.isDisposed) {\n      this.isDisposed = true;\n      for (var i = 0, len = this._disposables.length; i < len; i++) {\n        this._disposables[i].dispose();\n      }\n      this._disposables.length = 0;\n    }\n  };\n\n  /**\n   * Represents a disposable resource that only disposes its underlying disposable resource when all dependent disposable objects have been disposed.\n   */\n  var RefCountDisposable = Rx.RefCountDisposable = (function () {\n\n    function InnerDisposable(disposable) {\n      this.disposable = disposable;\n      this.disposable.count++;\n      this.isInnerDisposed = false;\n    }\n\n    InnerDisposable.prototype.dispose = function () {\n      if (!this.disposable.isDisposed && !this.isInnerDisposed) {\n        this.isInnerDisposed = true;\n        this.disposable.count--;\n        if (this.disposable.count === 0 && this.disposable.isPrimaryDisposed) {\n          this.disposable.isDisposed = true;\n          this.disposable.underlyingDisposable.dispose();\n        }\n      }\n    };\n\n    /**\n     * Initializes a new instance of the RefCountDisposable with the specified disposable.\n     * @constructor\n     * @param {Disposable} disposable Underlying disposable.\n      */\n    function RefCountDisposable(disposable) {\n      this.underlyingDisposable = disposable;\n      this.isDisposed = false;\n      this.isPrimaryDisposed = false;\n      this.count = 0;\n    }\n\n    /**\n     * Disposes the underlying disposable only when all dependent disposables have been disposed\n     */\n    RefCountDisposable.prototype.dispose = function () {\n      if (!this.isDisposed && !this.isPrimaryDisposed) {\n        this.isPrimaryDisposed = true;\n        if (this.count === 0) {\n          this.isDisposed = true;\n          this.underlyingDisposable.dispose();\n        }\n      }\n    };\n\n    /**\n     * Returns a dependent disposable that when disposed decreases the refcount on the underlying disposable.\n     * @returns {Disposable} A dependent disposable contributing to the reference count that manages the underlying disposable's lifetime.\n     */\n    RefCountDisposable.prototype.getDisposable = function () {\n      return this.isDisposed ? disposableEmpty : new InnerDisposable(this);\n    };\n\n    return RefCountDisposable;\n  })();\n\n  var ScheduledItem = Rx.internals.ScheduledItem = function (scheduler, state, action, dueTime, comparer) {\n    this.scheduler = scheduler;\n    this.state = state;\n    this.action = action;\n    this.dueTime = dueTime;\n    this.comparer = comparer || defaultSubComparer;\n    this.disposable = new SingleAssignmentDisposable();\n  };\n\n  ScheduledItem.prototype.invoke = function () {\n    this.disposable.setDisposable(this.invokeCore());\n  };\n\n  ScheduledItem.prototype.compareTo = function (other) {\n    return this.comparer(this.dueTime, other.dueTime);\n  };\n\n  ScheduledItem.prototype.isCancelled = function () {\n    return this.disposable.isDisposed;\n  };\n\n  ScheduledItem.prototype.invokeCore = function () {\n    return disposableFixup(this.action(this.scheduler, this.state));\n  };\n\n  /** Provides a set of static properties to access commonly used schedulers. */\n  var Scheduler = Rx.Scheduler = (function () {\n\n    function Scheduler() { }\n\n    /** Determines whether the given object is a scheduler */\n    Scheduler.isScheduler = function (s) {\n      return s instanceof Scheduler;\n    };\n\n    var schedulerProto = Scheduler.prototype;\n\n    /**\n   * Schedules an action to be executed.\n   * @param state State passed to the action to be executed.\n   * @param {Function} action Action to be executed.\n   * @returns {Disposable} The disposable object used to cancel the scheduled action (best effort).\n   */\n    schedulerProto.schedule = function (state, action) {\n      throw new NotImplementedError();\n    };\n\n  /**\n   * Schedules an action to be executed after dueTime.\n   * @param state State passed to the action to be executed.\n   * @param {Function} action Action to be executed.\n   * @param {Number} dueTime Relative time after which to execute the action.\n   * @returns {Disposable} The disposable object used to cancel the scheduled action (best effort).\n   */\n    schedulerProto.scheduleFuture = function (state, dueTime, action) {\n      var dt = dueTime;\n      dt instanceof Date && (dt = dt - this.now());\n      dt = Scheduler.normalize(dt);\n\n      if (dt === 0) { return this.schedule(state, action); }\n\n      return this._scheduleFuture(state, dt, action);\n    };\n\n    schedulerProto._scheduleFuture = function (state, dueTime, action) {\n      throw new NotImplementedError();\n    };\n\n    /** Gets the current time according to the local machine's system clock. */\n    Scheduler.now = defaultNow;\n\n    /** Gets the current time according to the local machine's system clock. */\n    Scheduler.prototype.now = defaultNow;\n\n    /**\n     * Normalizes the specified TimeSpan value to a positive value.\n     * @param {Number} timeSpan The time span value to normalize.\n     * @returns {Number} The specified TimeSpan value if it is zero or positive; otherwise, 0\n     */\n    Scheduler.normalize = function (timeSpan) {\n      timeSpan < 0 && (timeSpan = 0);\n      return timeSpan;\n    };\n\n    return Scheduler;\n  }());\n\n  var normalizeTime = Scheduler.normalize, isScheduler = Scheduler.isScheduler;\n\n  (function (schedulerProto) {\n\n    function invokeRecImmediate(scheduler, pair) {\n      var state = pair[0], action = pair[1], group = new CompositeDisposable();\n      action(state, innerAction);\n      return group;\n\n      function innerAction(state2) {\n        var isAdded = false, isDone = false;\n\n        var d = scheduler.schedule(state2, scheduleWork);\n        if (!isDone) {\n          group.add(d);\n          isAdded = true;\n        }\n\n        function scheduleWork(_, state3) {\n          if (isAdded) {\n            group.remove(d);\n          } else {\n            isDone = true;\n          }\n          action(state3, innerAction);\n          return disposableEmpty;\n        }\n      }\n    }\n\n    function invokeRecDate(scheduler, pair) {\n      var state = pair[0], action = pair[1], group = new CompositeDisposable();\n      action(state, innerAction);\n      return group;\n\n      function innerAction(state2, dueTime1) {\n        var isAdded = false, isDone = false;\n\n        var d = scheduler.scheduleFuture(state2, dueTime1, scheduleWork);\n        if (!isDone) {\n          group.add(d);\n          isAdded = true;\n        }\n\n        function scheduleWork(_, state3) {\n          if (isAdded) {\n            group.remove(d);\n          } else {\n            isDone = true;\n          }\n          action(state3, innerAction);\n          return disposableEmpty;\n        }\n      }\n    }\n\n    /**\n     * Schedules an action to be executed recursively.\n     * @param {Mixed} state State passed to the action to be executed.\n     * @param {Function} action Action to execute recursively. The last parameter passed to the action is used to trigger recursive scheduling of the action, passing in recursive invocation state.\n     * @returns {Disposable} The disposable object used to cancel the scheduled action (best effort).\n     */\n    schedulerProto.scheduleRecursive = function (state, action) {\n      return this.schedule([state, action], invokeRecImmediate);\n    };\n\n    /**\n     * Schedules an action to be executed recursively after a specified relative or absolute due time.\n     * @param {Mixed} state State passed to the action to be executed.\n     * @param {Function} action Action to execute recursively. The last parameter passed to the action is used to trigger recursive scheduling of the action, passing in the recursive due time and invocation state.\n     * @param {Number | Date} dueTime Relative or absolute time after which to execute the action for the first time.\n     * @returns {Disposable} The disposable object used to cancel the scheduled action (best effort).\n     */\n    schedulerProto.scheduleRecursiveFuture = function (state, dueTime, action) {\n      return this.scheduleFuture([state, action], dueTime, invokeRecDate);\n    };\n\n  }(Scheduler.prototype));\n\n  (function (schedulerProto) {\n\n    /**\n     * Schedules a periodic piece of work by dynamically discovering the scheduler's capabilities. The periodic task will be scheduled using window.setInterval for the base implementation.\n     * @param {Mixed} state Initial state passed to the action upon the first iteration.\n     * @param {Number} period Period for running the work periodically.\n     * @param {Function} action Action to be executed, potentially updating the state.\n     * @returns {Disposable} The disposable object used to cancel the scheduled recurring action (best effort).\n     */\n    schedulerProto.schedulePeriodic = function(state, period, action) {\n      if (typeof root.setInterval === 'undefined') { throw new NotSupportedError(); }\n      period = normalizeTime(period);\n      var s = state, id = root.setInterval(function () { s = action(s); }, period);\n      return disposableCreate(function () { root.clearInterval(id); });\n    };\n\n  }(Scheduler.prototype));\n\n  /** Gets a scheduler that schedules work immediately on the current thread. */\n   var ImmediateScheduler = (function (__super__) {\n    inherits(ImmediateScheduler, __super__);\n    function ImmediateScheduler() {\n      __super__.call(this);\n    }\n\n    ImmediateScheduler.prototype.schedule = function (state, action) {\n      return disposableFixup(action(this, state));\n    };\n\n    return ImmediateScheduler;\n  }(Scheduler));\n\n  var immediateScheduler = Scheduler.immediate = new ImmediateScheduler();\n\n  /**\n   * Gets a scheduler that schedules work as soon as possible on the current thread.\n   */\n  var CurrentThreadScheduler = (function (__super__) {\n    var queue;\n\n    function runTrampoline () {\n      while (queue.length > 0) {\n        var item = queue.dequeue();\n        !item.isCancelled() && item.invoke();\n      }\n    }\n\n    inherits(CurrentThreadScheduler, __super__);\n    function CurrentThreadScheduler() {\n      __super__.call(this);\n    }\n\n    CurrentThreadScheduler.prototype.schedule = function (state, action) {\n      var si = new ScheduledItem(this, state, action, this.now());\n\n      if (!queue) {\n        queue = new PriorityQueue(4);\n        queue.enqueue(si);\n\n        var result = tryCatch(runTrampoline)();\n        queue = null;\n        if (result === errorObj) { thrower(result.e); }\n      } else {\n        queue.enqueue(si);\n      }\n      return si.disposable;\n    };\n\n    CurrentThreadScheduler.prototype.scheduleRequired = function () { return !queue; };\n\n    return CurrentThreadScheduler;\n  }(Scheduler));\n\n  var currentThreadScheduler = Scheduler.currentThread = new CurrentThreadScheduler();\n\n  var SchedulePeriodicRecursive = Rx.internals.SchedulePeriodicRecursive = (function () {\n    function createTick(self) {\n      return function tick(command, recurse) {\n        recurse(0, self._period);\n        var state = tryCatch(self._action)(self._state);\n        if (state === errorObj) {\n          self._cancel.dispose();\n          thrower(state.e);\n        }\n        self._state = state;\n      };\n    }\n\n    function SchedulePeriodicRecursive(scheduler, state, period, action) {\n      this._scheduler = scheduler;\n      this._state = state;\n      this._period = period;\n      this._action = action;\n    }\n\n    SchedulePeriodicRecursive.prototype.start = function () {\n      var d = new SingleAssignmentDisposable();\n      this._cancel = d;\n      d.setDisposable(this._scheduler.scheduleRecursiveFuture(0, this._period, createTick(this)));\n\n      return d;\n    };\n\n    return SchedulePeriodicRecursive;\n  }());\n\n  var scheduleMethod, clearMethod;\n\n  var localTimer = (function () {\n    var localSetTimeout, localClearTimeout = noop;\n    if (!!root.setTimeout) {\n      localSetTimeout = root.setTimeout;\n      localClearTimeout = root.clearTimeout;\n    } else if (!!root.WScript) {\n      localSetTimeout = function (fn, time) {\n        root.WScript.Sleep(time);\n        fn();\n      };\n    } else {\n      throw new NotSupportedError();\n    }\n\n    return {\n      setTimeout: localSetTimeout,\n      clearTimeout: localClearTimeout\n    };\n  }());\n  var localSetTimeout = localTimer.setTimeout,\n    localClearTimeout = localTimer.clearTimeout;\n\n  (function () {\n\n    var nextHandle = 1, tasksByHandle = {}, currentlyRunning = false;\n\n    clearMethod = function (handle) {\n      delete tasksByHandle[handle];\n    };\n\n    function runTask(handle) {\n      if (currentlyRunning) {\n        localSetTimeout(function () { runTask(handle); }, 0);\n      } else {\n        var task = tasksByHandle[handle];\n        if (task) {\n          currentlyRunning = true;\n          var result = tryCatch(task)();\n          clearMethod(handle);\n          currentlyRunning = false;\n          if (result === errorObj) { thrower(result.e); }\n        }\n      }\n    }\n\n    var reNative = new RegExp('^' +\n      String(toString)\n        .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n        .replace(/toString| for [^\\]]+/g, '.*?') + '$'\n    );\n\n    var setImmediate = typeof (setImmediate = freeGlobal && moduleExports && freeGlobal.setImmediate) == 'function' &&\n      !reNative.test(setImmediate) && setImmediate;\n\n    function postMessageSupported () {\n      // Ensure not in a worker\n      if (!root.postMessage || root.importScripts) { return false; }\n      var isAsync = false, oldHandler = root.onmessage;\n      // Test for async\n      root.onmessage = function () { isAsync = true; };\n      root.postMessage('', '*');\n      root.onmessage = oldHandler;\n\n      return isAsync;\n    }\n\n    // Use in order, setImmediate, nextTick, postMessage, MessageChannel, script readystatechanged, setTimeout\n    if (isFunction(setImmediate)) {\n      scheduleMethod = function (action) {\n        var id = nextHandle++;\n        tasksByHandle[id] = action;\n        setImmediate(function () { runTask(id); });\n\n        return id;\n      };\n    } else if (typeof process !== 'undefined' && {}.toString.call(process) === '[object process]') {\n      scheduleMethod = function (action) {\n        var id = nextHandle++;\n        tasksByHandle[id] = action;\n        process.nextTick(function () { runTask(id); });\n\n        return id;\n      };\n    } else if (postMessageSupported()) {\n      var MSG_PREFIX = 'ms.rx.schedule' + Math.random();\n\n      var onGlobalPostMessage = function (event) {\n        // Only if we're a match to avoid any other global events\n        if (typeof event.data === 'string' && event.data.substring(0, MSG_PREFIX.length) === MSG_PREFIX) {\n          runTask(event.data.substring(MSG_PREFIX.length));\n        }\n      };\n\n      root.addEventListener('message', onGlobalPostMessage, false);\n\n      scheduleMethod = function (action) {\n        var id = nextHandle++;\n        tasksByHandle[id] = action;\n        root.postMessage(MSG_PREFIX + id, '*');\n        return id;\n      };\n    } else if (!!root.MessageChannel) {\n      var channel = new root.MessageChannel();\n\n      channel.port1.onmessage = function (e) { runTask(e.data); };\n\n      scheduleMethod = function (action) {\n        var id = nextHandle++;\n        tasksByHandle[id] = action;\n        channel.port2.postMessage(id);\n        return id;\n      };\n    } else if ('document' in root && 'onreadystatechange' in root.document.createElement('script')) {\n\n      scheduleMethod = function (action) {\n        var scriptElement = root.document.createElement('script');\n        var id = nextHandle++;\n        tasksByHandle[id] = action;\n\n        scriptElement.onreadystatechange = function () {\n          runTask(id);\n          scriptElement.onreadystatechange = null;\n          scriptElement.parentNode.removeChild(scriptElement);\n          scriptElement = null;\n        };\n        root.document.documentElement.appendChild(scriptElement);\n        return id;\n      };\n\n    } else {\n      scheduleMethod = function (action) {\n        var id = nextHandle++;\n        tasksByHandle[id] = action;\n        localSetTimeout(function () {\n          runTask(id);\n        }, 0);\n\n        return id;\n      };\n    }\n  }());\n\n  /**\n   * Gets a scheduler that schedules work via a timed callback based upon platform.\n   */\n   var DefaultScheduler = (function (__super__) {\n     inherits(DefaultScheduler, __super__);\n     function DefaultScheduler() {\n       __super__.call(this);\n     }\n\n     function scheduleAction(disposable, action, scheduler, state) {\n       return function schedule() {\n         disposable.setDisposable(Disposable._fixup(action(scheduler, state)));\n       };\n     }\n\n     function ClearDisposable(id) {\n       this._id = id;\n       this.isDisposed = false;\n     }\n\n     ClearDisposable.prototype.dispose = function () {\n       if (!this.isDisposed) {\n         this.isDisposed = true;\n         clearMethod(this._id);\n       }\n     };\n\n     function LocalClearDisposable(id) {\n       this._id = id;\n       this.isDisposed = false;\n     }\n\n     LocalClearDisposable.prototype.dispose = function () {\n       if (!this.isDisposed) {\n         this.isDisposed = true;\n         localClearTimeout(this._id);\n       }\n     };\n\n    DefaultScheduler.prototype.schedule = function (state, action) {\n      var disposable = new SingleAssignmentDisposable(),\n          id = scheduleMethod(scheduleAction(disposable, action, this, state));\n      return new BinaryDisposable(disposable, new ClearDisposable(id));\n    };\n\n    DefaultScheduler.prototype._scheduleFuture = function (state, dueTime, action) {\n      if (dueTime === 0) { return this.schedule(state, action); }\n      var disposable = new SingleAssignmentDisposable(),\n          id = localSetTimeout(scheduleAction(disposable, action, this, state), dueTime);\n      return new BinaryDisposable(disposable, new LocalClearDisposable(id));\n    };\n\n    return DefaultScheduler;\n  }(Scheduler));\n\n  var defaultScheduler = Scheduler['default'] = Scheduler.async = new DefaultScheduler();\n\n  function IndexedItem(id, value) {\n    this.id = id;\n    this.value = value;\n  }\n\n  IndexedItem.prototype.compareTo = function (other) {\n    var c = this.value.compareTo(other.value);\n    c === 0 && (c = this.id - other.id);\n    return c;\n  };\n\n  var PriorityQueue = Rx.internals.PriorityQueue = function (capacity) {\n    this.items = new Array(capacity);\n    this.length = 0;\n  };\n\n  var priorityProto = PriorityQueue.prototype;\n  priorityProto.isHigherPriority = function (left, right) {\n    return this.items[left].compareTo(this.items[right]) < 0;\n  };\n\n  priorityProto.percolate = function (index) {\n    if (index >= this.length || index < 0) { return; }\n    var parent = index - 1 >> 1;\n    if (parent < 0 || parent === index) { return; }\n    if (this.isHigherPriority(index, parent)) {\n      var temp = this.items[index];\n      this.items[index] = this.items[parent];\n      this.items[parent] = temp;\n      this.percolate(parent);\n    }\n  };\n\n  priorityProto.heapify = function (index) {\n    +index || (index = 0);\n    if (index >= this.length || index < 0) { return; }\n    var left = 2 * index + 1,\n        right = 2 * index + 2,\n        first = index;\n    if (left < this.length && this.isHigherPriority(left, first)) {\n      first = left;\n    }\n    if (right < this.length && this.isHigherPriority(right, first)) {\n      first = right;\n    }\n    if (first !== index) {\n      var temp = this.items[index];\n      this.items[index] = this.items[first];\n      this.items[first] = temp;\n      this.heapify(first);\n    }\n  };\n\n  priorityProto.peek = function () { return this.items[0].value; };\n\n  priorityProto.removeAt = function (index) {\n    this.items[index] = this.items[--this.length];\n    this.items[this.length] = undefined;\n    this.heapify();\n  };\n\n  priorityProto.dequeue = function () {\n    var result = this.peek();\n    this.removeAt(0);\n    return result;\n  };\n\n  priorityProto.enqueue = function (item) {\n    var index = this.length++;\n    this.items[index] = new IndexedItem(PriorityQueue.count++, item);\n    this.percolate(index);\n  };\n\n  priorityProto.remove = function (item) {\n    for (var i = 0; i < this.length; i++) {\n      if (this.items[i].value === item) {\n        this.removeAt(i);\n        return true;\n      }\n    }\n    return false;\n  };\n  PriorityQueue.count = 0;\n\n  /**\n   *  Represents a notification to an observer.\n   */\n  var Notification = Rx.Notification = (function () {\n    function Notification() {\n\n    }\n\n    Notification.prototype._accept = function (onNext, onError, onCompleted) {\n      throw new NotImplementedError();\n    };\n\n    Notification.prototype._acceptObserver = function (onNext, onError, onCompleted) {\n      throw new NotImplementedError();\n    };\n\n    /**\n     * Invokes the delegate corresponding to the notification or the observer's method corresponding to the notification and returns the produced result.\n     * @param {Function | Observer} observerOrOnNext Function to invoke for an OnNext notification or Observer to invoke the notification on..\n     * @param {Function} onError Function to invoke for an OnError notification.\n     * @param {Function} onCompleted Function to invoke for an OnCompleted notification.\n     * @returns {Any} Result produced by the observation.\n     */\n    Notification.prototype.accept = function (observerOrOnNext, onError, onCompleted) {\n      return observerOrOnNext && typeof observerOrOnNext === 'object' ?\n        this._acceptObserver(observerOrOnNext) :\n        this._accept(observerOrOnNext, onError, onCompleted);\n    };\n\n    /**\n     * Returns an observable sequence with a single notification.\n     *\n     * @memberOf Notifications\n     * @param {Scheduler} [scheduler] Scheduler to send out the notification calls on.\n     * @returns {Observable} The observable sequence that surfaces the behavior of the notification upon subscription.\n     */\n    Notification.prototype.toObservable = function (scheduler) {\n      var self = this;\n      isScheduler(scheduler) || (scheduler = immediateScheduler);\n      return new AnonymousObservable(function (o) {\n        return scheduler.schedule(self, function (_, notification) {\n          notification._acceptObserver(o);\n          notification.kind === 'N' && o.onCompleted();\n        });\n      });\n    };\n\n    return Notification;\n  })();\n\n  var OnNextNotification = (function (__super__) {\n    inherits(OnNextNotification, __super__);\n    function OnNextNotification(value) {\n      this.value = value;\n      this.kind = 'N';\n    }\n\n    OnNextNotification.prototype._accept = function (onNext) {\n      return onNext(this.value);\n    };\n\n    OnNextNotification.prototype._acceptObserver = function (o) {\n      return o.onNext(this.value);\n    };\n\n    OnNextNotification.prototype.toString = function () {\n      return 'OnNext(' + this.value + ')';\n    };\n\n    return OnNextNotification;\n  }(Notification));\n\n  var OnErrorNotification = (function (__super__) {\n    inherits(OnErrorNotification, __super__);\n    function OnErrorNotification(error) {\n      this.error = error;\n      this.kind = 'E';\n    }\n\n    OnErrorNotification.prototype._accept = function (onNext, onError) {\n      return onError(this.error);\n    };\n\n    OnErrorNotification.prototype._acceptObserver = function (o) {\n      return o.onError(this.error);\n    };\n\n    OnErrorNotification.prototype.toString = function () {\n      return 'OnError(' + this.error + ')';\n    };\n\n    return OnErrorNotification;\n  }(Notification));\n\n  var OnCompletedNotification = (function (__super__) {\n    inherits(OnCompletedNotification, __super__);\n    function OnCompletedNotification() {\n      this.kind = 'C';\n    }\n\n    OnCompletedNotification.prototype._accept = function (onNext, onError, onCompleted) {\n      return onCompleted();\n    };\n\n    OnCompletedNotification.prototype._acceptObserver = function (o) {\n      return o.onCompleted();\n    };\n\n    OnCompletedNotification.prototype.toString = function () {\n      return 'OnCompleted()';\n    };\n\n    return OnCompletedNotification;\n  }(Notification));\n\n  /**\n   * Creates an object that represents an OnNext notification to an observer.\n   * @param {Any} value The value contained in the notification.\n   * @returns {Notification} The OnNext notification containing the value.\n   */\n  var notificationCreateOnNext = Notification.createOnNext = function (value) {\n    return new OnNextNotification(value);\n  };\n\n  /**\n   * Creates an object that represents an OnError notification to an observer.\n   * @param {Any} error The exception contained in the notification.\n   * @returns {Notification} The OnError notification containing the exception.\n   */\n  var notificationCreateOnError = Notification.createOnError = function (error) {\n    return new OnErrorNotification(error);\n  };\n\n  /**\n   * Creates an object that represents an OnCompleted notification to an observer.\n   * @returns {Notification} The OnCompleted notification.\n   */\n  var notificationCreateOnCompleted = Notification.createOnCompleted = function () {\n    return new OnCompletedNotification();\n  };\n\n  /**\n   * Supports push-style iteration over an observable sequence.\n   */\n  var Observer = Rx.Observer = function () { };\n\n  /**\n   *  Creates an observer from the specified OnNext, along with optional OnError, and OnCompleted actions.\n   * @param {Function} [onNext] Observer's OnNext action implementation.\n   * @param {Function} [onError] Observer's OnError action implementation.\n   * @param {Function} [onCompleted] Observer's OnCompleted action implementation.\n   * @returns {Observer} The observer object implemented using the given actions.\n   */\n  var observerCreate = Observer.create = function (onNext, onError, onCompleted) {\n    onNext || (onNext = noop);\n    onError || (onError = defaultError);\n    onCompleted || (onCompleted = noop);\n    return new AnonymousObserver(onNext, onError, onCompleted);\n  };\n\n  /**\n   * Abstract base class for implementations of the Observer class.\n   * This base class enforces the grammar of observers where OnError and OnCompleted are terminal messages.\n   */\n  var AbstractObserver = Rx.internals.AbstractObserver = (function (__super__) {\n    inherits(AbstractObserver, __super__);\n\n    /**\n     * Creates a new observer in a non-stopped state.\n     */\n    function AbstractObserver() {\n      this.isStopped = false;\n    }\n\n    // Must be implemented by other observers\n    AbstractObserver.prototype.next = notImplemented;\n    AbstractObserver.prototype.error = notImplemented;\n    AbstractObserver.prototype.completed = notImplemented;\n\n    /**\n     * Notifies the observer of a new element in the sequence.\n     * @param {Any} value Next element in the sequence.\n     */\n    AbstractObserver.prototype.onNext = function (value) {\n      !this.isStopped && this.next(value);\n    };\n\n    /**\n     * Notifies the observer that an exception has occurred.\n     * @param {Any} error The error that has occurred.\n     */\n    AbstractObserver.prototype.onError = function (error) {\n      if (!this.isStopped) {\n        this.isStopped = true;\n        this.error(error);\n      }\n    };\n\n    /**\n     * Notifies the observer of the end of the sequence.\n     */\n    AbstractObserver.prototype.onCompleted = function () {\n      if (!this.isStopped) {\n        this.isStopped = true;\n        this.completed();\n      }\n    };\n\n    /**\n     * Disposes the observer, causing it to transition to the stopped state.\n     */\n    AbstractObserver.prototype.dispose = function () { this.isStopped = true; };\n\n    AbstractObserver.prototype.fail = function (e) {\n      if (!this.isStopped) {\n        this.isStopped = true;\n        this.error(e);\n        return true;\n      }\n\n      return false;\n    };\n\n    return AbstractObserver;\n  }(Observer));\n\n  /**\n   * Class to create an Observer instance from delegate-based implementations of the on* methods.\n   */\n  var AnonymousObserver = Rx.AnonymousObserver = (function (__super__) {\n    inherits(AnonymousObserver, __super__);\n\n    /**\n     * Creates an observer from the specified OnNext, OnError, and OnCompleted actions.\n     * @param {Any} onNext Observer's OnNext action implementation.\n     * @param {Any} onError Observer's OnError action implementation.\n     * @param {Any} onCompleted Observer's OnCompleted action implementation.\n     */\n    function AnonymousObserver(onNext, onError, onCompleted) {\n      __super__.call(this);\n      this._onNext = onNext;\n      this._onError = onError;\n      this._onCompleted = onCompleted;\n    }\n\n    /**\n     * Calls the onNext action.\n     * @param {Any} value Next element in the sequence.\n     */\n    AnonymousObserver.prototype.next = function (value) {\n      this._onNext(value);\n    };\n\n    /**\n     * Calls the onError action.\n     * @param {Any} error The error that has occurred.\n     */\n    AnonymousObserver.prototype.error = function (error) {\n      this._onError(error);\n    };\n\n    /**\n     *  Calls the onCompleted action.\n     */\n    AnonymousObserver.prototype.completed = function () {\n      this._onCompleted();\n    };\n\n    return AnonymousObserver;\n  }(AbstractObserver));\n\n  var observableProto;\n\n  /**\n   * Represents a push-style collection.\n   */\n  var Observable = Rx.Observable = (function () {\n\n    function makeSubscribe(self, subscribe) {\n      return function (o) {\n        var oldOnError = o.onError;\n        o.onError = function (e) {\n          makeStackTraceLong(e, self);\n          oldOnError.call(o, e);\n        };\n\n        return subscribe.call(self, o);\n      };\n    }\n\n    function Observable() {\n      if (Rx.config.longStackSupport && hasStacks) {\n        var oldSubscribe = this._subscribe;\n        var e = tryCatch(thrower)(new Error()).e;\n        this.stack = e.stack.substring(e.stack.indexOf('\\n') + 1);\n        this._subscribe = makeSubscribe(this, oldSubscribe);\n      }\n    }\n\n    observableProto = Observable.prototype;\n\n    /**\n    * Determines whether the given object is an Observable\n    * @param {Any} An object to determine whether it is an Observable\n    * @returns {Boolean} true if an Observable, else false.\n    */\n    Observable.isObservable = function (o) {\n      return o && isFunction(o.subscribe);\n    };\n\n    /**\n     *  Subscribes an o to the observable sequence.\n     *  @param {Mixed} [oOrOnNext] The object that is to receive notifications or an action to invoke for each element in the observable sequence.\n     *  @param {Function} [onError] Action to invoke upon exceptional termination of the observable sequence.\n     *  @param {Function} [onCompleted] Action to invoke upon graceful termination of the observable sequence.\n     *  @returns {Diposable} A disposable handling the subscriptions and unsubscriptions.\n     */\n    observableProto.subscribe = observableProto.forEach = function (oOrOnNext, onError, onCompleted) {\n      return this._subscribe(typeof oOrOnNext === 'object' ?\n        oOrOnNext :\n        observerCreate(oOrOnNext, onError, onCompleted));\n    };\n\n    /**\n     * Subscribes to the next value in the sequence with an optional \"this\" argument.\n     * @param {Function} onNext The function to invoke on each element in the observable sequence.\n     * @param {Any} [thisArg] Object to use as this when executing callback.\n     * @returns {Disposable} A disposable handling the subscriptions and unsubscriptions.\n     */\n    observableProto.subscribeOnNext = function (onNext, thisArg) {\n      return this._subscribe(observerCreate(typeof thisArg !== 'undefined' ? function(x) { onNext.call(thisArg, x); } : onNext));\n    };\n\n    /**\n     * Subscribes to an exceptional condition in the sequence with an optional \"this\" argument.\n     * @param {Function} onError The function to invoke upon exceptional termination of the observable sequence.\n     * @param {Any} [thisArg] Object to use as this when executing callback.\n     * @returns {Disposable} A disposable handling the subscriptions and unsubscriptions.\n     */\n    observableProto.subscribeOnError = function (onError, thisArg) {\n      return this._subscribe(observerCreate(null, typeof thisArg !== 'undefined' ? function(e) { onError.call(thisArg, e); } : onError));\n    };\n\n    /**\n     * Subscribes to the next value in the sequence with an optional \"this\" argument.\n     * @param {Function} onCompleted The function to invoke upon graceful termination of the observable sequence.\n     * @param {Any} [thisArg] Object to use as this when executing callback.\n     * @returns {Disposable} A disposable handling the subscriptions and unsubscriptions.\n     */\n    observableProto.subscribeOnCompleted = function (onCompleted, thisArg) {\n      return this._subscribe(observerCreate(null, null, typeof thisArg !== 'undefined' ? function() { onCompleted.call(thisArg); } : onCompleted));\n    };\n\n    return Observable;\n  })();\n\n  var ScheduledObserver = Rx.internals.ScheduledObserver = (function (__super__) {\n    inherits(ScheduledObserver, __super__);\n\n    function ScheduledObserver(scheduler, observer) {\n      __super__.call(this);\n      this.scheduler = scheduler;\n      this.observer = observer;\n      this.isAcquired = false;\n      this.hasFaulted = false;\n      this.queue = [];\n      this.disposable = new SerialDisposable();\n    }\n\n    function enqueueNext(observer, x) { return function () { observer.onNext(x); }; }\n    function enqueueError(observer, e) { return function () { observer.onError(e); }; }\n    function enqueueCompleted(observer) { return function () { observer.onCompleted(); }; }\n\n    ScheduledObserver.prototype.next = function (x) {\n      this.queue.push(enqueueNext(this.observer, x));\n    };\n\n    ScheduledObserver.prototype.error = function (e) {\n      this.queue.push(enqueueError(this.observer, e));\n    };\n\n    ScheduledObserver.prototype.completed = function () {\n      this.queue.push(enqueueCompleted(this.observer));\n    };\n\n\n    function scheduleMethod(state, recurse) {\n      var work;\n      if (state.queue.length > 0) {\n        work = state.queue.shift();\n      } else {\n        state.isAcquired = false;\n        return;\n      }\n      var res = tryCatch(work)();\n      if (res === errorObj) {\n        state.queue = [];\n        state.hasFaulted = true;\n        return thrower(res.e);\n      }\n      recurse(state);\n    }\n\n    ScheduledObserver.prototype.ensureActive = function () {\n      var isOwner = false;\n      if (!this.hasFaulted && this.queue.length > 0) {\n        isOwner = !this.isAcquired;\n        this.isAcquired = true;\n      }\n      isOwner &&\n        this.disposable.setDisposable(this.scheduler.scheduleRecursive(this, scheduleMethod));\n    };\n\n    ScheduledObserver.prototype.dispose = function () {\n      __super__.prototype.dispose.call(this);\n      this.disposable.dispose();\n    };\n\n    return ScheduledObserver;\n  }(AbstractObserver));\n\n  var ObservableBase = Rx.ObservableBase = (function (__super__) {\n    inherits(ObservableBase, __super__);\n\n    function fixSubscriber(subscriber) {\n      return subscriber && isFunction(subscriber.dispose) ? subscriber :\n        isFunction(subscriber) ? disposableCreate(subscriber) : disposableEmpty;\n    }\n\n    function setDisposable(s, state) {\n      var ado = state[0], self = state[1];\n      var sub = tryCatch(self.subscribeCore).call(self, ado);\n      if (sub === errorObj && !ado.fail(errorObj.e)) { thrower(errorObj.e); }\n      ado.setDisposable(fixSubscriber(sub));\n    }\n\n    function ObservableBase() {\n      __super__.call(this);\n    }\n\n    ObservableBase.prototype._subscribe = function (o) {\n      var ado = new AutoDetachObserver(o), state = [ado, this];\n\n      if (currentThreadScheduler.scheduleRequired()) {\n        currentThreadScheduler.schedule(state, setDisposable);\n      } else {\n        setDisposable(null, state);\n      }\n      return ado;\n    };\n\n    ObservableBase.prototype.subscribeCore = notImplemented;\n\n    return ObservableBase;\n  }(Observable));\n\nvar FlatMapObservable = Rx.FlatMapObservable = (function(__super__) {\n\n    inherits(FlatMapObservable, __super__);\n\n    function FlatMapObservable(source, selector, resultSelector, thisArg) {\n      this.resultSelector = isFunction(resultSelector) ? resultSelector : null;\n      this.selector = bindCallback(isFunction(selector) ? selector : function() { return selector; }, thisArg, 3);\n      this.source = source;\n      __super__.call(this);\n    }\n\n    FlatMapObservable.prototype.subscribeCore = function(o) {\n      return this.source.subscribe(new InnerObserver(o, this.selector, this.resultSelector, this));\n    };\n\n    inherits(InnerObserver, AbstractObserver);\n    function InnerObserver(observer, selector, resultSelector, source) {\n      this.i = 0;\n      this.selector = selector;\n      this.resultSelector = resultSelector;\n      this.source = source;\n      this.o = observer;\n      AbstractObserver.call(this);\n    }\n\n    InnerObserver.prototype._wrapResult = function(result, x, i) {\n      return this.resultSelector ?\n        result.map(function(y, i2) { return this.resultSelector(x, y, i, i2); }, this) :\n        result;\n    };\n\n    InnerObserver.prototype.next = function(x) {\n      var i = this.i++;\n      var result = tryCatch(this.selector)(x, i, this.source);\n      if (result === errorObj) { return this.o.onError(result.e); }\n\n      isPromise(result) && (result = observableFromPromise(result));\n      (isArrayLike(result) || isIterable(result)) && (result = Observable.from(result));\n      this.o.onNext(this._wrapResult(result, x, i));\n    };\n\n    InnerObserver.prototype.error = function(e) { this.o.onError(e); };\n\n    InnerObserver.prototype.completed = function() { this.o.onCompleted(); };\n\n    return FlatMapObservable;\n\n}(ObservableBase));\n\n  var Enumerable = Rx.internals.Enumerable = function () { };\n\n  function IsDisposedDisposable(state) {\n    this._s = state;\n    this.isDisposed = false;\n  }\n\n  IsDisposedDisposable.prototype.dispose = function () {\n    if (!this.isDisposed) {\n      this.isDisposed = true;\n      this._s.isDisposed = true;\n    }\n  };\n\n  var ConcatEnumerableObservable = (function(__super__) {\n    inherits(ConcatEnumerableObservable, __super__);\n    function ConcatEnumerableObservable(sources) {\n      this.sources = sources;\n      __super__.call(this);\n    }\n\n    function scheduleMethod(state, recurse) {\n      if (state.isDisposed) { return; }\n      var currentItem = tryCatch(state.e.next).call(state.e);\n      if (currentItem === errorObj) { return state.o.onError(currentItem.e); }\n      if (currentItem.done) { return state.o.onCompleted(); }\n\n      // Check if promise\n      var currentValue = currentItem.value;\n      isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));\n\n      var d = new SingleAssignmentDisposable();\n      state.subscription.setDisposable(d);\n      d.setDisposable(currentValue.subscribe(new InnerObserver(state, recurse)));\n    }\n\n    ConcatEnumerableObservable.prototype.subscribeCore = function (o) {\n      var subscription = new SerialDisposable();\n      var state = {\n        isDisposed: false,\n        o: o,\n        subscription: subscription,\n        e: this.sources[$iterator$]()\n      };\n\n      var cancelable = currentThreadScheduler.scheduleRecursive(state, scheduleMethod);\n      return new NAryDisposable([subscription, cancelable, new IsDisposedDisposable(state)]);\n    };\n\n    function InnerObserver(state, recurse) {\n      this._state = state;\n      this._recurse = recurse;\n      AbstractObserver.call(this);\n    }\n\n    inherits(InnerObserver, AbstractObserver);\n\n    InnerObserver.prototype.next = function (x) { this._state.o.onNext(x); };\n    InnerObserver.prototype.error = function (e) { this._state.o.onError(e); };\n    InnerObserver.prototype.completed = function () { this._recurse(this._state); };\n\n    return ConcatEnumerableObservable;\n  }(ObservableBase));\n\n  Enumerable.prototype.concat = function () {\n    return new ConcatEnumerableObservable(this);\n  };\n\n  var CatchErrorObservable = (function(__super__) {\n    function CatchErrorObservable(sources) {\n      this.sources = sources;\n      __super__.call(this);\n    }\n\n    inherits(CatchErrorObservable, __super__);\n\n    function scheduleMethod(state, recurse) {\n      if (state.isDisposed) { return; }\n      var currentItem = tryCatch(state.e.next).call(state.e);\n      if (currentItem === errorObj) { return state.o.onError(currentItem.e); }\n      if (currentItem.done) { return state.lastError !== null ? state.o.onError(state.lastError) : state.o.onCompleted(); }\n\n      var currentValue = currentItem.value;\n      isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));\n\n      var d = new SingleAssignmentDisposable();\n      state.subscription.setDisposable(d);\n      d.setDisposable(currentValue.subscribe(new InnerObserver(state, recurse)));\n    }\n\n    CatchErrorObservable.prototype.subscribeCore = function (o) {\n      var subscription = new SerialDisposable();\n      var state = {\n        isDisposed: false,\n        e: this.sources[$iterator$](),\n        subscription: subscription,\n        lastError: null,\n        o: o\n      };\n\n      var cancelable = currentThreadScheduler.scheduleRecursive(state, scheduleMethod);\n      return new NAryDisposable([subscription, cancelable, new IsDisposedDisposable(state)]);\n    };\n\n    function InnerObserver(state, recurse) {\n      this._state = state;\n      this._recurse = recurse;\n      AbstractObserver.call(this);\n    }\n\n    inherits(InnerObserver, AbstractObserver);\n\n    InnerObserver.prototype.next = function (x) { this._state.o.onNext(x); };\n    InnerObserver.prototype.error = function (e) { this._state.lastError = e; this._recurse(this._state); };\n    InnerObserver.prototype.completed = function () { this._state.o.onCompleted(); };\n\n    return CatchErrorObservable;\n  }(ObservableBase));\n\n  Enumerable.prototype.catchError = function () {\n    return new CatchErrorObservable(this);\n  };\n\n  var RepeatEnumerable = (function (__super__) {\n    inherits(RepeatEnumerable, __super__);\n    function RepeatEnumerable(v, c) {\n      this.v = v;\n      this.c = c == null ? -1 : c;\n    }\n\n    RepeatEnumerable.prototype[$iterator$] = function () {\n      return new RepeatEnumerator(this);\n    };\n\n    function RepeatEnumerator(p) {\n      this.v = p.v;\n      this.l = p.c;\n    }\n\n    RepeatEnumerator.prototype.next = function () {\n      if (this.l === 0) { return doneEnumerator; }\n      if (this.l > 0) { this.l--; }\n      return { done: false, value: this.v };\n    };\n\n    return RepeatEnumerable;\n  }(Enumerable));\n\n  var enumerableRepeat = Enumerable.repeat = function (value, repeatCount) {\n    return new RepeatEnumerable(value, repeatCount);\n  };\n\n  var OfEnumerable = (function(__super__) {\n    inherits(OfEnumerable, __super__);\n    function OfEnumerable(s, fn, thisArg) {\n      this.s = s;\n      this.fn = fn ? bindCallback(fn, thisArg, 3) : null;\n    }\n    OfEnumerable.prototype[$iterator$] = function () {\n      return new OfEnumerator(this);\n    };\n\n    function OfEnumerator(p) {\n      this.i = -1;\n      this.s = p.s;\n      this.l = this.s.length;\n      this.fn = p.fn;\n    }\n\n    OfEnumerator.prototype.next = function () {\n     return ++this.i < this.l ?\n       { done: false, value: !this.fn ? this.s[this.i] : this.fn(this.s[this.i], this.i, this.s) } :\n       doneEnumerator;\n    };\n\n    return OfEnumerable;\n  }(Enumerable));\n\n  var enumerableOf = Enumerable.of = function (source, selector, thisArg) {\n    return new OfEnumerable(source, selector, thisArg);\n  };\n\n  var ToArrayObservable = (function(__super__) {\n    inherits(ToArrayObservable, __super__);\n    function ToArrayObservable(source) {\n      this.source = source;\n      __super__.call(this);\n    }\n\n    ToArrayObservable.prototype.subscribeCore = function(o) {\n      return this.source.subscribe(new InnerObserver(o));\n    };\n\n    inherits(InnerObserver, AbstractObserver);\n    function InnerObserver(o) {\n      this.o = o;\n      this.a = [];\n      AbstractObserver.call(this);\n    }\n    \n    InnerObserver.prototype.next = function (x) { this.a.push(x); };\n    InnerObserver.prototype.error = function (e) { this.o.onError(e);  };\n    InnerObserver.prototype.completed = function () { this.o.onNext(this.a); this.o.onCompleted(); };\n\n    return ToArrayObservable;\n  }(ObservableBase));\n\n  /**\n  * Creates an array from an observable sequence.\n  * @returns {Observable} An observable sequence containing a single element with a list containing all the elements of the source sequence.\n  */\n  observableProto.toArray = function () {\n    return new ToArrayObservable(this);\n  };\n\n  /**\n   *  Creates an observable sequence from a specified subscribe method implementation.\n   * @example\n   *  var res = Rx.Observable.create(function (observer) { return function () { } );\n   *  var res = Rx.Observable.create(function (observer) { return Rx.Disposable.empty; } );\n   *  var res = Rx.Observable.create(function (observer) { } );\n   * @param {Function} subscribe Implementation of the resulting observable sequence's subscribe method, returning a function that will be wrapped in a Disposable.\n   * @returns {Observable} The observable sequence with the specified implementation for the Subscribe method.\n   */\n  Observable.create = function (subscribe, parent) {\n    return new AnonymousObservable(subscribe, parent);\n  };\n\n  var Defer = (function(__super__) {\n    inherits(Defer, __super__);\n    function Defer(factory) {\n      this._f = factory;\n      __super__.call(this);\n    }\n\n    Defer.prototype.subscribeCore = function (o) {\n      var result = tryCatch(this._f)();\n      if (result === errorObj) { return observableThrow(result.e).subscribe(o);}\n      isPromise(result) && (result = observableFromPromise(result));\n      return result.subscribe(o);\n    };\n\n    return Defer;\n  }(ObservableBase));\n\n  /**\n   *  Returns an observable sequence that invokes the specified factory function whenever a new observer subscribes.\n   *\n   * @example\n   *  var res = Rx.Observable.defer(function () { return Rx.Observable.fromArray([1,2,3]); });\n   * @param {Function} observableFactory Observable factory function to invoke for each observer that subscribes to the resulting sequence or Promise.\n   * @returns {Observable} An observable sequence whose observers trigger an invocation of the given observable factory function.\n   */\n  var observableDefer = Observable.defer = function (observableFactory) {\n    return new Defer(observableFactory);\n  };\n\n  var EmptyObservable = (function(__super__) {\n    inherits(EmptyObservable, __super__);\n    function EmptyObservable(scheduler) {\n      this.scheduler = scheduler;\n      __super__.call(this);\n    }\n\n    EmptyObservable.prototype.subscribeCore = function (observer) {\n      var sink = new EmptySink(observer, this.scheduler);\n      return sink.run();\n    };\n\n    function EmptySink(observer, scheduler) {\n      this.observer = observer;\n      this.scheduler = scheduler;\n    }\n\n    function scheduleItem(s, state) {\n      state.onCompleted();\n      return disposableEmpty;\n    }\n\n    EmptySink.prototype.run = function () {\n      var state = this.observer;\n      return this.scheduler === immediateScheduler ?\n        scheduleItem(null, state) :\n        this.scheduler.schedule(state, scheduleItem);\n    };\n\n    return EmptyObservable;\n  }(ObservableBase));\n\n  var EMPTY_OBSERVABLE = new EmptyObservable(immediateScheduler);\n\n  /**\n   *  Returns an empty observable sequence, using the specified scheduler to send out the single OnCompleted message.\n   *\n   * @example\n   *  var res = Rx.Observable.empty();\n   *  var res = Rx.Observable.empty(Rx.Scheduler.timeout);\n   * @param {Scheduler} [scheduler] Scheduler to send the termination call on.\n   * @returns {Observable} An observable sequence with no elements.\n   */\n  var observableEmpty = Observable.empty = function (scheduler) {\n    isScheduler(scheduler) || (scheduler = immediateScheduler);\n    return scheduler === immediateScheduler ? EMPTY_OBSERVABLE : new EmptyObservable(scheduler);\n  };\n\n  var FromObservable = (function(__super__) {\n    inherits(FromObservable, __super__);\n    function FromObservable(iterable, fn, scheduler) {\n      this._iterable = iterable;\n      this._fn = fn;\n      this._scheduler = scheduler;\n      __super__.call(this);\n    }\n\n    function createScheduleMethod(o, it, fn) {\n      return function loopRecursive(i, recurse) {\n        var next = tryCatch(it.next).call(it);\n        if (next === errorObj) { return o.onError(next.e); }\n        if (next.done) { return o.onCompleted(); }\n\n        var result = next.value;\n\n        if (isFunction(fn)) {\n          result = tryCatch(fn)(result, i);\n          if (result === errorObj) { return o.onError(result.e); }\n        }\n\n        o.onNext(result);\n        recurse(i + 1);\n      };\n    }\n\n    FromObservable.prototype.subscribeCore = function (o) {\n      var list = Object(this._iterable),\n          it = getIterable(list);\n\n      return this._scheduler.scheduleRecursive(0, createScheduleMethod(o, it, this._fn));\n    };\n\n    return FromObservable;\n  }(ObservableBase));\n\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n\n  function StringIterable(s) {\n    this._s = s;\n  }\n\n  StringIterable.prototype[$iterator$] = function () {\n    return new StringIterator(this._s);\n  };\n\n  function StringIterator(s) {\n    this._s = s;\n    this._l = s.length;\n    this._i = 0;\n  }\n\n  StringIterator.prototype[$iterator$] = function () {\n    return this;\n  };\n\n  StringIterator.prototype.next = function () {\n    return this._i < this._l ? { done: false, value: this._s.charAt(this._i++) } : doneEnumerator;\n  };\n\n  function ArrayIterable(a) {\n    this._a = a;\n  }\n\n  ArrayIterable.prototype[$iterator$] = function () {\n    return new ArrayIterator(this._a);\n  };\n\n  function ArrayIterator(a) {\n    this._a = a;\n    this._l = toLength(a);\n    this._i = 0;\n  }\n\n  ArrayIterator.prototype[$iterator$] = function () {\n    return this;\n  };\n\n  ArrayIterator.prototype.next = function () {\n    return this._i < this._l ? { done: false, value: this._a[this._i++] } : doneEnumerator;\n  };\n\n  function numberIsFinite(value) {\n    return typeof value === 'number' && root.isFinite(value);\n  }\n\n  function isNan(n) {\n    return n !== n;\n  }\n\n  function getIterable(o) {\n    var i = o[$iterator$], it;\n    if (!i && typeof o === 'string') {\n      it = new StringIterable(o);\n      return it[$iterator$]();\n    }\n    if (!i && o.length !== undefined) {\n      it = new ArrayIterable(o);\n      return it[$iterator$]();\n    }\n    if (!i) { throw new TypeError('Object is not iterable'); }\n    return o[$iterator$]();\n  }\n\n  function sign(value) {\n    var number = +value;\n    if (number === 0) { return number; }\n    if (isNaN(number)) { return number; }\n    return number < 0 ? -1 : 1;\n  }\n\n  function toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) { return 0; }\n    if (len === 0 || !numberIsFinite(len)) { return len; }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) { return 0; }\n    if (len > maxSafeInteger) { return maxSafeInteger; }\n    return len;\n  }\n\n  /**\n  * This method creates a new Observable sequence from an array-like or iterable object.\n  * @param {Any} arrayLike An array-like or iterable object to convert to an Observable sequence.\n  * @param {Function} [mapFn] Map function to call on every element of the array.\n  * @param {Any} [thisArg] The context to use calling the mapFn if provided.\n  * @param {Scheduler} [scheduler] Optional scheduler to use for scheduling.  If not provided, defaults to Scheduler.currentThread.\n  */\n  var observableFrom = Observable.from = function (iterable, mapFn, thisArg, scheduler) {\n    if (iterable == null) {\n      throw new Error('iterable cannot be null.')\n    }\n    if (mapFn && !isFunction(mapFn)) {\n      throw new Error('mapFn when provided must be a function');\n    }\n    if (mapFn) {\n      var mapper = bindCallback(mapFn, thisArg, 2);\n    }\n    isScheduler(scheduler) || (scheduler = currentThreadScheduler);\n    return new FromObservable(iterable, mapper, scheduler);\n  }\n\n  var FromArrayObservable = (function(__super__) {\n    inherits(FromArrayObservable, __super__);\n    function FromArrayObservable(args, scheduler) {\n      this._args = args;\n      this._scheduler = scheduler;\n      __super__.call(this);\n    }\n\n    function scheduleMethod(o, args) {\n      var len = args.length;\n      return function loopRecursive (i, recurse) {\n        if (i < len) {\n          o.onNext(args[i]);\n          recurse(i + 1);\n        } else {\n          o.onCompleted();\n        }\n      };\n    }\n\n    FromArrayObservable.prototype.subscribeCore = function (o) {\n      return this._scheduler.scheduleRecursive(0, scheduleMethod(o, this._args));\n    };\n\n    return FromArrayObservable;\n  }(ObservableBase));\n\n  /**\n  *  Converts an array to an observable sequence, using an optional scheduler to enumerate the array.\n  * @deprecated use Observable.from or Observable.of\n  * @param {Scheduler} [scheduler] Scheduler to run the enumeration of the input sequence on.\n  * @returns {Observable} The observable sequence whose elements are pulled from the given enumerable sequence.\n  */\n  var observableFromArray = Observable.fromArray = function (array, scheduler) {\n    isScheduler(scheduler) || (scheduler = currentThreadScheduler);\n    return new FromArrayObservable(array, scheduler)\n  };\n\n  var NeverObservable = (function(__super__) {\n    inherits(NeverObservable, __super__);\n    function NeverObservable() {\n      __super__.call(this);\n    }\n\n    NeverObservable.prototype.subscribeCore = function (observer) {\n      return disposableEmpty;\n    };\n\n    return NeverObservable;\n  }(ObservableBase));\n\n  var NEVER_OBSERVABLE = new NeverObservable();\n\n  /**\n   * Returns a non-terminating observable sequence, which can be used to denote an infinite duration (e.g. when using reactive joins).\n   * @returns {Observable} An observable sequence whose observers will never get called.\n   */\n  var observableNever = Observable.never = function () {\n    return NEVER_OBSERVABLE;\n  };\n\n  function observableOf (scheduler, array) {\n    isScheduler(scheduler) || (scheduler = currentThreadScheduler);\n    return new FromArrayObservable(array, scheduler);\n  }\n\n  /**\n  *  This method creates a new Observable instance with a variable number of arguments, regardless of number or type of the arguments.\n  * @returns {Observable} The observable sequence whose elements are pulled from the given arguments.\n  */\n  Observable.of = function () {\n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    return new FromArrayObservable(args, currentThreadScheduler);\n  };\n\n  /**\n  *  This method creates a new Observable instance with a variable number of arguments, regardless of number or type of the arguments.\n  * @param {Scheduler} scheduler A scheduler to use for scheduling the arguments.\n  * @returns {Observable} The observable sequence whose elements are pulled from the given arguments.\n  */\n  Observable.ofWithScheduler = function (scheduler) {\n    var len = arguments.length, args = new Array(len - 1);\n    for(var i = 1; i < len; i++) { args[i - 1] = arguments[i]; }\n    return new FromArrayObservable(args, scheduler);\n  };\n\n  var PairsObservable = (function(__super__) {\n    inherits(PairsObservable, __super__);\n    function PairsObservable(o, scheduler) {\n      this._o = o;\n      this._keys = Object.keys(o);\n      this._scheduler = scheduler;\n      __super__.call(this);\n    }\n\n    function scheduleMethod(o, obj, keys) {\n      return function loopRecursive(i, recurse) {\n        if (i < keys.length) {\n          var key = keys[i];\n          o.onNext([key, obj[key]]);\n          recurse(i + 1);\n        } else {\n          o.onCompleted();\n        }\n      };\n    }\n\n    PairsObservable.prototype.subscribeCore = function (o) {\n      return this._scheduler.scheduleRecursive(0, scheduleMethod(o, this._o, this._keys));\n    };\n\n    return PairsObservable;\n  }(ObservableBase));\n\n  /**\n   * Convert an object into an observable sequence of [key, value] pairs.\n   * @param {Object} obj The object to inspect.\n   * @param {Scheduler} [scheduler] Scheduler to run the enumeration of the input sequence on.\n   * @returns {Observable} An observable sequence of [key, value] pairs from the object.\n   */\n  Observable.pairs = function (obj, scheduler) {\n    scheduler || (scheduler = currentThreadScheduler);\n    return new PairsObservable(obj, scheduler);\n  };\n\n    var RangeObservable = (function(__super__) {\n    inherits(RangeObservable, __super__);\n    function RangeObservable(start, count, scheduler) {\n      this.start = start;\n      this.rangeCount = count;\n      this.scheduler = scheduler;\n      __super__.call(this);\n    }\n\n    function loopRecursive(start, count, o) {\n      return function loop (i, recurse) {\n        if (i < count) {\n          o.onNext(start + i);\n          recurse(i + 1);\n        } else {\n          o.onCompleted();\n        }\n      };\n    }\n\n    RangeObservable.prototype.subscribeCore = function (o) {\n      return this.scheduler.scheduleRecursive(\n        0,\n        loopRecursive(this.start, this.rangeCount, o)\n      );\n    };\n\n    return RangeObservable;\n  }(ObservableBase));\n\n  /**\n  *  Generates an observable sequence of integral numbers within a specified range, using the specified scheduler to send out observer messages.\n  * @param {Number} start The value of the first integer in the sequence.\n  * @param {Number} count The number of sequential integers to generate.\n  * @param {Scheduler} [scheduler] Scheduler to run the generator loop on. If not specified, defaults to Scheduler.currentThread.\n  * @returns {Observable} An observable sequence that contains a range of sequential integral numbers.\n  */\n  Observable.range = function (start, count, scheduler) {\n    isScheduler(scheduler) || (scheduler = currentThreadScheduler);\n    return new RangeObservable(start, count, scheduler);\n  };\n\n  var RepeatObservable = (function(__super__) {\n    inherits(RepeatObservable, __super__);\n    function RepeatObservable(value, repeatCount, scheduler) {\n      this.value = value;\n      this.repeatCount = repeatCount == null ? -1 : repeatCount;\n      this.scheduler = scheduler;\n      __super__.call(this);\n    }\n\n    RepeatObservable.prototype.subscribeCore = function (observer) {\n      var sink = new RepeatSink(observer, this);\n      return sink.run();\n    };\n\n    return RepeatObservable;\n  }(ObservableBase));\n\n  function RepeatSink(observer, parent) {\n    this.observer = observer;\n    this.parent = parent;\n  }\n\n  RepeatSink.prototype.run = function () {\n    var observer = this.observer, value = this.parent.value;\n    function loopRecursive(i, recurse) {\n      if (i === -1 || i > 0) {\n        observer.onNext(value);\n        i > 0 && i--;\n      }\n      if (i === 0) { return observer.onCompleted(); }\n      recurse(i);\n    }\n\n    return this.parent.scheduler.scheduleRecursive(this.parent.repeatCount, loopRecursive);\n  };\n\n  /**\n   *  Generates an observable sequence that repeats the given element the specified number of times, using the specified scheduler to send out observer messages.\n   * @param {Mixed} value Element to repeat.\n   * @param {Number} repeatCount [Optiona] Number of times to repeat the element. If not specified, repeats indefinitely.\n   * @param {Scheduler} scheduler Scheduler to run the producer loop on. If not specified, defaults to Scheduler.immediate.\n   * @returns {Observable} An observable sequence that repeats the given element the specified number of times.\n   */\n  Observable.repeat = function (value, repeatCount, scheduler) {\n    isScheduler(scheduler) || (scheduler = currentThreadScheduler);\n    return new RepeatObservable(value, repeatCount, scheduler);\n  };\n\n  var JustObservable = (function(__super__) {\n    inherits(JustObservable, __super__);\n    function JustObservable(value, scheduler) {\n      this._value = value;\n      this._scheduler = scheduler;\n      __super__.call(this);\n    }\n\n    JustObservable.prototype.subscribeCore = function (o) {\n      var state = [this._value, o];\n      return this._scheduler === immediateScheduler ?\n        scheduleItem(null, state) :\n        this._scheduler.schedule(state, scheduleItem);\n    };\n\n    function scheduleItem(s, state) {\n      var value = state[0], observer = state[1];\n      observer.onNext(value);\n      observer.onCompleted();\n      return disposableEmpty;\n    }\n\n    return JustObservable;\n  }(ObservableBase));\n\n  /**\n   *  Returns an observable sequence that contains a single element, using the specified scheduler to send out observer messages.\n   *  There is an alias called 'just' or browsers <IE9.\n   * @param {Mixed} value Single element in the resulting observable sequence.\n   * @param {Scheduler} scheduler Scheduler to send the single element on. If not specified, defaults to Scheduler.immediate.\n   * @returns {Observable} An observable sequence containing the single specified element.\n   */\n  var observableReturn = Observable['return'] = Observable.just = function (value, scheduler) {\n    isScheduler(scheduler) || (scheduler = immediateScheduler);\n    return new JustObservable(value, scheduler);\n  };\n\n  var ThrowObservable = (function(__super__) {\n    inherits(ThrowObservable, __super__);\n    function ThrowObservable(error, scheduler) {\n      this._error = error;\n      this._scheduler = scheduler;\n      __super__.call(this);\n    }\n\n    ThrowObservable.prototype.subscribeCore = function (o) {\n      var state = [this._error, o];\n      return this._scheduler === immediateScheduler ?\n        scheduleItem(null, state) :\n        this._scheduler.schedule(state, scheduleItem);\n    };\n\n    function scheduleItem(s, state) {\n      var e = state[0], o = state[1];\n      o.onError(e);\n      return disposableEmpty;\n    }\n\n    return ThrowObservable;\n  }(ObservableBase));\n\n  /**\n   *  Returns an observable sequence that terminates with an exception, using the specified scheduler to send out the single onError message.\n   *  There is an alias to this method called 'throwError' for browsers <IE9.\n   * @param {Mixed} error An object used for the sequence's termination.\n   * @param {Scheduler} scheduler Scheduler to send the exceptional termination call on. If not specified, defaults to Scheduler.immediate.\n   * @returns {Observable} The observable sequence that terminates exceptionally with the specified exception object.\n   */\n  var observableThrow = Observable['throw'] = function (error, scheduler) {\n    isScheduler(scheduler) || (scheduler = immediateScheduler);\n    return new ThrowObservable(error, scheduler);\n  };\n\n  var CatchObservable = (function (__super__) {\n    inherits(CatchObservable, __super__);\n    function CatchObservable(source, fn) {\n      this.source = source;\n      this._fn = fn;\n      __super__.call(this);\n    }\n\n    CatchObservable.prototype.subscribeCore = function (o) {\n      var d1 = new SingleAssignmentDisposable(), subscription = new SerialDisposable();\n      subscription.setDisposable(d1);\n      d1.setDisposable(this.source.subscribe(new CatchObserver(o, subscription, this._fn)));\n      return subscription;\n    };\n\n    return CatchObservable;\n  }(ObservableBase));\n\n  var CatchObserver = (function(__super__) {\n    inherits(CatchObserver, __super__);\n    function CatchObserver(o, s, fn) {\n      this._o = o;\n      this._s = s;\n      this._fn = fn;\n      __super__.call(this);\n    }\n\n    CatchObserver.prototype.next = function (x) { this._o.onNext(x); };\n    CatchObserver.prototype.completed = function () { return this._o.onCompleted(); };\n    CatchObserver.prototype.error = function (e) {\n      var result = tryCatch(this._fn)(e);\n      if (result === errorObj) { return this._o.onError(result.e); }\n      isPromise(result) && (result = observableFromPromise(result));\n\n      var d = new SingleAssignmentDisposable();\n      this._s.setDisposable(d);\n      d.setDisposable(result.subscribe(this._o));\n    };\n\n    return CatchObserver;\n  }(AbstractObserver));\n\n  /**\n   * Continues an observable sequence that is terminated by an exception with the next observable sequence.\n   * @param {Mixed} handlerOrSecond Exception handler function that returns an observable sequence given the error that occurred in the first sequence, or a second observable sequence used to produce results when an error occurred in the first sequence.\n   * @returns {Observable} An observable sequence containing the first sequence's elements, followed by the elements of the handler sequence in case an exception occurred.\n   */\n  observableProto['catch'] = function (handlerOrSecond) {\n    return isFunction(handlerOrSecond) ? new CatchObservable(this, handlerOrSecond) : observableCatch([this, handlerOrSecond]);\n  };\n\n  /**\n   * Continues an observable sequence that is terminated by an exception with the next observable sequence.\n   * @param {Array | Arguments} args Arguments or an array to use as the next sequence if an error occurs.\n   * @returns {Observable} An observable sequence containing elements from consecutive source sequences until a source sequence terminates successfully.\n   */\n  var observableCatch = Observable['catch'] = function () {\n    var items;\n    if (Array.isArray(arguments[0])) {\n      items = arguments[0];\n    } else {\n      var len = arguments.length;\n      items = new Array(len);\n      for(var i = 0; i < len; i++) { items[i] = arguments[i]; }\n    }\n    return enumerableOf(items).catchError();\n  };\n\n  /**\n   * Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences or Promises produces an element.\n   * This can be in the form of an argument list of observables or an array.\n   *\n   * @example\n   * 1 - obs = observable.combineLatest(obs1, obs2, obs3, function (o1, o2, o3) { return o1 + o2 + o3; });\n   * 2 - obs = observable.combineLatest([obs1, obs2, obs3], function (o1, o2, o3) { return o1 + o2 + o3; });\n   * @returns {Observable} An observable sequence containing the result of combining elements of the sources using the specified result selector function.\n   */\n  observableProto.combineLatest = function () {\n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    if (Array.isArray(args[0])) {\n      args[0].unshift(this);\n    } else {\n      args.unshift(this);\n    }\n    return combineLatest.apply(this, args);\n  };\n\n  function falseFactory() { return false; }\n  function argumentsToArray() {\n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    return args;\n  }\n\n  var CombineLatestObservable = (function(__super__) {\n    inherits(CombineLatestObservable, __super__);\n    function CombineLatestObservable(params, cb) {\n      this._params = params;\n      this._cb = cb;\n      __super__.call(this);\n    }\n\n    CombineLatestObservable.prototype.subscribeCore = function(observer) {\n      var len = this._params.length,\n          subscriptions = new Array(len);\n\n      var state = {\n        hasValue: arrayInitialize(len, falseFactory),\n        hasValueAll: false,\n        isDone: arrayInitialize(len, falseFactory),\n        values: new Array(len)\n      };\n\n      for (var i = 0; i < len; i++) {\n        var source = this._params[i], sad = new SingleAssignmentDisposable();\n        subscriptions[i] = sad;\n        isPromise(source) && (source = observableFromPromise(source));\n        sad.setDisposable(source.subscribe(new CombineLatestObserver(observer, i, this._cb, state)));\n      }\n\n      return new NAryDisposable(subscriptions);\n    };\n\n    return CombineLatestObservable;\n  }(ObservableBase));\n\n  var CombineLatestObserver = (function (__super__) {\n    inherits(CombineLatestObserver, __super__);\n    function CombineLatestObserver(o, i, cb, state) {\n      this._o = o;\n      this._i = i;\n      this._cb = cb;\n      this._state = state;\n      __super__.call(this);\n    }\n\n    function notTheSame(i) {\n      return function (x, j) {\n        return j !== i;\n      };\n    }\n\n    CombineLatestObserver.prototype.next = function (x) {\n      this._state.values[this._i] = x;\n      this._state.hasValue[this._i] = true;\n      if (this._state.hasValueAll || (this._state.hasValueAll = this._state.hasValue.every(identity))) {\n        var res = tryCatch(this._cb).apply(null, this._state.values);\n        if (res === errorObj) { return this._o.onError(res.e); }\n        this._o.onNext(res);\n      } else if (this._state.isDone.filter(notTheSame(this._i)).every(identity)) {\n        this._o.onCompleted();\n      }\n    };\n\n    CombineLatestObserver.prototype.error = function (e) {\n      this._o.onError(e);\n    };\n\n    CombineLatestObserver.prototype.completed = function () {\n      this._state.isDone[this._i] = true;\n      this._state.isDone.every(identity) && this._o.onCompleted();\n    };\n\n    return CombineLatestObserver;\n  }(AbstractObserver));\n\n  /**\n  * Merges the specified observable sequences into one observable sequence by using the selector function whenever any of the observable sequences or Promises produces an element.\n  *\n  * @example\n  * 1 - obs = Rx.Observable.combineLatest(obs1, obs2, obs3, function (o1, o2, o3) { return o1 + o2 + o3; });\n  * 2 - obs = Rx.Observable.combineLatest([obs1, obs2, obs3], function (o1, o2, o3) { return o1 + o2 + o3; });\n  * @returns {Observable} An observable sequence containing the result of combining elements of the sources using the specified result selector function.\n  */\n  var combineLatest = Observable.combineLatest = function () {\n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    var resultSelector = isFunction(args[len - 1]) ? args.pop() : argumentsToArray;\n    Array.isArray(args[0]) && (args = args[0]);\n    return new CombineLatestObservable(args, resultSelector);\n  };\n\n  /**\n   * Concatenates all the observable sequences.  This takes in either an array or variable arguments to concatenate.\n   * @returns {Observable} An observable sequence that contains the elements of each given sequence, in sequential order.\n   */\n  observableProto.concat = function () {\n    for(var args = [], i = 0, len = arguments.length; i < len; i++) { args.push(arguments[i]); }\n    args.unshift(this);\n    return observableConcat.apply(null, args);\n  };\n\n  var ConcatObserver = (function(__super__) {\n    inherits(ConcatObserver, __super__);\n    function ConcatObserver(s, fn) {\n      this._s = s;\n      this._fn = fn;\n      __super__.call(this);\n    }\n\n    ConcatObserver.prototype.next = function (x) { this._s.o.onNext(x); };\n    ConcatObserver.prototype.error = function (e) { this._s.o.onError(e); };\n    ConcatObserver.prototype.completed = function () { this._s.i++; this._fn(this._s); };\n\n    return ConcatObserver;\n  }(AbstractObserver));\n\n  var ConcatObservable = (function(__super__) {\n    inherits(ConcatObservable, __super__);\n    function ConcatObservable(sources) {\n      this._sources = sources;\n      __super__.call(this);\n    }\n\n    function scheduleRecursive (state, recurse) {\n      if (state.disposable.isDisposed) { return; }\n      if (state.i === state.sources.length) { return state.o.onCompleted(); }\n\n      // Check if promise\n      var currentValue = state.sources[state.i];\n      isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));\n\n      var d = new SingleAssignmentDisposable();\n      state.subscription.setDisposable(d);\n      d.setDisposable(currentValue.subscribe(new ConcatObserver(state, recurse)));\n    }\n\n    ConcatObservable.prototype.subscribeCore = function(o) {\n      var subscription = new SerialDisposable();\n      var disposable = disposableCreate(noop);\n      var state = {\n        o: o,\n        i: 0,\n        subscription: subscription,\n        disposable: disposable,\n        sources: this._sources\n      };\n\n      var cancelable = immediateScheduler.scheduleRecursive(state, scheduleRecursive);\n      return new NAryDisposable([subscription, disposable, cancelable]);\n    };\n\n    return ConcatObservable;\n  }(ObservableBase));\n\n  /**\n   * Concatenates all the observable sequences.\n   * @param {Array | Arguments} args Arguments or an array to concat to the observable sequence.\n   * @returns {Observable} An observable sequence that contains the elements of each given sequence, in sequential order.\n   */\n  var observableConcat = Observable.concat = function () {\n    var args;\n    if (Array.isArray(arguments[0])) {\n      args = arguments[0];\n    } else {\n      args = new Array(arguments.length);\n      for(var i = 0, len = arguments.length; i < len; i++) { args[i] = arguments[i]; }\n    }\n    return new ConcatObservable(args);\n  };\n\n  /**\n   * Concatenates an observable sequence of observable sequences.\n   * @returns {Observable} An observable sequence that contains the elements of each observed inner sequence, in sequential order.\n   */\n  observableProto.concatAll = function () {\n    return this.merge(1);\n  };\n\n  var MergeObservable = (function (__super__) {\n    inherits(MergeObservable, __super__);\n\n    function MergeObservable(source, maxConcurrent) {\n      this.source = source;\n      this.maxConcurrent = maxConcurrent;\n      __super__.call(this);\n    }\n\n    MergeObservable.prototype.subscribeCore = function(observer) {\n      var g = new CompositeDisposable();\n      g.add(this.source.subscribe(new MergeObserver(observer, this.maxConcurrent, g)));\n      return g;\n    };\n\n    return MergeObservable;\n\n  }(ObservableBase));\n\n  var MergeObserver = (function (__super__) {\n    function MergeObserver(o, max, g) {\n      this.o = o;\n      this.max = max;\n      this.g = g;\n      this.done = false;\n      this.q = [];\n      this.activeCount = 0;\n      __super__.call(this);\n    }\n\n    inherits(MergeObserver, __super__);\n\n    MergeObserver.prototype.handleSubscribe = function (xs) {\n      var sad = new SingleAssignmentDisposable();\n      this.g.add(sad);\n      isPromise(xs) && (xs = observableFromPromise(xs));\n      sad.setDisposable(xs.subscribe(new InnerObserver(this, sad)));\n    };\n\n    MergeObserver.prototype.next = function (innerSource) {\n      if(this.activeCount < this.max) {\n        this.activeCount++;\n        this.handleSubscribe(innerSource);\n      } else {\n        this.q.push(innerSource);\n      }\n    };\n    MergeObserver.prototype.error = function (e) { this.o.onError(e); };\n    MergeObserver.prototype.completed = function () { this.done = true; this.activeCount === 0 && this.o.onCompleted(); };\n\n    function InnerObserver(parent, sad) {\n      this.parent = parent;\n      this.sad = sad;\n      __super__.call(this);\n    }\n\n    inherits(InnerObserver, __super__);\n\n    InnerObserver.prototype.next = function (x) { this.parent.o.onNext(x); };\n    InnerObserver.prototype.error = function (e) { this.parent.o.onError(e); };\n    InnerObserver.prototype.completed = function () {\n      this.parent.g.remove(this.sad);\n      if (this.parent.q.length > 0) {\n        this.parent.handleSubscribe(this.parent.q.shift());\n      } else {\n        this.parent.activeCount--;\n        this.parent.done && this.parent.activeCount === 0 && this.parent.o.onCompleted();\n      }\n    };\n\n    return MergeObserver;\n  }(AbstractObserver));\n\n  /**\n  * Merges an observable sequence of observable sequences into an observable sequence, limiting the number of concurrent subscriptions to inner sequences.\n  * Or merges two observable sequences into a single observable sequence.\n  * @param {Mixed} [maxConcurrentOrOther] Maximum number of inner observable sequences being subscribed to concurrently or the second observable sequence.\n  * @returns {Observable} The observable sequence that merges the elements of the inner sequences.\n  */\n  observableProto.merge = function (maxConcurrentOrOther) {\n    return typeof maxConcurrentOrOther !== 'number' ?\n      observableMerge(this, maxConcurrentOrOther) :\n      new MergeObservable(this, maxConcurrentOrOther);\n  };\n\n  /**\n   * Merges all the observable sequences into a single observable sequence.\n   * The scheduler is optional and if not specified, the immediate scheduler is used.\n   * @returns {Observable} The observable sequence that merges the elements of the observable sequences.\n   */\n  var observableMerge = Observable.merge = function () {\n    var scheduler, sources = [], i, len = arguments.length;\n    if (!arguments[0]) {\n      scheduler = immediateScheduler;\n      for(i = 1; i < len; i++) { sources.push(arguments[i]); }\n    } else if (isScheduler(arguments[0])) {\n      scheduler = arguments[0];\n      for(i = 1; i < len; i++) { sources.push(arguments[i]); }\n    } else {\n      scheduler = immediateScheduler;\n      for(i = 0; i < len; i++) { sources.push(arguments[i]); }\n    }\n    if (Array.isArray(sources[0])) {\n      sources = sources[0];\n    }\n    return observableOf(scheduler, sources).mergeAll();\n  };\n\n  var CompositeError = Rx.CompositeError = function(errors) {\n    this.innerErrors = errors;\n    this.message = 'This contains multiple errors. Check the innerErrors';\n    Error.call(this);\n  };\n  CompositeError.prototype = Object.create(Error.prototype);\n  CompositeError.prototype.name = 'CompositeError';\n\n  var MergeDelayErrorObservable = (function(__super__) {\n    inherits(MergeDelayErrorObservable, __super__);\n    function MergeDelayErrorObservable(source) {\n      this.source = source;\n      __super__.call(this);\n    }\n\n    MergeDelayErrorObservable.prototype.subscribeCore = function (o) {\n      var group = new CompositeDisposable(),\n        m = new SingleAssignmentDisposable(),\n        state = { isStopped: false, errors: [], o: o };\n\n      group.add(m);\n      m.setDisposable(this.source.subscribe(new MergeDelayErrorObserver(group, state)));\n\n      return group;\n    };\n\n    return MergeDelayErrorObservable;\n  }(ObservableBase));\n\n  var MergeDelayErrorObserver = (function(__super__) {\n    inherits(MergeDelayErrorObserver, __super__);\n    function MergeDelayErrorObserver(group, state) {\n      this._group = group;\n      this._state = state;\n      __super__.call(this);\n    }\n\n    function setCompletion(o, errors) {\n      if (errors.length === 0) {\n        o.onCompleted();\n      } else if (errors.length === 1) {\n        o.onError(errors[0]);\n      } else {\n        o.onError(new CompositeError(errors));\n      }\n    }\n\n    MergeDelayErrorObserver.prototype.next = function (x) {\n      var inner = new SingleAssignmentDisposable();\n      this._group.add(inner);\n\n      // Check for promises support\n      isPromise(x) && (x = observableFromPromise(x));\n      inner.setDisposable(x.subscribe(new InnerObserver(inner, this._group, this._state)));\n    };\n\n    MergeDelayErrorObserver.prototype.error = function (e) {\n      this._state.errors.push(e);\n      this._state.isStopped = true;\n      this._group.length === 1 && setCompletion(this._state.o, this._state.errors);\n    };\n\n    MergeDelayErrorObserver.prototype.completed = function () {\n      this._state.isStopped = true;\n      this._group.length === 1 && setCompletion(this._state.o, this._state.errors);\n    };\n\n    inherits(InnerObserver, __super__);\n    function InnerObserver(inner, group, state) {\n      this._inner = inner;\n      this._group = group;\n      this._state = state;\n      __super__.call(this);\n    }\n\n    InnerObserver.prototype.next = function (x) { this._state.o.onNext(x); };\n    InnerObserver.prototype.error = function (e) {\n      this._state.errors.push(e);\n      this._group.remove(this._inner);\n      this._state.isStopped && this._group.length === 1 && setCompletion(this._state.o, this._state.errors);\n    };\n    InnerObserver.prototype.completed = function () {\n      this._group.remove(this._inner);\n      this._state.isStopped && this._group.length === 1 && setCompletion(this._state.o, this._state.errors);\n    };\n\n    return MergeDelayErrorObserver;\n  }(AbstractObserver));\n\n  /**\n  * Flattens an Observable that emits Observables into one Observable, in a way that allows an Observer to\n  * receive all successfully emitted items from all of the source Observables without being interrupted by\n  * an error notification from one of them.\n  *\n  * This behaves like Observable.prototype.mergeAll except that if any of the merged Observables notify of an\n  * error via the Observer's onError, mergeDelayError will refrain from propagating that\n  * error notification until all of the merged Observables have finished emitting items.\n  * @param {Array | Arguments} args Arguments or an array to merge.\n  * @returns {Observable} an Observable that emits all of the items emitted by the Observables emitted by the Observable\n  */\n  Observable.mergeDelayError = function() {\n    var args;\n    if (Array.isArray(arguments[0])) {\n      args = arguments[0];\n    } else {\n      var len = arguments.length;\n      args = new Array(len);\n      for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    }\n    var source = observableOf(null, args);\n    return new MergeDelayErrorObservable(source);\n  };\n\n  var MergeAllObservable = (function (__super__) {\n    inherits(MergeAllObservable, __super__);\n\n    function MergeAllObservable(source) {\n      this.source = source;\n      __super__.call(this);\n    }\n\n    MergeAllObservable.prototype.subscribeCore = function (o) {\n      var g = new CompositeDisposable(), m = new SingleAssignmentDisposable();\n      g.add(m);\n      m.setDisposable(this.source.subscribe(new MergeAllObserver(o, g)));\n      return g;\n    };\n\n    return MergeAllObservable;\n  }(ObservableBase));\n\n  var MergeAllObserver = (function (__super__) {\n    function MergeAllObserver(o, g) {\n      this.o = o;\n      this.g = g;\n      this.done = false;\n      __super__.call(this);\n    }\n\n    inherits(MergeAllObserver, __super__);\n\n    MergeAllObserver.prototype.next = function(innerSource) {\n      var sad = new SingleAssignmentDisposable();\n      this.g.add(sad);\n      isPromise(innerSource) && (innerSource = observableFromPromise(innerSource));\n      sad.setDisposable(innerSource.subscribe(new InnerObserver(this, sad)));\n    };\n\n    MergeAllObserver.prototype.error = function (e) {\n      this.o.onError(e);\n    };\n\n    MergeAllObserver.prototype.completed = function () {\n      this.done = true;\n      this.g.length === 1 && this.o.onCompleted();\n    };\n\n    function InnerObserver(parent, sad) {\n      this.parent = parent;\n      this.sad = sad;\n      __super__.call(this);\n    }\n\n    inherits(InnerObserver, __super__);\n\n    InnerObserver.prototype.next = function (x) {\n      this.parent.o.onNext(x);\n    };\n    InnerObserver.prototype.error = function (e) {\n      this.parent.o.onError(e);\n    };\n    InnerObserver.prototype.completed = function () {\n      this.parent.g.remove(this.sad);\n      this.parent.done && this.parent.g.length === 1 && this.parent.o.onCompleted();\n    };\n\n    return MergeAllObserver;\n  }(AbstractObserver));\n\n  /**\n  * Merges an observable sequence of observable sequences into an observable sequence.\n  * @returns {Observable} The observable sequence that merges the elements of the inner sequences.\n  */\n  observableProto.mergeAll = function () {\n    return new MergeAllObservable(this);\n  };\n\n  var SkipUntilObservable = (function(__super__) {\n    inherits(SkipUntilObservable, __super__);\n\n    function SkipUntilObservable(source, other) {\n      this._s = source;\n      this._o = isPromise(other) ? observableFromPromise(other) : other;\n      this._open = false;\n      __super__.call(this);\n    }\n\n    SkipUntilObservable.prototype.subscribeCore = function(o) {\n      var leftSubscription = new SingleAssignmentDisposable();\n      leftSubscription.setDisposable(this._s.subscribe(new SkipUntilSourceObserver(o, this)));\n\n      isPromise(this._o) && (this._o = observableFromPromise(this._o));\n\n      var rightSubscription = new SingleAssignmentDisposable();\n      rightSubscription.setDisposable(this._o.subscribe(new SkipUntilOtherObserver(o, this, rightSubscription)));\n\n      return new BinaryDisposable(leftSubscription, rightSubscription);\n    };\n\n    return SkipUntilObservable;\n  }(ObservableBase));\n\n  var SkipUntilSourceObserver = (function(__super__) {\n    inherits(SkipUntilSourceObserver, __super__);\n    function SkipUntilSourceObserver(o, p) {\n      this._o = o;\n      this._p = p;\n      __super__.call(this);\n    }\n\n    SkipUntilSourceObserver.prototype.next = function (x) {\n      this._p._open && this._o.onNext(x);\n    };\n\n    SkipUntilSourceObserver.prototype.error = function (err) {\n      this._o.onError(err);\n    };\n\n    SkipUntilSourceObserver.prototype.onCompleted = function () {\n      this._p._open && this._o.onCompleted();\n    };\n\n    return SkipUntilSourceObserver;\n  }(AbstractObserver));\n\n  var SkipUntilOtherObserver = (function(__super__) {\n    inherits(SkipUntilOtherObserver, __super__);\n    function SkipUntilOtherObserver(o, p, r) {\n      this._o = o;\n      this._p = p;\n      this._r = r;\n      __super__.call(this);\n    }\n\n    SkipUntilOtherObserver.prototype.next = function () {\n      this._p._open = true;\n      this._r.dispose();\n    };\n\n    SkipUntilOtherObserver.prototype.error = function (err) {\n      this._o.onError(err);\n    };\n\n    SkipUntilOtherObserver.prototype.onCompleted = function () {\n      this._r.dispose();\n    };\n\n    return SkipUntilOtherObserver;\n  }(AbstractObserver));\n\n  /**\n   * Returns the values from the source observable sequence only after the other observable sequence produces a value.\n   * @param {Observable | Promise} other The observable sequence or Promise that triggers propagation of elements of the source sequence.\n   * @returns {Observable} An observable sequence containing the elements of the source sequence starting from the point the other sequence triggered propagation.\n   */\n  observableProto.skipUntil = function (other) {\n    return new SkipUntilObservable(this, other);\n  };\n\n  var SwitchObservable = (function(__super__) {\n    inherits(SwitchObservable, __super__);\n    function SwitchObservable(source) {\n      this.source = source;\n      __super__.call(this);\n    }\n\n    SwitchObservable.prototype.subscribeCore = function (o) {\n      var inner = new SerialDisposable(), s = this.source.subscribe(new SwitchObserver(o, inner));\n      return new BinaryDisposable(s, inner);\n    };\n\n    inherits(SwitchObserver, AbstractObserver);\n    function SwitchObserver(o, inner) {\n      this.o = o;\n      this.inner = inner;\n      this.stopped = false;\n      this.latest = 0;\n      this.hasLatest = false;\n      AbstractObserver.call(this);\n    }\n\n    SwitchObserver.prototype.next = function (innerSource) {\n      var d = new SingleAssignmentDisposable(), id = ++this.latest;\n      this.hasLatest = true;\n      this.inner.setDisposable(d);\n      isPromise(innerSource) && (innerSource = observableFromPromise(innerSource));\n      d.setDisposable(innerSource.subscribe(new InnerObserver(this, id)));\n    };\n\n    SwitchObserver.prototype.error = function (e) {\n      this.o.onError(e);\n    };\n\n    SwitchObserver.prototype.completed = function () {\n      this.stopped = true;\n      !this.hasLatest && this.o.onCompleted();\n    };\n\n    inherits(InnerObserver, AbstractObserver);\n    function InnerObserver(parent, id) {\n      this.parent = parent;\n      this.id = id;\n      AbstractObserver.call(this);\n    }\n    InnerObserver.prototype.next = function (x) {\n      this.parent.latest === this.id && this.parent.o.onNext(x);\n    };\n\n    InnerObserver.prototype.error = function (e) {\n      this.parent.latest === this.id && this.parent.o.onError(e);\n    };\n\n    InnerObserver.prototype.completed = function () {\n      if (this.parent.latest === this.id) {\n        this.parent.hasLatest = false;\n        this.parent.stopped && this.parent.o.onCompleted();\n      }\n    };\n\n    return SwitchObservable;\n  }(ObservableBase));\n\n  /**\n  * Transforms an observable sequence of observable sequences into an observable sequence producing values only from the most recent observable sequence.\n  * @returns {Observable} The observable sequence that at any point in time produces the elements of the most recent inner observable sequence that has been received.\n  */\n  observableProto['switch'] = observableProto.switchLatest = function () {\n    return new SwitchObservable(this);\n  };\n\n  var TakeUntilObservable = (function(__super__) {\n    inherits(TakeUntilObservable, __super__);\n\n    function TakeUntilObservable(source, other) {\n      this.source = source;\n      this.other = isPromise(other) ? observableFromPromise(other) : other;\n      __super__.call(this);\n    }\n\n    TakeUntilObservable.prototype.subscribeCore = function(o) {\n      return new BinaryDisposable(\n        this.source.subscribe(o),\n        this.other.subscribe(new TakeUntilObserver(o))\n      );\n    };\n\n    return TakeUntilObservable;\n  }(ObservableBase));\n\n  var TakeUntilObserver = (function(__super__) {\n    inherits(TakeUntilObserver, __super__);\n    function TakeUntilObserver(o) {\n      this._o = o;\n      __super__.call(this);\n    }\n\n    TakeUntilObserver.prototype.next = function () {\n      this._o.onCompleted();\n    };\n\n    TakeUntilObserver.prototype.error = function (err) {\n      this._o.onError(err);\n    };\n\n    TakeUntilObserver.prototype.onCompleted = noop;\n\n    return TakeUntilObserver;\n  }(AbstractObserver));\n\n  /**\n   * Returns the values from the source observable sequence until the other observable sequence produces a value.\n   * @param {Observable | Promise} other Observable sequence or Promise that terminates propagation of elements of the source sequence.\n   * @returns {Observable} An observable sequence containing the elements of the source sequence up to the point the other sequence interrupted further propagation.\n   */\n  observableProto.takeUntil = function (other) {\n    return new TakeUntilObservable(this, other);\n  };\n\n  function falseFactory() { return false; }\n  function argumentsToArray() {\n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    return args;\n  }\n\n  var WithLatestFromObservable = (function(__super__) {\n    inherits(WithLatestFromObservable, __super__);\n    function WithLatestFromObservable(source, sources, resultSelector) {\n      this._s = source;\n      this._ss = sources;\n      this._cb = resultSelector;\n      __super__.call(this);\n    }\n\n    WithLatestFromObservable.prototype.subscribeCore = function (o) {\n      var len = this._ss.length;\n      var state = {\n        hasValue: arrayInitialize(len, falseFactory),\n        hasValueAll: false,\n        values: new Array(len)\n      };\n\n      var n = this._ss.length, subscriptions = new Array(n + 1);\n      for (var i = 0; i < n; i++) {\n        var other = this._ss[i], sad = new SingleAssignmentDisposable();\n        isPromise(other) && (other = observableFromPromise(other));\n        sad.setDisposable(other.subscribe(new WithLatestFromOtherObserver(o, i, state)));\n        subscriptions[i] = sad;\n      }\n\n      var outerSad = new SingleAssignmentDisposable();\n      outerSad.setDisposable(this._s.subscribe(new WithLatestFromSourceObserver(o, this._cb, state)));\n      subscriptions[n] = outerSad;\n\n      return new NAryDisposable(subscriptions);\n    };\n\n    return WithLatestFromObservable;\n  }(ObservableBase));\n\n  var WithLatestFromOtherObserver = (function (__super__) {\n    inherits(WithLatestFromOtherObserver, __super__);\n    function WithLatestFromOtherObserver(o, i, state) {\n      this._o = o;\n      this._i = i;\n      this._state = state;\n      __super__.call(this);\n    }\n\n    WithLatestFromOtherObserver.prototype.next = function (x) {\n      this._state.values[this._i] = x;\n      this._state.hasValue[this._i] = true;\n      this._state.hasValueAll = this._state.hasValue.every(identity);\n    };\n\n    WithLatestFromOtherObserver.prototype.error = function (e) {\n      this._o.onError(e);\n    };\n\n    WithLatestFromOtherObserver.prototype.completed = noop;\n\n    return WithLatestFromOtherObserver;\n  }(AbstractObserver));\n\n  var WithLatestFromSourceObserver = (function (__super__) {\n    inherits(WithLatestFromSourceObserver, __super__);\n    function WithLatestFromSourceObserver(o, cb, state) {\n      this._o = o;\n      this._cb = cb;\n      this._state = state;\n      __super__.call(this);\n    }\n\n    WithLatestFromSourceObserver.prototype.next = function (x) {\n      var allValues = [x].concat(this._state.values);\n      if (!this._state.hasValueAll) { return; }\n      var res = tryCatch(this._cb).apply(null, allValues);\n      if (res === errorObj) { return this._o.onError(res.e); }\n      this._o.onNext(res);\n    };\n\n    WithLatestFromSourceObserver.prototype.error = function (e) {\n      this._o.onError(e);\n    };\n\n    WithLatestFromSourceObserver.prototype.completed = function () {\n      this._o.onCompleted();\n    };\n\n    return WithLatestFromSourceObserver;\n  }(AbstractObserver));\n\n  /**\n   * Merges the specified observable sequences into one observable sequence by using the selector function only when the (first) source observable sequence produces an element.\n   * @returns {Observable} An observable sequence containing the result of combining elements of the sources using the specified result selector function.\n   */\n  observableProto.withLatestFrom = function () {\n    if (arguments.length === 0) { throw new Error('invalid arguments'); }\n\n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    var resultSelector = isFunction(args[len - 1]) ? args.pop() : argumentsToArray;\n    Array.isArray(args[0]) && (args = args[0]);\n\n    return new WithLatestFromObservable(this, args, resultSelector);\n  };\n\n  function falseFactory() { return false; }\n  function emptyArrayFactory() { return []; }\n\n  var ZipObservable = (function(__super__) {\n    inherits(ZipObservable, __super__);\n    function ZipObservable(sources, resultSelector) {\n      this._s = sources;\n      this._cb = resultSelector;\n      __super__.call(this);\n    }\n\n    ZipObservable.prototype.subscribeCore = function(observer) {\n      var n = this._s.length,\n          subscriptions = new Array(n),\n          done = arrayInitialize(n, falseFactory),\n          q = arrayInitialize(n, emptyArrayFactory);\n\n      for (var i = 0; i < n; i++) {\n        var source = this._s[i], sad = new SingleAssignmentDisposable();\n        subscriptions[i] = sad;\n        isPromise(source) && (source = observableFromPromise(source));\n        sad.setDisposable(source.subscribe(new ZipObserver(observer, i, this, q, done)));\n      }\n\n      return new NAryDisposable(subscriptions);\n    };\n\n    return ZipObservable;\n  }(ObservableBase));\n\n  var ZipObserver = (function (__super__) {\n    inherits(ZipObserver, __super__);\n    function ZipObserver(o, i, p, q, d) {\n      this._o = o;\n      this._i = i;\n      this._p = p;\n      this._q = q;\n      this._d = d;\n      __super__.call(this);\n    }\n\n    function notEmpty(x) { return x.length > 0; }\n    function shiftEach(x) { return x.shift(); }\n    function notTheSame(i) {\n      return function (x, j) {\n        return j !== i;\n      };\n    }\n\n    ZipObserver.prototype.next = function (x) {\n      this._q[this._i].push(x);\n      if (this._q.every(notEmpty)) {\n        var queuedValues = this._q.map(shiftEach);\n        var res = tryCatch(this._p._cb).apply(null, queuedValues);\n        if (res === errorObj) { return this._o.onError(res.e); }\n        this._o.onNext(res);\n      } else if (this._d.filter(notTheSame(this._i)).every(identity)) {\n        this._o.onCompleted();\n      }\n    };\n\n    ZipObserver.prototype.error = function (e) {\n      this._o.onError(e);\n    };\n\n    ZipObserver.prototype.completed = function () {\n      this._d[this._i] = true;\n      this._d.every(identity) && this._o.onCompleted();\n    };\n\n    return ZipObserver;\n  }(AbstractObserver));\n\n  /**\n   * Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences or an array have produced an element at a corresponding index.\n   * The last element in the arguments must be a function to invoke for each series of elements at corresponding indexes in the args.\n   * @returns {Observable} An observable sequence containing the result of combining elements of the args using the specified result selector function.\n   */\n  observableProto.zip = function () {\n    if (arguments.length === 0) { throw new Error('invalid arguments'); }\n\n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    var resultSelector = isFunction(args[len - 1]) ? args.pop() : argumentsToArray;\n    Array.isArray(args[0]) && (args = args[0]);\n\n    var parent = this;\n    args.unshift(parent);\n\n    return new ZipObservable(args, resultSelector);\n  };\n\n  /**\n   * Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index.\n   * @param arguments Observable sources.\n   * @param {Function} resultSelector Function to invoke for each series of elements at corresponding indexes in the sources.\n   * @returns {Observable} An observable sequence containing the result of combining elements of the sources using the specified result selector function.\n   */\n  Observable.zip = function () {\n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    if (Array.isArray(args[0])) {\n      args = isFunction(args[1]) ? args[0].concat(args[1]) : args[0];\n    }\n    var first = args.shift();\n    return first.zip.apply(first, args);\n  };\n\nfunction falseFactory() { return false; }\nfunction emptyArrayFactory() { return []; }\nfunction argumentsToArray() {\n  var len = arguments.length, args = new Array(len);\n  for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n  return args;\n}\n\nvar ZipIterableObservable = (function(__super__) {\n  inherits(ZipIterableObservable, __super__);\n  function ZipIterableObservable(sources, cb) {\n    this.sources = sources;\n    this._cb = cb;\n    __super__.call(this);\n  }\n\n  ZipIterableObservable.prototype.subscribeCore = function (o) {\n    var sources = this.sources, len = sources.length, subscriptions = new Array(len);\n\n    var state = {\n      q: arrayInitialize(len, emptyArrayFactory),\n      done: arrayInitialize(len, falseFactory),\n      cb: this._cb,\n      o: o\n    };\n\n    for (var i = 0; i < len; i++) {\n      (function (i) {\n        var source = sources[i], sad = new SingleAssignmentDisposable();\n        (isArrayLike(source) || isIterable(source)) && (source = observableFrom(source));\n\n        subscriptions[i] = sad;\n        sad.setDisposable(source.subscribe(new ZipIterableObserver(state, i)));\n      }(i));\n    }\n\n    return new NAryDisposable(subscriptions);\n  };\n\n  return ZipIterableObservable;\n}(ObservableBase));\n\nvar ZipIterableObserver = (function (__super__) {\n  inherits(ZipIterableObserver, __super__);\n  function ZipIterableObserver(s, i) {\n    this._s = s;\n    this._i = i;\n    __super__.call(this);\n  }\n\n  function notEmpty(x) { return x.length > 0; }\n  function shiftEach(x) { return x.shift(); }\n  function notTheSame(i) {\n    return function (x, j) {\n      return j !== i;\n    };\n  }\n\n  ZipIterableObserver.prototype.next = function (x) {\n    this._s.q[this._i].push(x);\n    if (this._s.q.every(notEmpty)) {\n      var queuedValues = this._s.q.map(shiftEach),\n          res = tryCatch(this._s.cb).apply(null, queuedValues);\n      if (res === errorObj) { return this._s.o.onError(res.e); }\n      this._s.o.onNext(res);\n    } else if (this._s.done.filter(notTheSame(this._i)).every(identity)) {\n      this._s.o.onCompleted();\n    }\n  };\n\n  ZipIterableObserver.prototype.error = function (e) { this._s.o.onError(e); };\n\n  ZipIterableObserver.prototype.completed = function () {\n    this._s.done[this._i] = true;\n    this._s.done.every(identity) && this._s.o.onCompleted();\n  };\n\n  return ZipIterableObserver;\n}(AbstractObserver));\n\n/**\n * Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences or an array have produced an element at a corresponding index.\n * The last element in the arguments must be a function to invoke for each series of elements at corresponding indexes in the args.\n * @returns {Observable} An observable sequence containing the result of combining elements of the args using the specified result selector function.\n */\nobservableProto.zipIterable = function () {\n  if (arguments.length === 0) { throw new Error('invalid arguments'); }\n\n  var len = arguments.length, args = new Array(len);\n  for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n  var resultSelector = isFunction(args[len - 1]) ? args.pop() : argumentsToArray;\n\n  var parent = this;\n  args.unshift(parent);\n  return new ZipIterableObservable(args, resultSelector);\n};\n\n  function asObservable(source) {\n    return function subscribe(o) { return source.subscribe(o); };\n  }\n\n  /**\n   *  Hides the identity of an observable sequence.\n   * @returns {Observable} An observable sequence that hides the identity of the source sequence.\n   */\n  observableProto.asObservable = function () {\n    return new AnonymousObservable(asObservable(this), this);\n  };\n\n  var DematerializeObservable = (function (__super__) {\n    inherits(DematerializeObservable, __super__);\n    function DematerializeObservable(source) {\n      this.source = source;\n      __super__.call(this);\n    }\n\n    DematerializeObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new DematerializeObserver(o));\n    };\n\n    return DematerializeObservable;\n  }(ObservableBase));\n\n  var DematerializeObserver = (function (__super__) {\n    inherits(DematerializeObserver, __super__);\n\n    function DematerializeObserver(o) {\n      this._o = o;\n      __super__.call(this);\n    }\n\n    DematerializeObserver.prototype.next = function (x) { x.accept(this._o); };\n    DematerializeObserver.prototype.error = function (e) { this._o.onError(e); };\n    DematerializeObserver.prototype.completed = function () { this._o.onCompleted(); };\n\n    return DematerializeObserver;\n  }(AbstractObserver));\n\n  /**\n   * Dematerializes the explicit notification values of an observable sequence as implicit notifications.\n   * @returns {Observable} An observable sequence exhibiting the behavior corresponding to the source sequence's notification values.\n   */\n  observableProto.dematerialize = function () {\n    return new DematerializeObservable(this);\n  };\n\n  var DistinctUntilChangedObservable = (function(__super__) {\n    inherits(DistinctUntilChangedObservable, __super__);\n    function DistinctUntilChangedObservable(source, keyFn, comparer) {\n      this.source = source;\n      this.keyFn = keyFn;\n      this.comparer = comparer;\n      __super__.call(this);\n    }\n\n    DistinctUntilChangedObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new DistinctUntilChangedObserver(o, this.keyFn, this.comparer));\n    };\n\n    return DistinctUntilChangedObservable;\n  }(ObservableBase));\n\n  var DistinctUntilChangedObserver = (function(__super__) {\n    inherits(DistinctUntilChangedObserver, __super__);\n    function DistinctUntilChangedObserver(o, keyFn, comparer) {\n      this.o = o;\n      this.keyFn = keyFn;\n      this.comparer = comparer;\n      this.hasCurrentKey = false;\n      this.currentKey = null;\n      __super__.call(this);\n    }\n\n    DistinctUntilChangedObserver.prototype.next = function (x) {\n      var key = x, comparerEquals;\n      if (isFunction(this.keyFn)) {\n        key = tryCatch(this.keyFn)(x);\n        if (key === errorObj) { return this.o.onError(key.e); }\n      }\n      if (this.hasCurrentKey) {\n        comparerEquals = tryCatch(this.comparer)(this.currentKey, key);\n        if (comparerEquals === errorObj) { return this.o.onError(comparerEquals.e); }\n      }\n      if (!this.hasCurrentKey || !comparerEquals) {\n        this.hasCurrentKey = true;\n        this.currentKey = key;\n        this.o.onNext(x);\n      }\n    };\n    DistinctUntilChangedObserver.prototype.error = function(e) {\n      this.o.onError(e);\n    };\n    DistinctUntilChangedObserver.prototype.completed = function () {\n      this.o.onCompleted();\n    };\n\n    return DistinctUntilChangedObserver;\n  }(AbstractObserver));\n\n  /**\n  *  Returns an observable sequence that contains only distinct contiguous elements according to the keyFn and the comparer.\n  * @param {Function} [keyFn] A function to compute the comparison key for each element. If not provided, it projects the value.\n  * @param {Function} [comparer] Equality comparer for computed key values. If not provided, defaults to an equality comparer function.\n  * @returns {Observable} An observable sequence only containing the distinct contiguous elements, based on a computed key value, from the source sequence.\n  */\n  observableProto.distinctUntilChanged = function (keyFn, comparer) {\n    comparer || (comparer = defaultComparer);\n    return new DistinctUntilChangedObservable(this, keyFn, comparer);\n  };\n\n  var TapObservable = (function(__super__) {\n    inherits(TapObservable,__super__);\n    function TapObservable(source, observerOrOnNext, onError, onCompleted) {\n      this.source = source;\n      this._oN = observerOrOnNext;\n      this._oE = onError;\n      this._oC = onCompleted;\n      __super__.call(this);\n    }\n\n    TapObservable.prototype.subscribeCore = function(o) {\n      return this.source.subscribe(new InnerObserver(o, this));\n    };\n\n    inherits(InnerObserver, AbstractObserver);\n    function InnerObserver(o, p) {\n      this.o = o;\n      this.t = !p._oN || isFunction(p._oN) ?\n        observerCreate(p._oN || noop, p._oE || noop, p._oC || noop) :\n        p._oN;\n      this.isStopped = false;\n      AbstractObserver.call(this);\n    }\n    InnerObserver.prototype.next = function(x) {\n      var res = tryCatch(this.t.onNext).call(this.t, x);\n      if (res === errorObj) { this.o.onError(res.e); }\n      this.o.onNext(x);\n    };\n    InnerObserver.prototype.error = function(err) {\n      var res = tryCatch(this.t.onError).call(this.t, err);\n      if (res === errorObj) { return this.o.onError(res.e); }\n      this.o.onError(err);\n    };\n    InnerObserver.prototype.completed = function() {\n      var res = tryCatch(this.t.onCompleted).call(this.t);\n      if (res === errorObj) { return this.o.onError(res.e); }\n      this.o.onCompleted();\n    };\n\n    return TapObservable;\n  }(ObservableBase));\n\n  /**\n  *  Invokes an action for each element in the observable sequence and invokes an action upon graceful or exceptional termination of the observable sequence.\n  *  This method can be used for debugging, logging, etc. of query behavior by intercepting the message stream to run arbitrary actions for messages on the pipeline.\n  * @param {Function | Observer} observerOrOnNext Action to invoke for each element in the observable sequence or an o.\n  * @param {Function} [onError]  Action to invoke upon exceptional termination of the observable sequence. Used if only the observerOrOnNext parameter is also a function.\n  * @param {Function} [onCompleted]  Action to invoke upon graceful termination of the observable sequence. Used if only the observerOrOnNext parameter is also a function.\n  * @returns {Observable} The source sequence with the side-effecting behavior applied.\n  */\n  observableProto['do'] = observableProto.tap = observableProto.doAction = function (observerOrOnNext, onError, onCompleted) {\n    return new TapObservable(this, observerOrOnNext, onError, onCompleted);\n  };\n\n  /**\n  *  Invokes an action for each element in the observable sequence.\n  *  This method can be used for debugging, logging, etc. of query behavior by intercepting the message stream to run arbitrary actions for messages on the pipeline.\n  * @param {Function} onNext Action to invoke for each element in the observable sequence.\n  * @param {Any} [thisArg] Object to use as this when executing callback.\n  * @returns {Observable} The source sequence with the side-effecting behavior applied.\n  */\n  observableProto.doOnNext = observableProto.tapOnNext = function (onNext, thisArg) {\n    return this.tap(typeof thisArg !== 'undefined' ? function (x) { onNext.call(thisArg, x); } : onNext);\n  };\n\n  /**\n  *  Invokes an action upon exceptional termination of the observable sequence.\n  *  This method can be used for debugging, logging, etc. of query behavior by intercepting the message stream to run arbitrary actions for messages on the pipeline.\n  * @param {Function} onError Action to invoke upon exceptional termination of the observable sequence.\n  * @param {Any} [thisArg] Object to use as this when executing callback.\n  * @returns {Observable} The source sequence with the side-effecting behavior applied.\n  */\n  observableProto.doOnError = observableProto.tapOnError = function (onError, thisArg) {\n    return this.tap(noop, typeof thisArg !== 'undefined' ? function (e) { onError.call(thisArg, e); } : onError);\n  };\n\n  /**\n  *  Invokes an action upon graceful termination of the observable sequence.\n  *  This method can be used for debugging, logging, etc. of query behavior by intercepting the message stream to run arbitrary actions for messages on the pipeline.\n  * @param {Function} onCompleted Action to invoke upon graceful termination of the observable sequence.\n  * @param {Any} [thisArg] Object to use as this when executing callback.\n  * @returns {Observable} The source sequence with the side-effecting behavior applied.\n  */\n  observableProto.doOnCompleted = observableProto.tapOnCompleted = function (onCompleted, thisArg) {\n    return this.tap(noop, null, typeof thisArg !== 'undefined' ? function () { onCompleted.call(thisArg); } : onCompleted);\n  };\n\n  var FinallyObservable = (function (__super__) {\n    inherits(FinallyObservable, __super__);\n    function FinallyObservable(source, fn, thisArg) {\n      this.source = source;\n      this._fn = bindCallback(fn, thisArg, 0);\n      __super__.call(this);\n    }\n\n    FinallyObservable.prototype.subscribeCore = function (o) {\n      var d = tryCatch(this.source.subscribe).call(this.source, o);\n      if (d === errorObj) {\n        this._fn();\n        thrower(d.e);\n      }\n\n      return new FinallyDisposable(d, this._fn);\n    };\n\n    function FinallyDisposable(s, fn) {\n      this.isDisposed = false;\n      this._s = s;\n      this._fn = fn;\n    }\n    FinallyDisposable.prototype.dispose = function () {\n      if (!this.isDisposed) {\n        var res = tryCatch(this._s.dispose).call(this._s);\n        this._fn();\n        res === errorObj && thrower(res.e);\n      }\n    };\n\n    return FinallyObservable;\n\n  }(ObservableBase));\n\n  /**\n   *  Invokes a specified action after the source observable sequence terminates gracefully or exceptionally.\n   * @param {Function} finallyAction Action to invoke after the source observable sequence terminates.\n   * @returns {Observable} Source sequence with the action-invoking termination behavior applied.\n   */\n  observableProto['finally'] = function (action, thisArg) {\n    return new FinallyObservable(this, action, thisArg);\n  };\n\n  var IgnoreElementsObservable = (function(__super__) {\n    inherits(IgnoreElementsObservable, __super__);\n\n    function IgnoreElementsObservable(source) {\n      this.source = source;\n      __super__.call(this);\n    }\n\n    IgnoreElementsObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new InnerObserver(o));\n    };\n\n    function InnerObserver(o) {\n      this.o = o;\n      this.isStopped = false;\n    }\n    InnerObserver.prototype.onNext = noop;\n    InnerObserver.prototype.onError = function (err) {\n      if(!this.isStopped) {\n        this.isStopped = true;\n        this.o.onError(err);\n      }\n    };\n    InnerObserver.prototype.onCompleted = function () {\n      if(!this.isStopped) {\n        this.isStopped = true;\n        this.o.onCompleted();\n      }\n    };\n    InnerObserver.prototype.dispose = function() { this.isStopped = true; };\n    InnerObserver.prototype.fail = function (e) {\n      if (!this.isStopped) {\n        this.isStopped = true;\n        this.observer.onError(e);\n        return true;\n      }\n\n      return false;\n    };\n\n    return IgnoreElementsObservable;\n  }(ObservableBase));\n\n  /**\n   *  Ignores all elements in an observable sequence leaving only the termination messages.\n   * @returns {Observable} An empty observable sequence that signals termination, successful or exceptional, of the source sequence.\n   */\n  observableProto.ignoreElements = function () {\n    return new IgnoreElementsObservable(this);\n  };\n\n  var MaterializeObservable = (function (__super__) {\n    inherits(MaterializeObservable, __super__);\n    function MaterializeObservable(source, fn) {\n      this.source = source;\n      __super__.call(this);\n    }\n\n    MaterializeObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new MaterializeObserver(o));\n    };\n\n    return MaterializeObservable;\n  }(ObservableBase));\n\n  var MaterializeObserver = (function (__super__) {\n    inherits(MaterializeObserver, __super__);\n\n    function MaterializeObserver(o) {\n      this._o = o;\n      __super__.call(this);\n    }\n\n    MaterializeObserver.prototype.next = function (x) { this._o.onNext(notificationCreateOnNext(x)) };\n    MaterializeObserver.prototype.error = function (e) { this._o.onNext(notificationCreateOnError(e)); this._o.onCompleted(); };\n    MaterializeObserver.prototype.completed = function () { this._o.onNext(notificationCreateOnCompleted()); this._o.onCompleted(); };\n\n    return MaterializeObserver;\n  }(AbstractObserver));\n\n  /**\n   *  Materializes the implicit notifications of an observable sequence as explicit notification values.\n   * @returns {Observable} An observable sequence containing the materialized notification values from the source sequence.\n   */\n  observableProto.materialize = function () {\n    return new MaterializeObservable(this);\n  };\n\n  /**\n   *  Repeats the observable sequence a specified number of times. If the repeat count is not specified, the sequence repeats indefinitely.\n   * @param {Number} [repeatCount]  Number of times to repeat the sequence. If not provided, repeats the sequence indefinitely.\n   * @returns {Observable} The observable sequence producing the elements of the given sequence repeatedly.\n   */\n  observableProto.repeat = function (repeatCount) {\n    return enumerableRepeat(this, repeatCount).concat();\n  };\n\n  /**\n   *  Repeats the source observable sequence the specified number of times or until it successfully terminates. If the retry count is not specified, it retries indefinitely.\n   *  Note if you encounter an error and want it to retry once, then you must use .retry(2);\n   *\n   * @example\n   *  var res = retried = retry.repeat();\n   *  var res = retried = retry.repeat(2);\n   * @param {Number} [retryCount]  Number of times to retry the sequence. If not provided, retry the sequence indefinitely.\n   * @returns {Observable} An observable sequence producing the elements of the given sequence repeatedly until it terminates successfully.\n   */\n  observableProto.retry = function (retryCount) {\n    return enumerableRepeat(this, retryCount).catchError();\n  };\n\n  function repeat(value) {\n    return {\n      '@@iterator': function () {\n        return {\n          next: function () {\n            return { done: false, value: value };\n          }\n        };\n      }\n    };\n  }\n\n  var RetryWhenObservable = (function(__super__) {\n    function createDisposable(state) {\n      return {\n        isDisposed: false,\n        dispose: function () {\n          if (!this.isDisposed) {\n            this.isDisposed = true;\n            state.isDisposed = true;\n          }\n        }\n      };\n    }\n\n    function RetryWhenObservable(source, notifier) {\n      this.source = source;\n      this._notifier = notifier;\n      __super__.call(this);\n    }\n\n    inherits(RetryWhenObservable, __super__);\n\n    RetryWhenObservable.prototype.subscribeCore = function (o) {\n      var exceptions = new Subject(),\n        notifier = new Subject(),\n        handled = this._notifier(exceptions),\n        notificationDisposable = handled.subscribe(notifier);\n\n      var e = this.source['@@iterator']();\n\n      var state = { isDisposed: false },\n        lastError,\n        subscription = new SerialDisposable();\n      var cancelable = currentThreadScheduler.scheduleRecursive(null, function (_, recurse) {\n        if (state.isDisposed) { return; }\n        var currentItem = e.next();\n\n        if (currentItem.done) {\n          if (lastError) {\n            o.onError(lastError);\n          } else {\n            o.onCompleted();\n          }\n          return;\n        }\n\n        // Check if promise\n        var currentValue = currentItem.value;\n        isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));\n\n        var outer = new SingleAssignmentDisposable();\n        var inner = new SingleAssignmentDisposable();\n        subscription.setDisposable(new BinaryDisposable(inner, outer));\n        outer.setDisposable(currentValue.subscribe(\n          function(x) { o.onNext(x); },\n          function (exn) {\n            inner.setDisposable(notifier.subscribe(recurse, function(ex) {\n              o.onError(ex);\n            }, function() {\n              o.onCompleted();\n            }));\n\n            exceptions.onNext(exn);\n            outer.dispose();\n          },\n          function() { o.onCompleted(); }));\n      });\n\n      return new NAryDisposable([notificationDisposable, subscription, cancelable, createDisposable(state)]);\n    };\n\n    return RetryWhenObservable;\n  }(ObservableBase));\n\n  observableProto.retryWhen = function (notifier) {\n    return new RetryWhenObservable(repeat(this), notifier);\n  };\n\n  function repeat(value) {\n    return {\n      '@@iterator': function () {\n        return {\n          next: function () {\n            return { done: false, value: value };\n          }\n        };\n      }\n    };\n  }\n\n  var RepeatWhenObservable = (function(__super__) {\n    function createDisposable(state) {\n      return {\n        isDisposed: false,\n        dispose: function () {\n          if (!this.isDisposed) {\n            this.isDisposed = true;\n            state.isDisposed = true;\n          }\n        }\n      };\n    }\n\n    function RepeatWhenObservable(source, notifier) {\n      this.source = source;\n      this._notifier = notifier;\n      __super__.call(this);\n    }\n\n    inherits(RepeatWhenObservable, __super__);\n\n    RepeatWhenObservable.prototype.subscribeCore = function (o) {\n      var completions = new Subject(),\n        notifier = new Subject(),\n        handled = this._notifier(completions),\n        notificationDisposable = handled.subscribe(notifier);\n\n      var e = this.source['@@iterator']();\n\n      var state = { isDisposed: false },\n        lastError,\n        subscription = new SerialDisposable();\n      var cancelable = currentThreadScheduler.scheduleRecursive(null, function (_, recurse) {\n        if (state.isDisposed) { return; }\n        var currentItem = e.next();\n\n        if (currentItem.done) {\n          if (lastError) {\n            o.onError(lastError);\n          } else {\n            o.onCompleted();\n          }\n          return;\n        }\n\n        // Check if promise\n        var currentValue = currentItem.value;\n        isPromise(currentValue) && (currentValue = observableFromPromise(currentValue));\n\n        var outer = new SingleAssignmentDisposable();\n        var inner = new SingleAssignmentDisposable();\n        subscription.setDisposable(new BinaryDisposable(inner, outer));\n        outer.setDisposable(currentValue.subscribe(\n          function(x) { o.onNext(x); },\n          function (exn) { o.onError(exn); },\n          function() {\n            inner.setDisposable(notifier.subscribe(recurse, function(ex) {\n              o.onError(ex);\n            }, function() {\n              o.onCompleted();\n            }));\n\n            completions.onNext(null);\n            outer.dispose();\n          }));\n      });\n\n      return new NAryDisposable([notificationDisposable, subscription, cancelable, createDisposable(state)]);\n    };\n\n    return RepeatWhenObservable;\n  }(ObservableBase));\n\n  observableProto.repeatWhen = function (notifier) {\n    return new RepeatWhenObservable(repeat(this), notifier);\n  };\n\n  var ScanObservable = (function(__super__) {\n    inherits(ScanObservable, __super__);\n    function ScanObservable(source, accumulator, hasSeed, seed) {\n      this.source = source;\n      this.accumulator = accumulator;\n      this.hasSeed = hasSeed;\n      this.seed = seed;\n      __super__.call(this);\n    }\n\n    ScanObservable.prototype.subscribeCore = function(o) {\n      return this.source.subscribe(new ScanObserver(o,this));\n    };\n\n    return ScanObservable;\n  }(ObservableBase));\n\n  var ScanObserver = (function (__super__) {\n    inherits(ScanObserver, __super__);\n    function ScanObserver(o, parent) {\n      this._o = o;\n      this._p = parent;\n      this._fn = parent.accumulator;\n      this._hs = parent.hasSeed;\n      this._s = parent.seed;\n      this._ha = false;\n      this._a = null;\n      this._hv = false;\n      this._i = 0;\n      __super__.call(this);\n    }\n\n    ScanObserver.prototype.next = function (x) {\n      !this._hv && (this._hv = true);\n      if (this._ha) {\n        this._a = tryCatch(this._fn)(this._a, x, this._i, this._p);\n      } else {\n        this._a = this._hs ? tryCatch(this._fn)(this._s, x, this._i, this._p) : x;\n        this._ha = true;\n      }\n      if (this._a === errorObj) { return this._o.onError(this._a.e); }\n      this._o.onNext(this._a);\n      this._i++;\n    };\n\n    ScanObserver.prototype.error = function (e) {\n      this._o.onError(e);\n    };\n\n    ScanObserver.prototype.completed = function () {\n      !this._hv && this._hs && this._o.onNext(this._s);\n      this._o.onCompleted();\n    };\n\n    return ScanObserver;\n  }(AbstractObserver));\n\n  /**\n  *  Applies an accumulator function over an observable sequence and returns each intermediate result. The optional seed value is used as the initial accumulator value.\n  *  For aggregation behavior with no intermediate results, see Observable.aggregate.\n  * @param {Mixed} [seed] The initial accumulator value.\n  * @param {Function} accumulator An accumulator function to be invoked on each element.\n  * @returns {Observable} An observable sequence containing the accumulated values.\n  */\n  observableProto.scan = function () {\n    var hasSeed = false, seed, accumulator = arguments[0];\n    if (arguments.length === 2) {\n      hasSeed = true;\n      seed = arguments[1];\n    }\n    return new ScanObservable(this, accumulator, hasSeed, seed);\n  };\n\n  var SkipLastObservable = (function (__super__) {\n    inherits(SkipLastObservable, __super__);\n    function SkipLastObservable(source, c) {\n      this.source = source;\n      this._c = c;\n      __super__.call(this);\n    }\n\n    SkipLastObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new SkipLastObserver(o, this._c));\n    };\n\n    return SkipLastObservable;\n  }(ObservableBase));\n\n  var SkipLastObserver = (function (__super__) {\n    inherits(SkipLastObserver, __super__);\n    function SkipLastObserver(o, c) {\n      this._o = o;\n      this._c = c;\n      this._q = [];\n      __super__.call(this);\n    }\n\n    SkipLastObserver.prototype.next = function (x) {\n      this._q.push(x);\n      this._q.length > this._c && this._o.onNext(this._q.shift());\n    };\n\n    SkipLastObserver.prototype.error = function (e) {\n      this._o.onError(e);\n    };\n\n    SkipLastObserver.prototype.completed = function () {\n      this._o.onCompleted();\n    };\n\n    return SkipLastObserver;\n  }(AbstractObserver));\n\n  /**\n   *  Bypasses a specified number of elements at the end of an observable sequence.\n   * @description\n   *  This operator accumulates a queue with a length enough to store the first `count` elements. As more elements are\n   *  received, elements are taken from the front of the queue and produced on the result sequence. This causes elements to be delayed.\n   * @param count Number of elements to bypass at the end of the source sequence.\n   * @returns {Observable} An observable sequence containing the source sequence elements except for the bypassed ones at the end.\n   */\n  observableProto.skipLast = function (count) {\n    if (count < 0) { throw new ArgumentOutOfRangeError(); }\n    return new SkipLastObservable(this, count);\n  };\n\n  /**\n   *  Prepends a sequence of values to an observable sequence with an optional scheduler and an argument list of values to prepend.\n   *  @example\n   *  var res = source.startWith(1, 2, 3);\n   *  var res = source.startWith(Rx.Scheduler.timeout, 1, 2, 3);\n   * @param {Arguments} args The specified values to prepend to the observable sequence\n   * @returns {Observable} The source sequence prepended with the specified values.\n   */\n  observableProto.startWith = function () {\n    var values, scheduler, start = 0;\n    if (!!arguments.length && isScheduler(arguments[0])) {\n      scheduler = arguments[0];\n      start = 1;\n    } else {\n      scheduler = immediateScheduler;\n    }\n    for(var args = [], i = start, len = arguments.length; i < len; i++) { args.push(arguments[i]); }\n    return enumerableOf([observableFromArray(args, scheduler), this]).concat();\n  };\n\n  var TakeLastObserver = (function (__super__) {\n    inherits(TakeLastObserver, __super__);\n    function TakeLastObserver(o, c) {\n      this._o = o;\n      this._c = c;\n      this._q = [];\n      __super__.call(this);\n    }\n\n    TakeLastObserver.prototype.next = function (x) {\n      this._q.push(x);\n      this._q.length > this._c && this._q.shift();\n    };\n\n    TakeLastObserver.prototype.error = function (e) {\n      this._o.onError(e);\n    };\n\n    TakeLastObserver.prototype.completed = function () {\n      while (this._q.length > 0) { this._o.onNext(this._q.shift()); }\n      this._o.onCompleted();\n    };\n\n    return TakeLastObserver;\n  }(AbstractObserver));\n\n  /**\n   *  Returns a specified number of contiguous elements from the end of an observable sequence.\n   * @description\n   *  This operator accumulates a buffer with a length enough to store elements count elements. Upon completion of\n   *  the source sequence, this buffer is drained on the result sequence. This causes the elements to be delayed.\n   * @param {Number} count Number of elements to take from the end of the source sequence.\n   * @returns {Observable} An observable sequence containing the specified number of elements from the end of the source sequence.\n   */\n  observableProto.takeLast = function (count) {\n    if (count < 0) { throw new ArgumentOutOfRangeError(); }\n    var source = this;\n    return new AnonymousObservable(function (o) {\n      return source.subscribe(new TakeLastObserver(o, count));\n    }, source);\n  };\n\nobservableProto.flatMapConcat = observableProto.concatMap = function(selector, resultSelector, thisArg) {\n    return new FlatMapObservable(this, selector, resultSelector, thisArg).merge(1);\n};\n  var MapObservable = (function (__super__) {\n    inherits(MapObservable, __super__);\n\n    function MapObservable(source, selector, thisArg) {\n      this.source = source;\n      this.selector = bindCallback(selector, thisArg, 3);\n      __super__.call(this);\n    }\n\n    function innerMap(selector, self) {\n      return function (x, i, o) { return selector.call(this, self.selector(x, i, o), i, o); };\n    }\n\n    MapObservable.prototype.internalMap = function (selector, thisArg) {\n      return new MapObservable(this.source, innerMap(selector, this), thisArg);\n    };\n\n    MapObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new InnerObserver(o, this.selector, this));\n    };\n\n    inherits(InnerObserver, AbstractObserver);\n    function InnerObserver(o, selector, source) {\n      this.o = o;\n      this.selector = selector;\n      this.source = source;\n      this.i = 0;\n      AbstractObserver.call(this);\n    }\n\n    InnerObserver.prototype.next = function(x) {\n      var result = tryCatch(this.selector)(x, this.i++, this.source);\n      if (result === errorObj) { return this.o.onError(result.e); }\n      this.o.onNext(result);\n    };\n\n    InnerObserver.prototype.error = function (e) {\n      this.o.onError(e);\n    };\n\n    InnerObserver.prototype.completed = function () {\n      this.o.onCompleted();\n    };\n\n    return MapObservable;\n\n  }(ObservableBase));\n\n  /**\n  * Projects each element of an observable sequence into a new form by incorporating the element's index.\n  * @param {Function} selector A transform function to apply to each source element; the second parameter of the function represents the index of the source element.\n  * @param {Any} [thisArg] Object to use as this when executing callback.\n  * @returns {Observable} An observable sequence whose elements are the result of invoking the transform function on each element of source.\n  */\n  observableProto.map = observableProto.select = function (selector, thisArg) {\n    var selectorFn = typeof selector === 'function' ? selector : function () { return selector; };\n    return this instanceof MapObservable ?\n      this.internalMap(selectorFn, thisArg) :\n      new MapObservable(this, selectorFn, thisArg);\n  };\n\n  function plucker(args, len) {\n    return function mapper(x) {\n      var currentProp = x;\n      for (var i = 0; i < len; i++) {\n        var p = currentProp[args[i]];\n        if (typeof p !== 'undefined') {\n          currentProp = p;\n        } else {\n          return undefined;\n        }\n      }\n      return currentProp;\n    };\n  }\n\n  /**\n   * Retrieves the value of a specified nested property from all elements in\n   * the Observable sequence.\n   * @param {Arguments} arguments The nested properties to pluck.\n   * @returns {Observable} Returns a new Observable sequence of property values.\n   */\n  observableProto.pluck = function () {\n    var len = arguments.length, args = new Array(len);\n    if (len === 0) { throw new Error('List of properties cannot be empty.'); }\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    return this.map(plucker(args, len));\n  };\n\nobservableProto.flatMap = observableProto.selectMany = function(selector, resultSelector, thisArg) {\n    return new FlatMapObservable(this, selector, resultSelector, thisArg).mergeAll();\n};\n\nRx.Observable.prototype.flatMapLatest = function(selector, resultSelector, thisArg) {\n    return new FlatMapObservable(this, selector, resultSelector, thisArg).switchLatest();\n};\n  var SkipObservable = (function(__super__) {\n    inherits(SkipObservable, __super__);\n    function SkipObservable(source, count) {\n      this.source = source;\n      this._count = count;\n      __super__.call(this);\n    }\n\n    SkipObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new SkipObserver(o, this._count));\n    };\n\n    function SkipObserver(o, c) {\n      this._o = o;\n      this._r = c;\n      AbstractObserver.call(this);\n    }\n\n    inherits(SkipObserver, AbstractObserver);\n\n    SkipObserver.prototype.next = function (x) {\n      if (this._r <= 0) {\n        this._o.onNext(x);\n      } else {\n        this._r--;\n      }\n    };\n    SkipObserver.prototype.error = function(e) { this._o.onError(e); };\n    SkipObserver.prototype.completed = function() { this._o.onCompleted(); };\n\n    return SkipObservable;\n  }(ObservableBase));\n\n  /**\n   * Bypasses a specified number of elements in an observable sequence and then returns the remaining elements.\n   * @param {Number} count The number of elements to skip before returning the remaining elements.\n   * @returns {Observable} An observable sequence that contains the elements that occur after the specified index in the input sequence.\n   */\n  observableProto.skip = function (count) {\n    if (count < 0) { throw new ArgumentOutOfRangeError(); }\n    return new SkipObservable(this, count);\n  };\n\n  var SkipWhileObservable = (function (__super__) {\n    inherits(SkipWhileObservable, __super__);\n    function SkipWhileObservable(source, fn) {\n      this.source = source;\n      this._fn = fn;\n      __super__.call(this);\n    }\n\n    SkipWhileObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new SkipWhileObserver(o, this));\n    };\n\n    return SkipWhileObservable;\n  }(ObservableBase));\n\n  var SkipWhileObserver = (function (__super__) {\n    inherits(SkipWhileObserver, __super__);\n\n    function SkipWhileObserver(o, p) {\n      this._o = o;\n      this._p = p;\n      this._i = 0;\n      this._r = false;\n      __super__.call(this);\n    }\n\n    SkipWhileObserver.prototype.next = function (x) {\n      if (!this._r) {\n        var res = tryCatch(this._p._fn)(x, this._i++, this._p);\n        if (res === errorObj) { return this._o.onError(res.e); }\n        this._r = !res;\n      }\n      this._r && this._o.onNext(x);\n    };\n    SkipWhileObserver.prototype.error = function (e) { this._o.onError(e); };\n    SkipWhileObserver.prototype.completed = function () { this._o.onCompleted(); };\n\n    return SkipWhileObserver;\n  }(AbstractObserver));\n\n  /**\n   *  Bypasses elements in an observable sequence as long as a specified condition is true and then returns the remaining elements.\n   *  The element's index is used in the logic of the predicate function.\n   *\n   *  var res = source.skipWhile(function (value) { return value < 10; });\n   *  var res = source.skipWhile(function (value, index) { return value < 10 || index < 10; });\n   * @param {Function} predicate A function to test each element for a condition; the second parameter of the function represents the index of the source element.\n   * @param {Any} [thisArg] Object to use as this when executing callback.\n   * @returns {Observable} An observable sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.\n   */\n  observableProto.skipWhile = function (predicate, thisArg) {\n    var fn = bindCallback(predicate, thisArg, 3);\n    return new SkipWhileObservable(this, fn);\n  };\n\n  var TakeObservable = (function(__super__) {\n    inherits(TakeObservable, __super__);\n    function TakeObservable(source, count) {\n      this.source = source;\n      this._count = count;\n      __super__.call(this);\n    }\n\n    TakeObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new TakeObserver(o, this._count));\n    };\n\n    function TakeObserver(o, c) {\n      this._o = o;\n      this._c = c;\n      this._r = c;\n      AbstractObserver.call(this);\n    }\n\n    inherits(TakeObserver, AbstractObserver);\n\n    TakeObserver.prototype.next = function (x) {\n      if (this._r-- > 0) {\n        this._o.onNext(x);\n        this._r <= 0 && this._o.onCompleted();\n      }\n    };\n\n    TakeObserver.prototype.error = function (e) { this._o.onError(e); };\n    TakeObserver.prototype.completed = function () { this._o.onCompleted(); };\n\n    return TakeObservable;\n  }(ObservableBase));\n\n  /**\n   *  Returns a specified number of contiguous elements from the start of an observable sequence, using the specified scheduler for the edge case of take(0).\n   * @param {Number} count The number of elements to return.\n   * @param {Scheduler} [scheduler] Scheduler used to produce an OnCompleted message in case <paramref name=\"count count</paramref> is set to 0.\n   * @returns {Observable} An observable sequence that contains the specified number of elements from the start of the input sequence.\n   */\n  observableProto.take = function (count, scheduler) {\n    if (count < 0) { throw new ArgumentOutOfRangeError(); }\n    if (count === 0) { return observableEmpty(scheduler); }\n    return new TakeObservable(this, count);\n  };\n\n  var TakeWhileObservable = (function (__super__) {\n    inherits(TakeWhileObservable, __super__);\n    function TakeWhileObservable(source, fn) {\n      this.source = source;\n      this._fn = fn;\n      __super__.call(this);\n    }\n\n    TakeWhileObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new TakeWhileObserver(o, this));\n    };\n\n    return TakeWhileObservable;\n  }(ObservableBase));\n\n  var TakeWhileObserver = (function (__super__) {\n    inherits(TakeWhileObserver, __super__);\n\n    function TakeWhileObserver(o, p) {\n      this._o = o;\n      this._p = p;\n      this._i = 0;\n      this._r = true;\n      __super__.call(this);\n    }\n\n    TakeWhileObserver.prototype.next = function (x) {\n      if (this._r) {\n        this._r = tryCatch(this._p._fn)(x, this._i++, this._p);\n        if (this._r === errorObj) { return this._o.onError(this._r.e); }\n      }\n      if (this._r) {\n        this._o.onNext(x);\n      } else {\n        this._o.onCompleted();\n      }\n    };\n    TakeWhileObserver.prototype.error = function (e) { this._o.onError(e); };\n    TakeWhileObserver.prototype.completed = function () { this._o.onCompleted(); };\n\n    return TakeWhileObserver;\n  }(AbstractObserver));\n\n  /**\n   *  Returns elements from an observable sequence as long as a specified condition is true.\n   *  The element's index is used in the logic of the predicate function.\n   * @param {Function} predicate A function to test each element for a condition; the second parameter of the function represents the index of the source element.\n   * @param {Any} [thisArg] Object to use as this when executing callback.\n   * @returns {Observable} An observable sequence that contains the elements from the input sequence that occur before the element at which the test no longer passes.\n   */\n  observableProto.takeWhile = function (predicate, thisArg) {\n    var fn = bindCallback(predicate, thisArg, 3);\n    return new TakeWhileObservable(this, fn);\n  };\n\n  var FilterObservable = (function (__super__) {\n    inherits(FilterObservable, __super__);\n\n    function FilterObservable(source, predicate, thisArg) {\n      this.source = source;\n      this.predicate = bindCallback(predicate, thisArg, 3);\n      __super__.call(this);\n    }\n\n    FilterObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new InnerObserver(o, this.predicate, this));\n    };\n\n    function innerPredicate(predicate, self) {\n      return function(x, i, o) { return self.predicate(x, i, o) && predicate.call(this, x, i, o); }\n    }\n\n    FilterObservable.prototype.internalFilter = function(predicate, thisArg) {\n      return new FilterObservable(this.source, innerPredicate(predicate, this), thisArg);\n    };\n\n    inherits(InnerObserver, AbstractObserver);\n    function InnerObserver(o, predicate, source) {\n      this.o = o;\n      this.predicate = predicate;\n      this.source = source;\n      this.i = 0;\n      AbstractObserver.call(this);\n    }\n\n    InnerObserver.prototype.next = function(x) {\n      var shouldYield = tryCatch(this.predicate)(x, this.i++, this.source);\n      if (shouldYield === errorObj) {\n        return this.o.onError(shouldYield.e);\n      }\n      shouldYield && this.o.onNext(x);\n    };\n\n    InnerObserver.prototype.error = function (e) {\n      this.o.onError(e);\n    };\n\n    InnerObserver.prototype.completed = function () {\n      this.o.onCompleted();\n    };\n\n    return FilterObservable;\n\n  }(ObservableBase));\n\n  /**\n  *  Filters the elements of an observable sequence based on a predicate by incorporating the element's index.\n  * @param {Function} predicate A function to test each source element for a condition; the second parameter of the function represents the index of the source element.\n  * @param {Any} [thisArg] Object to use as this when executing callback.\n  * @returns {Observable} An observable sequence that contains elements from the input sequence that satisfy the condition.\n  */\n  observableProto.filter = observableProto.where = function (predicate, thisArg) {\n    return this instanceof FilterObservable ? this.internalFilter(predicate, thisArg) :\n      new FilterObservable(this, predicate, thisArg);\n  };\n\nfunction createCbObservable(fn, ctx, selector, args) {\n  var o = new AsyncSubject();\n\n  args.push(createCbHandler(o, ctx, selector));\n  fn.apply(ctx, args);\n\n  return o.asObservable();\n}\n\nfunction createCbHandler(o, ctx, selector) {\n  return function handler () {\n    var len = arguments.length, results = new Array(len);\n    for(var i = 0; i < len; i++) { results[i] = arguments[i]; }\n\n    if (isFunction(selector)) {\n      results = tryCatch(selector).apply(ctx, results);\n      if (results === errorObj) { return o.onError(results.e); }\n      o.onNext(results);\n    } else {\n      if (results.length <= 1) {\n        o.onNext(results[0]);\n      } else {\n        o.onNext(results);\n      }\n    }\n\n    o.onCompleted();\n  };\n}\n\n/**\n * Converts a callback function to an observable sequence.\n *\n * @param {Function} fn Function with a callback as the last parameter to convert to an Observable sequence.\n * @param {Mixed} [ctx] The context for the func parameter to be executed.  If not specified, defaults to undefined.\n * @param {Function} [selector] A selector which takes the arguments from the callback to produce a single item to yield on next.\n * @returns {Function} A function, when executed with the required parameters minus the callback, produces an Observable sequence with a single value of the arguments to the callback as an array.\n */\nObservable.fromCallback = function (fn, ctx, selector) {\n  return function () {\n    typeof ctx === 'undefined' && (ctx = this); \n\n    var len = arguments.length, args = new Array(len)\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    return createCbObservable(fn, ctx, selector, args);\n  };\n};\n\nfunction createNodeObservable(fn, ctx, selector, args) {\n  var o = new AsyncSubject();\n\n  args.push(createNodeHandler(o, ctx, selector));\n  fn.apply(ctx, args);\n\n  return o.asObservable();\n}\n\nfunction createNodeHandler(o, ctx, selector) {\n  return function handler () {\n    var err = arguments[0];\n    if (err) { return o.onError(err); }\n\n    var len = arguments.length, results = [];\n    for(var i = 1; i < len; i++) { results[i - 1] = arguments[i]; }\n\n    if (isFunction(selector)) {\n      var results = tryCatch(selector).apply(ctx, results);\n      if (results === errorObj) { return o.onError(results.e); }\n      o.onNext(results);\n    } else {\n      if (results.length <= 1) {\n        o.onNext(results[0]);\n      } else {\n        o.onNext(results);\n      }\n    }\n\n    o.onCompleted();\n  };\n}\n\n/**\n * Converts a Node.js callback style function to an observable sequence.  This must be in function (err, ...) format.\n * @param {Function} fn The function to call\n * @param {Mixed} [ctx] The context for the func parameter to be executed.  If not specified, defaults to undefined.\n * @param {Function} [selector] A selector which takes the arguments from the callback minus the error to produce a single item to yield on next.\n * @returns {Function} An async function which when applied, returns an observable sequence with the callback arguments as an array.\n */\nObservable.fromNodeCallback = function (fn, ctx, selector) {\n  return function () {\n    typeof ctx === 'undefined' && (ctx = this); \n    var len = arguments.length, args = new Array(len);\n    for(var i = 0; i < len; i++) { args[i] = arguments[i]; }\n    return createNodeObservable(fn, ctx, selector, args);\n  };\n};\n\n  function isNodeList(el) {\n    if (root.StaticNodeList) {\n      // IE8 Specific\n      // instanceof is slower than Object#toString, but Object#toString will not work as intended in IE8\n      return el instanceof root.StaticNodeList || el instanceof root.NodeList;\n    } else {\n      return Object.prototype.toString.call(el) === '[object NodeList]';\n    }\n  }\n\n  function ListenDisposable(e, n, fn) {\n    this._e = e;\n    this._n = n;\n    this._fn = fn;\n    this._e.addEventListener(this._n, this._fn, false);\n    this.isDisposed = false;\n  }\n  ListenDisposable.prototype.dispose = function () {\n    if (!this.isDisposed) {\n      this._e.removeEventListener(this._n, this._fn, false);\n      this.isDisposed = true;\n    }\n  };\n\n  function createEventListener (el, eventName, handler) {\n    var disposables = new CompositeDisposable();\n\n    // Asume NodeList or HTMLCollection\n    var elemToString = Object.prototype.toString.call(el);\n    if (isNodeList(el) || elemToString === '[object HTMLCollection]') {\n      for (var i = 0, len = el.length; i < len; i++) {\n        disposables.add(createEventListener(el.item(i), eventName, handler));\n      }\n    } else if (el) {\n      disposables.add(new ListenDisposable(el, eventName, handler));\n    }\n\n    return disposables;\n  }\n\n  /**\n   * Configuration option to determine whether to use native events only\n   */\n  Rx.config.useNativeEvents = false;\n\n  var EventObservable = (function(__super__) {\n    inherits(EventObservable, __super__);\n    function EventObservable(el, name, fn) {\n      this._el = el;\n      this._n = name;\n      this._fn = fn;\n      __super__.call(this);\n    }\n\n    function createHandler(o, fn) {\n      return function handler () {\n        var results = arguments[0];\n        if (isFunction(fn)) {\n          results = tryCatch(fn).apply(null, arguments);\n          if (results === errorObj) { return o.onError(results.e); }\n        }\n        o.onNext(results);\n      };\n    }\n\n    EventObservable.prototype.subscribeCore = function (o) {\n      return createEventListener(\n        this._el,\n        this._n,\n        createHandler(o, this._fn));\n    };\n\n    return EventObservable;\n  }(ObservableBase));\n\n  /**\n   * Creates an observable sequence by adding an event listener to the matching DOMElement or each item in the NodeList.\n   * @param {Object} element The DOMElement or NodeList to attach a listener.\n   * @param {String} eventName The event name to attach the observable sequence.\n   * @param {Function} [selector] A selector which takes the arguments from the event handler to produce a single item to yield on next.\n   * @returns {Observable} An observable sequence of events from the specified element and the specified event.\n   */\n  Observable.fromEvent = function (element, eventName, selector) {\n    // Node.js specific\n    if (element.addListener) {\n      return fromEventPattern(\n        function (h) { element.addListener(eventName, h); },\n        function (h) { element.removeListener(eventName, h); },\n        selector);\n    }\n\n    // Use only if non-native events are allowed\n    if (!Rx.config.useNativeEvents) {\n      // Handles jq, Angular.js, Zepto, Marionette, Ember.js\n      if (typeof element.on === 'function' && typeof element.off === 'function') {\n        return fromEventPattern(\n          function (h) { element.on(eventName, h); },\n          function (h) { element.off(eventName, h); },\n          selector);\n      }\n    }\n\n    return new EventObservable(element, eventName, selector).publish().refCount();\n  };\n\n  var EventPatternObservable = (function(__super__) {\n    inherits(EventPatternObservable, __super__);\n    function EventPatternObservable(add, del, fn) {\n      this._add = add;\n      this._del = del;\n      this._fn = fn;\n      __super__.call(this);\n    }\n\n    function createHandler(o, fn) {\n      return function handler () {\n        var results = arguments[0];\n        if (isFunction(fn)) {\n          results = tryCatch(fn).apply(null, arguments);\n          if (results === errorObj) { return o.onError(results.e); }\n        }\n        o.onNext(results);\n      };\n    }\n\n    EventPatternObservable.prototype.subscribeCore = function (o) {\n      var fn = createHandler(o, this._fn);\n      var returnValue = this._add(fn);\n      return new EventPatternDisposable(this._del, fn, returnValue);\n    };\n\n    function EventPatternDisposable(del, fn, ret) {\n      this._del = del;\n      this._fn = fn;\n      this._ret = ret;\n      this.isDisposed = false;\n    }\n\n    EventPatternDisposable.prototype.dispose = function () {\n      if(!this.isDisposed) {\n        isFunction(this._del) && this._del(this._fn, this._ret);\n        this.isDisposed = true;\n      }\n    };\n\n    return EventPatternObservable;\n  }(ObservableBase));\n\n  /**\n   * Creates an observable sequence from an event emitter via an addHandler/removeHandler pair.\n   * @param {Function} addHandler The function to add a handler to the emitter.\n   * @param {Function} [removeHandler] The optional function to remove a handler from an emitter.\n   * @param {Function} [selector] A selector which takes the arguments from the event handler to produce a single item to yield on next.\n   * @returns {Observable} An observable sequence which wraps an event from an event emitter\n   */\n  var fromEventPattern = Observable.fromEventPattern = function (addHandler, removeHandler, selector) {\n    return new EventPatternObservable(addHandler, removeHandler, selector).publish().refCount();\n  };\n\n  var FromPromiseObservable = (function(__super__) {\n    inherits(FromPromiseObservable, __super__);\n    function FromPromiseObservable(p, s) {\n      this._p = p;\n      this._s = s;\n      __super__.call(this);\n    }\n\n    function scheduleNext(s, state) {\n      var o = state[0], data = state[1];\n      o.onNext(data);\n      o.onCompleted();\n    }\n\n    function scheduleError(s, state) {\n      var o = state[0], err = state[1];\n      o.onError(err);\n    }\n\n    FromPromiseObservable.prototype.subscribeCore = function(o) {\n      var sad = new SingleAssignmentDisposable(), self = this;\n\n      this._p\n        .then(function (data) {\n          sad.setDisposable(self._s.schedule([o, data], scheduleNext));\n        }, function (err) {\n          sad.setDisposable(self._s.schedule([o, err], scheduleError));\n        });\n\n      return sad;\n    };\n\n    return FromPromiseObservable;\n  }(ObservableBase));\n\n  /**\n  * Converts a Promise to an Observable sequence\n  * @param {Promise} An ES6 Compliant promise.\n  * @returns {Observable} An Observable sequence which wraps the existing promise success and failure.\n  */\n  var observableFromPromise = Observable.fromPromise = function (promise, scheduler) {\n    scheduler || (scheduler = defaultScheduler);\n    return new FromPromiseObservable(promise, scheduler);\n  };\n\n  /*\n   * Converts an existing observable sequence to an ES6 Compatible Promise\n   * @example\n   * var promise = Rx.Observable.return(42).toPromise(RSVP.Promise);\n   *\n   * // With config\n   * Rx.config.Promise = RSVP.Promise;\n   * var promise = Rx.Observable.return(42).toPromise();\n   * @param {Function} [promiseCtor] The constructor of the promise. If not provided, it looks for it in Rx.config.Promise.\n   * @returns {Promise} An ES6 compatible promise with the last value from the observable sequence.\n   */\n  observableProto.toPromise = function (promiseCtor) {\n    promiseCtor || (promiseCtor = Rx.config.Promise);\n    if (!promiseCtor) { throw new NotSupportedError('Promise type not provided nor in Rx.config.Promise'); }\n    var source = this;\n    return new promiseCtor(function (resolve, reject) {\n      // No cancellation can be done\n      var value;\n      source.subscribe(function (v) {\n        value = v;\n      }, reject, function () {\n        resolve(value);\n      });\n    });\n  };\n\n  /**\n   * Invokes the asynchronous function, surfacing the result through an observable sequence.\n   * @param {Function} functionAsync Asynchronous function which returns a Promise to run.\n   * @returns {Observable} An observable sequence exposing the function's result value, or an exception.\n   */\n  Observable.startAsync = function (functionAsync) {\n    var promise = tryCatch(functionAsync)();\n    if (promise === errorObj) { return observableThrow(promise.e); }\n    return observableFromPromise(promise);\n  };\n\n  var MulticastObservable = (function (__super__) {\n    inherits(MulticastObservable, __super__);\n    function MulticastObservable(source, fn1, fn2) {\n      this.source = source;\n      this._fn1 = fn1;\n      this._fn2 = fn2;\n      __super__.call(this);\n    }\n\n    MulticastObservable.prototype.subscribeCore = function (o) {\n      var connectable = this.source.multicast(this._fn1());\n      return new BinaryDisposable(this._fn2(connectable).subscribe(o), connectable.connect());\n    };\n\n    return MulticastObservable;\n  }(ObservableBase));\n\n  /**\n   * Multicasts the source sequence notifications through an instantiated subject into all uses of the sequence within a selector function. Each\n   * subscription to the resulting sequence causes a separate multicast invocation, exposing the sequence resulting from the selector function's\n   * invocation. For specializations with fixed subject types, see Publish, PublishLast, and Replay.\n   *\n   * @example\n   * 1 - res = source.multicast(observable);\n   * 2 - res = source.multicast(function () { return new Subject(); }, function (x) { return x; });\n   *\n   * @param {Function|Subject} subjectOrSubjectSelector\n   * Factory function to create an intermediate subject through which the source sequence's elements will be multicast to the selector function.\n   * Or:\n   * Subject to push source elements into.\n   *\n   * @param {Function} [selector] Optional selector function which can use the multicasted source sequence subject to the policies enforced by the created subject. Specified only if <paramref name=\"subjectOrSubjectSelector\" is a factory function.\n   * @returns {Observable} An observable sequence that contains the elements of a sequence produced by multicasting the source sequence within a selector function.\n   */\n  observableProto.multicast = function (subjectOrSubjectSelector, selector) {\n    return isFunction(subjectOrSubjectSelector) ?\n      new MulticastObservable(this, subjectOrSubjectSelector, selector) :\n      new ConnectableObservable(this, subjectOrSubjectSelector);\n  };\n\n  /**\n   * Returns an observable sequence that is the result of invoking the selector on a connectable observable sequence that shares a single subscription to the underlying sequence.\n   * This operator is a specialization of Multicast using a regular Subject.\n   *\n   * @example\n   * var resres = source.publish();\n   * var res = source.publish(function (x) { return x; });\n   *\n   * @param {Function} [selector] Selector function which can use the multicasted source sequence as many times as needed, without causing multiple subscriptions to the source sequence. Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n   * @returns {Observable} An observable sequence that contains the elements of a sequence produced by multicasting the source sequence within a selector function.\n   */\n  observableProto.publish = function (selector) {\n    return selector && isFunction(selector) ?\n      this.multicast(function () { return new Subject(); }, selector) :\n      this.multicast(new Subject());\n  };\n\n  /**\n   * Returns an observable sequence that shares a single subscription to the underlying sequence.\n   * This operator is a specialization of publish which creates a subscription when the number of observers goes from zero to one, then shares that subscription with all subsequent observers until the number of observers returns to zero, at which point the subscription is disposed.\n   * @returns {Observable} An observable sequence that contains the elements of a sequence produced by multicasting the source sequence.\n   */\n  observableProto.share = function () {\n    return this.publish().refCount();\n  };\n\n  /**\n   * Returns an observable sequence that is the result of invoking the selector on a connectable observable sequence that shares a single subscription to the underlying sequence containing only the last notification.\n   * This operator is a specialization of Multicast using a AsyncSubject.\n   *\n   * @example\n   * var res = source.publishLast();\n   * var res = source.publishLast(function (x) { return x; });\n   *\n   * @param selector [Optional] Selector function which can use the multicasted source sequence as many times as needed, without causing multiple subscriptions to the source sequence. Subscribers to the given source will only receive the last notification of the source.\n   * @returns {Observable} An observable sequence that contains the elements of a sequence produced by multicasting the source sequence within a selector function.\n   */\n  observableProto.publishLast = function (selector) {\n    return selector && isFunction(selector) ?\n      this.multicast(function () { return new AsyncSubject(); }, selector) :\n      this.multicast(new AsyncSubject());\n  };\n\n  /**\n   * Returns an observable sequence that is the result of invoking the selector on a connectable observable sequence that shares a single subscription to the underlying sequence and starts with initialValue.\n   * This operator is a specialization of Multicast using a BehaviorSubject.\n   *\n   * @example\n   * var res = source.publishValue(42);\n   * var res = source.publishValue(function (x) { return x.select(function (y) { return y * y; }) }, 42);\n   *\n   * @param {Function} [selector] Optional selector function which can use the multicasted source sequence as many times as needed, without causing multiple subscriptions to the source sequence. Subscribers to the given source will receive immediately receive the initial value, followed by all notifications of the source from the time of the subscription on.\n   * @param {Mixed} initialValue Initial value received by observers upon subscription.\n   * @returns {Observable} An observable sequence that contains the elements of a sequence produced by multicasting the source sequence within a selector function.\n   */\n  observableProto.publishValue = function (initialValueOrSelector, initialValue) {\n    return arguments.length === 2 ?\n      this.multicast(function () {\n        return new BehaviorSubject(initialValue);\n      }, initialValueOrSelector) :\n      this.multicast(new BehaviorSubject(initialValueOrSelector));\n  };\n\n  /**\n   * Returns an observable sequence that shares a single subscription to the underlying sequence and starts with an initialValue.\n   * This operator is a specialization of publishValue which creates a subscription when the number of observers goes from zero to one, then shares that subscription with all subsequent observers until the number of observers returns to zero, at which point the subscription is disposed.\n   * @param {Mixed} initialValue Initial value received by observers upon subscription.\n   * @returns {Observable} An observable sequence that contains the elements of a sequence produced by multicasting the source sequence.\n   */\n  observableProto.shareValue = function (initialValue) {\n    return this.publishValue(initialValue).refCount();\n  };\n\n  /**\n   * Returns an observable sequence that is the result of invoking the selector on a connectable observable sequence that shares a single subscription to the underlying sequence replaying notifications subject to a maximum time length for the replay buffer.\n   * This operator is a specialization of Multicast using a ReplaySubject.\n   *\n   * @example\n   * var res = source.replay(null, 3);\n   * var res = source.replay(null, 3, 500);\n   * var res = source.replay(null, 3, 500, scheduler);\n   * var res = source.replay(function (x) { return x.take(6).repeat(); }, 3, 500, scheduler);\n   *\n   * @param selector [Optional] Selector function which can use the multicasted source sequence as many times as needed, without causing multiple subscriptions to the source sequence. Subscribers to the given source will receive all the notifications of the source subject to the specified replay buffer trimming policy.\n   * @param bufferSize [Optional] Maximum element count of the replay buffer.\n   * @param windowSize [Optional] Maximum time length of the replay buffer.\n   * @param scheduler [Optional] Scheduler where connected observers within the selector function will be invoked on.\n   * @returns {Observable} An observable sequence that contains the elements of a sequence produced by multicasting the source sequence within a selector function.\n   */\n  observableProto.replay = function (selector, bufferSize, windowSize, scheduler) {\n    return selector && isFunction(selector) ?\n      this.multicast(function () { return new ReplaySubject(bufferSize, windowSize, scheduler); }, selector) :\n      this.multicast(new ReplaySubject(bufferSize, windowSize, scheduler));\n  };\n\n  /**\n   * Returns an observable sequence that shares a single subscription to the underlying sequence replaying notifications subject to a maximum time length for the replay buffer.\n   * This operator is a specialization of replay which creates a subscription when the number of observers goes from zero to one, then shares that subscription with all subsequent observers until the number of observers returns to zero, at which point the subscription is disposed.\n   *\n   * @example\n   * var res = source.shareReplay(3);\n   * var res = source.shareReplay(3, 500);\n   * var res = source.shareReplay(3, 500, scheduler);\n   *\n\n   * @param bufferSize [Optional] Maximum element count of the replay buffer.\n   * @param window [Optional] Maximum time length of the replay buffer.\n   * @param scheduler [Optional] Scheduler where connected observers within the selector function will be invoked on.\n   * @returns {Observable} An observable sequence that contains the elements of a sequence produced by multicasting the source sequence.\n   */\n  observableProto.shareReplay = function (bufferSize, windowSize, scheduler) {\n    return this.replay(null, bufferSize, windowSize, scheduler).refCount();\n  };\n\n  var RefCountObservable = (function (__super__) {\n    inherits(RefCountObservable, __super__);\n    function RefCountObservable(source) {\n      this.source = source;\n      this._count = 0;\n      this._connectableSubscription = null;\n      __super__.call(this);\n    }\n\n    RefCountObservable.prototype.subscribeCore = function (o) {\n      var subscription = this.source.subscribe(o);\n      ++this._count === 1 && (this._connectableSubscription = this.source.connect());\n      return new RefCountDisposable(this, subscription);\n    };\n\n    function RefCountDisposable(p, s) {\n      this._p = p;\n      this._s = s;\n      this.isDisposed = false;\n    }\n\n    RefCountDisposable.prototype.dispose = function () {\n      if (!this.isDisposed) {\n        this.isDisposed = true;\n        this._s.dispose();\n        --this._p._count === 0 && this._p._connectableSubscription.dispose();\n      }\n    };\n\n    return RefCountObservable;\n  }(ObservableBase));\n\n  var ConnectableObservable = Rx.ConnectableObservable = (function (__super__) {\n    inherits(ConnectableObservable, __super__);\n    function ConnectableObservable(source, subject) {\n      this.source = source;\n      this._connection = null;\n      this._source = source.asObservable();\n      this._subject = subject;\n      __super__.call(this);\n    }\n\n    function ConnectDisposable(parent, subscription) {\n      this._p = parent;\n      this._s = subscription;\n    }\n\n    ConnectDisposable.prototype.dispose = function () {\n      if (this._s) {\n        this._s.dispose();\n        this._s = null;\n        this._p._connection = null;\n      }\n    };\n\n    ConnectableObservable.prototype.connect = function () {\n      if (!this._connection) {\n        var subscription = this._source.subscribe(this._subject);\n        this._connection = new ConnectDisposable(this, subscription);\n      }\n      return this._connection;\n    };\n\n    ConnectableObservable.prototype._subscribe = function (o) {\n      return this._subject.subscribe(o);\n    };\n\n    ConnectableObservable.prototype.refCount = function () {\n      return new RefCountObservable(this);\n    };\n\n    return ConnectableObservable;\n  }(Observable));\n\n  var TimerObservable = (function(__super__) {\n    inherits(TimerObservable, __super__);\n    function TimerObservable(dt, s) {\n      this._dt = dt;\n      this._s = s;\n      __super__.call(this);\n    }\n\n    TimerObservable.prototype.subscribeCore = function (o) {\n      return this._s.scheduleFuture(o, this._dt, scheduleMethod);\n    };\n\n    function scheduleMethod(s, o) {\n      o.onNext(0);\n      o.onCompleted();\n    }\n\n    return TimerObservable;\n  }(ObservableBase));\n\n  function _observableTimer(dueTime, scheduler) {\n    return new TimerObservable(dueTime, scheduler);\n  }\n\n  function observableTimerDateAndPeriod(dueTime, period, scheduler) {\n    return new AnonymousObservable(function (observer) {\n      var d = dueTime, p = normalizeTime(period);\n      return scheduler.scheduleRecursiveFuture(0, d, function (count, self) {\n        if (p > 0) {\n          var now = scheduler.now();\n          d = new Date(d.getTime() + p);\n          d.getTime() <= now && (d = new Date(now + p));\n        }\n        observer.onNext(count);\n        self(count + 1, new Date(d));\n      });\n    });\n  }\n\n  function observableTimerTimeSpanAndPeriod(dueTime, period, scheduler) {\n    return dueTime === period ?\n      new AnonymousObservable(function (observer) {\n        return scheduler.schedulePeriodic(0, period, function (count) {\n          observer.onNext(count);\n          return count + 1;\n        });\n      }) :\n      observableDefer(function () {\n        return observableTimerDateAndPeriod(new Date(scheduler.now() + dueTime), period, scheduler);\n      });\n  }\n\n  /**\n   *  Returns an observable sequence that produces a value after each period.\n   *\n   * @example\n   *  1 - res = Rx.Observable.interval(1000);\n   *  2 - res = Rx.Observable.interval(1000, Rx.Scheduler.timeout);\n   *\n   * @param {Number} period Period for producing the values in the resulting sequence (specified as an integer denoting milliseconds).\n   * @param {Scheduler} [scheduler] Scheduler to run the timer on. If not specified, Rx.Scheduler.timeout is used.\n   * @returns {Observable} An observable sequence that produces a value after each period.\n   */\n  var observableinterval = Observable.interval = function (period, scheduler) {\n    return observableTimerTimeSpanAndPeriod(period, period, isScheduler(scheduler) ? scheduler : defaultScheduler);\n  };\n\n  /**\n   *  Returns an observable sequence that produces a value after dueTime has elapsed and then after each period.\n   * @param {Number} dueTime Absolute (specified as a Date object) or relative time (specified as an integer denoting milliseconds) at which to produce the first value.\n   * @param {Mixed} [periodOrScheduler]  Period to produce subsequent values (specified as an integer denoting milliseconds), or the scheduler to run the timer on. If not specified, the resulting timer is not recurring.\n   * @param {Scheduler} [scheduler]  Scheduler to run the timer on. If not specified, the timeout scheduler is used.\n   * @returns {Observable} An observable sequence that produces a value after due time has elapsed and then each period.\n   */\n  var observableTimer = Observable.timer = function (dueTime, periodOrScheduler, scheduler) {\n    var period;\n    isScheduler(scheduler) || (scheduler = defaultScheduler);\n    if (periodOrScheduler != null && typeof periodOrScheduler === 'number') {\n      period = periodOrScheduler;\n    } else if (isScheduler(periodOrScheduler)) {\n      scheduler = periodOrScheduler;\n    }\n    if ((dueTime instanceof Date || typeof dueTime === 'number') && period === undefined) {\n      return _observableTimer(dueTime, scheduler);\n    }\n    if (dueTime instanceof Date && period !== undefined) {\n      return observableTimerDateAndPeriod(dueTime, periodOrScheduler, scheduler);\n    }\n    return observableTimerTimeSpanAndPeriod(dueTime, period, scheduler);\n  };\n\n  function observableDelayRelative(source, dueTime, scheduler) {\n    return new AnonymousObservable(function (o) {\n      var active = false,\n        cancelable = new SerialDisposable(),\n        exception = null,\n        q = [],\n        running = false,\n        subscription;\n      subscription = source.materialize().timestamp(scheduler).subscribe(function (notification) {\n        var d, shouldRun;\n        if (notification.value.kind === 'E') {\n          q = [];\n          q.push(notification);\n          exception = notification.value.error;\n          shouldRun = !running;\n        } else {\n          q.push({ value: notification.value, timestamp: notification.timestamp + dueTime });\n          shouldRun = !active;\n          active = true;\n        }\n        if (shouldRun) {\n          if (exception !== null) {\n            o.onError(exception);\n          } else {\n            d = new SingleAssignmentDisposable();\n            cancelable.setDisposable(d);\n            d.setDisposable(scheduler.scheduleRecursiveFuture(null, dueTime, function (_, self) {\n              var e, recurseDueTime, result, shouldRecurse;\n              if (exception !== null) {\n                return;\n              }\n              running = true;\n              do {\n                result = null;\n                if (q.length > 0 && q[0].timestamp - scheduler.now() <= 0) {\n                  result = q.shift().value;\n                }\n                if (result !== null) {\n                  result.accept(o);\n                }\n              } while (result !== null);\n              shouldRecurse = false;\n              recurseDueTime = 0;\n              if (q.length > 0) {\n                shouldRecurse = true;\n                recurseDueTime = Math.max(0, q[0].timestamp - scheduler.now());\n              } else {\n                active = false;\n              }\n              e = exception;\n              running = false;\n              if (e !== null) {\n                o.onError(e);\n              } else if (shouldRecurse) {\n                self(null, recurseDueTime);\n              }\n            }));\n          }\n        }\n      });\n      return new BinaryDisposable(subscription, cancelable);\n    }, source);\n  }\n\n  function observableDelayAbsolute(source, dueTime, scheduler) {\n    return observableDefer(function () {\n      return observableDelayRelative(source, dueTime - scheduler.now(), scheduler);\n    });\n  }\n\n  function delayWithSelector(source, subscriptionDelay, delayDurationSelector) {\n    var subDelay, selector;\n    if (isFunction(subscriptionDelay)) {\n      selector = subscriptionDelay;\n    } else {\n      subDelay = subscriptionDelay;\n      selector = delayDurationSelector;\n    }\n    return new AnonymousObservable(function (o) {\n      var delays = new CompositeDisposable(), atEnd = false, subscription = new SerialDisposable();\n\n      function start() {\n        subscription.setDisposable(source.subscribe(\n          function (x) {\n            var delay = tryCatch(selector)(x);\n            if (delay === errorObj) { return o.onError(delay.e); }\n            var d = new SingleAssignmentDisposable();\n            delays.add(d);\n            d.setDisposable(delay.subscribe(\n              function () {\n                o.onNext(x);\n                delays.remove(d);\n                done();\n              },\n              function (e) { o.onError(e); },\n              function () {\n                o.onNext(x);\n                delays.remove(d);\n                done();\n              }\n            ));\n          },\n          function (e) { o.onError(e); },\n          function () {\n            atEnd = true;\n            subscription.dispose();\n            done();\n          }\n        ));\n      }\n\n      function done () {\n        atEnd && delays.length === 0 && o.onCompleted();\n      }\n\n      if (!subDelay) {\n        start();\n      } else {\n        subscription.setDisposable(subDelay.subscribe(start, function (e) { o.onError(e); }, start));\n      }\n\n      return new BinaryDisposable(subscription, delays);\n    }, source);\n  }\n\n  /**\n   *  Time shifts the observable sequence by dueTime.\n   *  The relative time intervals between the values are preserved.\n   *\n   * @param {Number} dueTime Absolute (specified as a Date object) or relative time (specified as an integer denoting milliseconds) by which to shift the observable sequence.\n   * @param {Scheduler} [scheduler] Scheduler to run the delay timers on. If not specified, the timeout scheduler is used.\n   * @returns {Observable} Time-shifted sequence.\n   */\n  observableProto.delay = function () {\n    var firstArg = arguments[0];\n    if (typeof firstArg === 'number' || firstArg instanceof Date) {\n      var dueTime = firstArg, scheduler = arguments[1];\n      isScheduler(scheduler) || (scheduler = defaultScheduler);\n      return dueTime instanceof Date ?\n        observableDelayAbsolute(this, dueTime, scheduler) :\n        observableDelayRelative(this, dueTime, scheduler);\n    } else if (Observable.isObservable(firstArg) || isFunction(firstArg)) {\n      return delayWithSelector(this, firstArg, arguments[1]);\n    } else {\n      throw new Error('Invalid arguments');\n    }\n  };\n\n  var DebounceObservable = (function (__super__) {\n    inherits(DebounceObservable, __super__);\n    function DebounceObservable(source, dt, s) {\n      isScheduler(s) || (s = defaultScheduler);\n      this.source = source;\n      this._dt = dt;\n      this._s = s;\n      __super__.call(this);\n    }\n\n    DebounceObservable.prototype.subscribeCore = function (o) {\n      var cancelable = new SerialDisposable();\n      return new BinaryDisposable(\n        this.source.subscribe(new DebounceObserver(o, this._dt, this._s, cancelable)),\n        cancelable);\n    };\n\n    return DebounceObservable;\n  }(ObservableBase));\n\n  var DebounceObserver = (function (__super__) {\n    inherits(DebounceObserver, __super__);\n    function DebounceObserver(observer, dueTime, scheduler, cancelable) {\n      this._o = observer;\n      this._d = dueTime;\n      this._scheduler = scheduler;\n      this._c = cancelable;\n      this._v = null;\n      this._hv = false;\n      this._id = 0;\n      __super__.call(this);\n    }\n\n    function scheduleFuture(s, state) {\n      state.self._hv && state.self._id === state.currentId && state.self._o.onNext(state.x);\n      state.self._hv = false;\n    }\n\n    DebounceObserver.prototype.next = function (x) {\n      this._hv = true;\n      this._v = x;\n      var currentId = ++this._id, d = new SingleAssignmentDisposable();\n      this._c.setDisposable(d);\n      d.setDisposable(this._scheduler.scheduleFuture(this, this._d, function (_, self) {\n        self._hv && self._id === currentId && self._o.onNext(x);\n        self._hv = false;\n      }));\n    };\n\n    DebounceObserver.prototype.error = function (e) {\n      this._c.dispose();\n      this._o.onError(e);\n      this._hv = false;\n      this._id++;\n    };\n\n    DebounceObserver.prototype.completed = function () {\n      this._c.dispose();\n      this._hv && this._o.onNext(this._v);\n      this._o.onCompleted();\n      this._hv = false;\n      this._id++;\n    };\n\n    return DebounceObserver;\n  }(AbstractObserver));\n\n  function debounceWithSelector(source, durationSelector) {\n    return new AnonymousObservable(function (o) {\n      var value, hasValue = false, cancelable = new SerialDisposable(), id = 0;\n      var subscription = source.subscribe(\n        function (x) {\n          var throttle = tryCatch(durationSelector)(x);\n          if (throttle === errorObj) { return o.onError(throttle.e); }\n\n          isPromise(throttle) && (throttle = observableFromPromise(throttle));\n\n          hasValue = true;\n          value = x;\n          id++;\n          var currentid = id, d = new SingleAssignmentDisposable();\n          cancelable.setDisposable(d);\n          d.setDisposable(throttle.subscribe(\n            function () {\n              hasValue && id === currentid && o.onNext(value);\n              hasValue = false;\n              d.dispose();\n            },\n            function (e) { o.onError(e); },\n            function () {\n              hasValue && id === currentid && o.onNext(value);\n              hasValue = false;\n              d.dispose();\n            }\n          ));\n        },\n        function (e) {\n          cancelable.dispose();\n          o.onError(e);\n          hasValue = false;\n          id++;\n        },\n        function () {\n          cancelable.dispose();\n          hasValue && o.onNext(value);\n          o.onCompleted();\n          hasValue = false;\n          id++;\n        }\n      );\n      return new BinaryDisposable(subscription, cancelable);\n    }, source);\n  }\n\n  observableProto.debounce = function () {\n    if (isFunction (arguments[0])) {\n      return debounceWithSelector(this, arguments[0]);\n    } else if (typeof arguments[0] === 'number') {\n      return new DebounceObservable(this, arguments[0], arguments[1]);\n    } else {\n      throw new Error('Invalid arguments');\n    }\n  };\n\n  var TimestampObservable = (function (__super__) {\n    inherits(TimestampObservable, __super__);\n    function TimestampObservable(source, s) {\n      this.source = source;\n      this._s = s;\n      __super__.call(this);\n    }\n\n    TimestampObservable.prototype.subscribeCore = function (o) {\n      return this.source.subscribe(new TimestampObserver(o, this._s));\n    };\n\n    return TimestampObservable;\n  }(ObservableBase));\n\n  var TimestampObserver = (function (__super__) {\n    inherits(TimestampObserver, __super__);\n    function TimestampObserver(o, s) {\n      this._o = o;\n      this._s = s;\n      __super__.call(this);\n    }\n\n    TimestampObserver.prototype.next = function (x) {\n      this._o.onNext({ value: x, timestamp: this._s.now() });\n    };\n\n    TimestampObserver.prototype.error = function (e) {\n      this._o.onError(e);\n    };\n\n    TimestampObserver.prototype.completed = function () {\n      this._o.onCompleted();\n    };\n\n    return TimestampObserver;\n  }(AbstractObserver));\n\n  /**\n   *  Records the timestamp for each value in an observable sequence.\n   *\n   * @example\n   *  1 - res = source.timestamp(); // produces { value: x, timestamp: ts }\n   *  2 - res = source.timestamp(Rx.Scheduler.default);\n   *\n   * @param {Scheduler} [scheduler]  Scheduler used to compute timestamps. If not specified, the default scheduler is used.\n   * @returns {Observable} An observable sequence with timestamp information on values.\n   */\n  observableProto.timestamp = function (scheduler) {\n    isScheduler(scheduler) || (scheduler = defaultScheduler);\n    return new TimestampObservable(this, scheduler);\n  };\n\n  var SampleObservable = (function(__super__) {\n    inherits(SampleObservable, __super__);\n    function SampleObservable(source, sampler) {\n      this.source = source;\n      this._sampler = sampler;\n      __super__.call(this);\n    }\n\n    SampleObservable.prototype.subscribeCore = function (o) {\n      var state = {\n        o: o,\n        atEnd: false,\n        value: null,\n        hasValue: false,\n        sourceSubscription: new SingleAssignmentDisposable()\n      };\n\n      state.sourceSubscription.setDisposable(this.source.subscribe(new SampleSourceObserver(state)));\n      return new BinaryDisposable(\n        state.sourceSubscription,\n        this._sampler.subscribe(new SamplerObserver(state))\n      );\n    };\n\n    return SampleObservable;\n  }(ObservableBase));\n\n  var SamplerObserver = (function(__super__) {\n    inherits(SamplerObserver, __super__);\n    function SamplerObserver(s) {\n      this._s = s;\n      __super__.call(this);\n    }\n\n    SamplerObserver.prototype._handleMessage = function () {\n      if (this._s.hasValue) {\n        this._s.hasValue = false;\n        this._s.o.onNext(this._s.value);\n      }\n      this._s.atEnd && this._s.o.onCompleted();\n    };\n\n    SamplerObserver.prototype.next = function () { this._handleMessage(); };\n    SamplerObserver.prototype.error = function (e) { this._s.onError(e); };\n    SamplerObserver.prototype.completed = function () { this._handleMessage(); };\n\n    return SamplerObserver;\n  }(AbstractObserver));\n\n  var SampleSourceObserver = (function(__super__) {\n    inherits(SampleSourceObserver, __super__);\n    function SampleSourceObserver(s) {\n      this._s = s;\n      __super__.call(this);\n    }\n\n    SampleSourceObserver.prototype.next = function (x) {\n      this._s.hasValue = true;\n      this._s.value = x;\n    };\n    SampleSourceObserver.prototype.error = function (e) { this._s.o.onError(e); };\n    SampleSourceObserver.prototype.completed = function () {\n      this._s.atEnd = true;\n      this._s.sourceSubscription.dispose();\n    };\n\n    return SampleSourceObserver;\n  }(AbstractObserver));\n\n  /**\n   *  Samples the observable sequence at each interval.\n   *\n   * @example\n   *  1 - res = source.sample(sampleObservable); // Sampler tick sequence\n   *  2 - res = source.sample(5000); // 5 seconds\n   *  2 - res = source.sample(5000, Rx.Scheduler.timeout); // 5 seconds\n   *\n   * @param {Mixed} intervalOrSampler Interval at which to sample (specified as an integer denoting milliseconds) or Sampler Observable.\n   * @param {Scheduler} [scheduler]  Scheduler to run the sampling timer on. If not specified, the timeout scheduler is used.\n   * @returns {Observable} Sampled observable sequence.\n   */\n  observableProto.sample = function (intervalOrSampler, scheduler) {\n    isScheduler(scheduler) || (scheduler = defaultScheduler);\n    return typeof intervalOrSampler === 'number' ?\n      new SampleObservable(this, observableinterval(intervalOrSampler, scheduler)) :\n      new SampleObservable(this, intervalOrSampler);\n  };\n\n  var TimeoutError = Rx.TimeoutError = function(message) {\n    this.message = message || 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    Error.call(this);\n  };\n  TimeoutError.prototype = Object.create(Error.prototype);\n\n  function timeoutWithSelector(source, firstTimeout, timeoutDurationSelector, other) {\n    if (isFunction(firstTimeout)) {\n      other = timeoutDurationSelector;\n      timeoutDurationSelector = firstTimeout;\n      firstTimeout = observableNever();\n    }\n    Observable.isObservable(other) || (other = observableThrow(new TimeoutError()));\n    return new AnonymousObservable(function (o) {\n      var subscription = new SerialDisposable(),\n        timer = new SerialDisposable(),\n        original = new SingleAssignmentDisposable();\n\n      subscription.setDisposable(original);\n\n      var id = 0, switched = false;\n\n      function setTimer(timeout) {\n        var myId = id, d = new SingleAssignmentDisposable();\n\n        function timerWins() {\n          switched = (myId === id);\n          return switched;\n        }\n\n        timer.setDisposable(d);\n        d.setDisposable(timeout.subscribe(function () {\n          timerWins() && subscription.setDisposable(other.subscribe(o));\n          d.dispose();\n        }, function (e) {\n          timerWins() && o.onError(e);\n        }, function () {\n          timerWins() && subscription.setDisposable(other.subscribe(o));\n        }));\n      };\n\n      setTimer(firstTimeout);\n\n      function oWins() {\n        var res = !switched;\n        if (res) { id++; }\n        return res;\n      }\n\n      original.setDisposable(source.subscribe(function (x) {\n        if (oWins()) {\n          o.onNext(x);\n          var timeout = tryCatch(timeoutDurationSelector)(x);\n          if (timeout === errorObj) { return o.onError(timeout.e); }\n          setTimer(isPromise(timeout) ? observableFromPromise(timeout) : timeout);\n        }\n      }, function (e) {\n        oWins() && o.onError(e);\n      }, function () {\n        oWins() && o.onCompleted();\n      }));\n      return new BinaryDisposable(subscription, timer);\n    }, source);\n  }\n\n  function timeout(source, dueTime, other, scheduler) {\n    if (isScheduler(other)) {\n      scheduler = other;\n      other = observableThrow(new TimeoutError());\n    }\n    if (other instanceof Error) { other = observableThrow(other); }\n    isScheduler(scheduler) || (scheduler = defaultScheduler);\n    Observable.isObservable(other) || (other = observableThrow(new TimeoutError()));\n    return new AnonymousObservable(function (o) {\n      var id = 0,\n        original = new SingleAssignmentDisposable(),\n        subscription = new SerialDisposable(),\n        switched = false,\n        timer = new SerialDisposable();\n\n      subscription.setDisposable(original);\n\n      function createTimer() {\n        var myId = id;\n        timer.setDisposable(scheduler.scheduleFuture(null, dueTime, function () {\n          switched = id === myId;\n          if (switched) {\n            isPromise(other) && (other = observableFromPromise(other));\n            subscription.setDisposable(other.subscribe(o));\n          }\n        }));\n      }\n\n      createTimer();\n\n      original.setDisposable(source.subscribe(function (x) {\n        if (!switched) {\n          id++;\n          o.onNext(x);\n          createTimer();\n        }\n      }, function (e) {\n        if (!switched) {\n          id++;\n          o.onError(e);\n        }\n      }, function () {\n        if (!switched) {\n          id++;\n          o.onCompleted();\n        }\n      }));\n      return new BinaryDisposable(subscription, timer);\n    }, source);\n  }\n\n  observableProto.timeout = function () {\n    var firstArg = arguments[0];\n    if (firstArg instanceof Date || typeof firstArg === 'number') {\n      return timeout(this, firstArg, arguments[1], arguments[2]);\n    } else if (Observable.isObservable(firstArg) || isFunction(firstArg)) {\n      return timeoutWithSelector(this, firstArg, arguments[1], arguments[2]);\n    } else {\n      throw new Error('Invalid arguments');\n    }\n  };\n\n  /**\n   * Returns an Observable that emits only the first item emitted by the source Observable during sequential time windows of a specified duration.\n   * @param {Number} windowDuration time to wait before emitting another item after emitting the last item\n   * @param {Scheduler} [scheduler] the Scheduler to use internally to manage the timers that handle timeout for each item. If not provided, defaults to Scheduler.timeout.\n   * @returns {Observable} An Observable that performs the throttle operation.\n   */\n  observableProto.throttle = function (windowDuration, scheduler) {\n    isScheduler(scheduler) || (scheduler = defaultScheduler);\n    var duration = +windowDuration || 0;\n    if (duration <= 0) { throw new RangeError('windowDuration cannot be less or equal zero.'); }\n    var source = this;\n    return new AnonymousObservable(function (o) {\n      var lastOnNext = 0;\n      return source.subscribe(\n        function (x) {\n          var now = scheduler.now();\n          if (lastOnNext === 0 || now - lastOnNext >= duration) {\n            lastOnNext = now;\n            o.onNext(x);\n          }\n        },function (e) { o.onError(e); }, function () { o.onCompleted(); }\n      );\n    }, source);\n  };\n\n  var PausableObservable = (function (__super__) {\n    inherits(PausableObservable, __super__);\n    function PausableObservable(source, pauser) {\n      this.source = source;\n      this.controller = new Subject();\n\n      if (pauser && pauser.subscribe) {\n        this.pauser = this.controller.merge(pauser);\n      } else {\n        this.pauser = this.controller;\n      }\n\n      __super__.call(this);\n    }\n\n    PausableObservable.prototype._subscribe = function (o) {\n      var conn = this.source.publish(),\n        subscription = conn.subscribe(o),\n        connection = disposableEmpty;\n\n      var pausable = this.pauser.distinctUntilChanged().subscribe(function (b) {\n        if (b) {\n          connection = conn.connect();\n        } else {\n          connection.dispose();\n          connection = disposableEmpty;\n        }\n      });\n\n      return new NAryDisposable([subscription, connection, pausable]);\n    };\n\n    PausableObservable.prototype.pause = function () {\n      this.controller.onNext(false);\n    };\n\n    PausableObservable.prototype.resume = function () {\n      this.controller.onNext(true);\n    };\n\n    return PausableObservable;\n\n  }(Observable));\n\n  /**\n   * Pauses the underlying observable sequence based upon the observable sequence which yields true/false.\n   * @example\n   * var pauser = new Rx.Subject();\n   * var source = Rx.Observable.interval(100).pausable(pauser);\n   * @param {Observable} pauser The observable sequence used to pause the underlying sequence.\n   * @returns {Observable} The observable sequence which is paused based upon the pauser.\n   */\n  observableProto.pausable = function (pauser) {\n    return new PausableObservable(this, pauser);\n  };\n\n  function combineLatestSource(source, subject, resultSelector) {\n    return new AnonymousObservable(function (o) {\n      var hasValue = [false, false],\n        hasValueAll = false,\n        isDone = false,\n        values = new Array(2),\n        err;\n\n      function next(x, i) {\n        values[i] = x;\n        hasValue[i] = true;\n        if (hasValueAll || (hasValueAll = hasValue.every(identity))) {\n          if (err) { return o.onError(err); }\n          var res = tryCatch(resultSelector).apply(null, values);\n          if (res === errorObj) { return o.onError(res.e); }\n          o.onNext(res);\n        }\n        isDone && values[1] && o.onCompleted();\n      }\n\n      return new BinaryDisposable(\n        source.subscribe(\n          function (x) {\n            next(x, 0);\n          },\n          function (e) {\n            if (values[1]) {\n              o.onError(e);\n            } else {\n              err = e;\n            }\n          },\n          function () {\n            isDone = true;\n            values[1] && o.onCompleted();\n          }),\n        subject.subscribe(\n          function (x) {\n            next(x, 1);\n          },\n          function (e) { o.onError(e); },\n          function () {\n            isDone = true;\n            next(true, 1);\n          })\n        );\n    }, source);\n  }\n\n  var PausableBufferedObservable = (function (__super__) {\n    inherits(PausableBufferedObservable, __super__);\n    function PausableBufferedObservable(source, pauser) {\n      this.source = source;\n      this.controller = new Subject();\n\n      if (pauser && pauser.subscribe) {\n        this.pauser = this.controller.merge(pauser);\n      } else {\n        this.pauser = this.controller;\n      }\n\n      __super__.call(this);\n    }\n\n    PausableBufferedObservable.prototype._subscribe = function (o) {\n      var q = [], previousShouldFire;\n\n      function drainQueue() { while (q.length > 0) { o.onNext(q.shift()); } }\n\n      var subscription =\n        combineLatestSource(\n          this.source,\n          this.pauser.startWith(false).distinctUntilChanged(),\n          function (data, shouldFire) {\n            return { data: data, shouldFire: shouldFire };\n          })\n          .subscribe(\n            function (results) {\n              if (previousShouldFire !== undefined && results.shouldFire !== previousShouldFire) {\n                previousShouldFire = results.shouldFire;\n                // change in shouldFire\n                if (results.shouldFire) { drainQueue(); }\n              } else {\n                previousShouldFire = results.shouldFire;\n                // new data\n                if (results.shouldFire) {\n                  o.onNext(results.data);\n                } else {\n                  q.push(results.data);\n                }\n              }\n            },\n            function (err) {\n              drainQueue();\n              o.onError(err);\n            },\n            function () {\n              drainQueue();\n              o.onCompleted();\n            }\n          );\n      return subscription;      \n    };\n\n    PausableBufferedObservable.prototype.pause = function () {\n      this.controller.onNext(false);\n    };\n\n    PausableBufferedObservable.prototype.resume = function () {\n      this.controller.onNext(true);\n    };\n\n    return PausableBufferedObservable;\n\n  }(Observable));\n\n  /**\n   * Pauses the underlying observable sequence based upon the observable sequence which yields true/false,\n   * and yields the values that were buffered while paused.\n   * @example\n   * var pauser = new Rx.Subject();\n   * var source = Rx.Observable.interval(100).pausableBuffered(pauser);\n   * @param {Observable} pauser The observable sequence used to pause the underlying sequence.\n   * @returns {Observable} The observable sequence which is paused based upon the pauser.\n   */\n  observableProto.pausableBuffered = function (pauser) {\n    return new PausableBufferedObservable(this, pauser);\n  };\n\n  var ControlledObservable = (function (__super__) {\n    inherits(ControlledObservable, __super__);\n    function ControlledObservable (source, enableQueue, scheduler) {\n      __super__.call(this);\n      this.subject = new ControlledSubject(enableQueue, scheduler);\n      this.source = source.multicast(this.subject).refCount();\n    }\n\n    ControlledObservable.prototype._subscribe = function (o) {\n      return this.source.subscribe(o);\n    };\n\n    ControlledObservable.prototype.request = function (numberOfItems) {\n      return this.subject.request(numberOfItems == null ? -1 : numberOfItems);\n    };\n\n    return ControlledObservable;\n\n  }(Observable));\n\n  var ControlledSubject = (function (__super__) {\n    inherits(ControlledSubject, __super__);\n    function ControlledSubject(enableQueue, scheduler) {\n      enableQueue == null && (enableQueue = true);\n\n      __super__.call(this);\n      this.subject = new Subject();\n      this.enableQueue = enableQueue;\n      this.queue = enableQueue ? [] : null;\n      this.requestedCount = 0;\n      this.requestedDisposable = null;\n      this.error = null;\n      this.hasFailed = false;\n      this.hasCompleted = false;\n      this.scheduler = scheduler || currentThreadScheduler;\n    }\n\n    addProperties(ControlledSubject.prototype, Observer, {\n      _subscribe: function (o) {\n        return this.subject.subscribe(o);\n      },\n      onCompleted: function () {\n        this.hasCompleted = true;\n        if (!this.enableQueue || this.queue.length === 0) {\n          this.subject.onCompleted();\n          this.disposeCurrentRequest();\n        } else {\n          this.queue.push(Notification.createOnCompleted());\n        }\n      },\n      onError: function (error) {\n        this.hasFailed = true;\n        this.error = error;\n        if (!this.enableQueue || this.queue.length === 0) {\n          this.subject.onError(error);\n          this.disposeCurrentRequest();\n        } else {\n          this.queue.push(Notification.createOnError(error));\n        }\n      },\n      onNext: function (value) {\n        if (this.requestedCount <= 0) {\n          this.enableQueue && this.queue.push(Notification.createOnNext(value));\n        } else {\n          (this.requestedCount-- === 0) && this.disposeCurrentRequest();\n          this.subject.onNext(value);\n        }\n      },\n      _processRequest: function (numberOfItems) {\n        if (this.enableQueue) {\n          while (this.queue.length > 0 && (numberOfItems > 0 || this.queue[0].kind !== 'N')) {\n            var first = this.queue.shift();\n            first.accept(this.subject);\n            if (first.kind === 'N') {\n              numberOfItems--;\n            } else {\n              this.disposeCurrentRequest();\n              this.queue = [];\n            }\n          }\n        }\n\n        return numberOfItems;\n      },\n      request: function (number) {\n        this.disposeCurrentRequest();\n        var self = this;\n\n        this.requestedDisposable = this.scheduler.schedule(number,\n        function(s, i) {\n          var remaining = self._processRequest(i);\n          var stopped = self.hasCompleted || self.hasFailed;\n          if (!stopped && remaining > 0) {\n            self.requestedCount = remaining;\n\n            return disposableCreate(function () {\n              self.requestedCount = 0;\n            });\n              // Scheduled item is still in progress. Return a new\n              // disposable to allow the request to be interrupted\n              // via dispose.\n          }\n        });\n\n        return this.requestedDisposable;\n      },\n      disposeCurrentRequest: function () {\n        if (this.requestedDisposable) {\n          this.requestedDisposable.dispose();\n          this.requestedDisposable = null;\n        }\n      }\n    });\n\n    return ControlledSubject;\n  }(Observable));\n\n  /**\n   * Attaches a controller to the observable sequence with the ability to queue.\n   * @example\n   * var source = Rx.Observable.interval(100).controlled();\n   * source.request(3); // Reads 3 values\n   * @param {bool} enableQueue truthy value to determine if values should be queued pending the next request\n   * @param {Scheduler} scheduler determines how the requests will be scheduled\n   * @returns {Observable} The observable sequence which only propagates values on request.\n   */\n  observableProto.controlled = function (enableQueue, scheduler) {\n\n    if (enableQueue && isScheduler(enableQueue)) {\n      scheduler = enableQueue;\n      enableQueue = true;\n    }\n\n    if (enableQueue == null) {  enableQueue = true; }\n    return new ControlledObservable(this, enableQueue, scheduler);\n  };\n\n  /**\n   * Pipes the existing Observable sequence into a Node.js Stream.\n   * @param {Stream} dest The destination Node.js stream.\n   * @returns {Stream} The destination stream.\n   */\n  observableProto.pipe = function (dest) {\n    var source = this.pausableBuffered();\n\n    function onDrain() {\n      source.resume();\n    }\n\n    dest.addListener('drain', onDrain);\n\n    source.subscribe(\n      function (x) {\n        !dest.write(String(x)) && source.pause();\n      },\n      function (err) {\n        dest.emit('error', err);\n      },\n      function () {\n        // Hack check because STDIO is not closable\n        !dest._isStdio && dest.end();\n        dest.removeListener('drain', onDrain);\n      });\n\n    source.resume();\n\n    return dest;\n  };\n\n  var TransduceObserver = (function (__super__) {\n    inherits(TransduceObserver, __super__);\n    function TransduceObserver(o, xform) {\n      this._o = o;\n      this._xform = xform;\n      __super__.call(this);\n    }\n\n    TransduceObserver.prototype.next = function (x) {\n      var res = tryCatch(this._xform['@@transducer/step']).call(this._xform, this._o, x);\n      if (res === errorObj) { this._o.onError(res.e); }\n    };\n\n    TransduceObserver.prototype.error = function (e) { this._o.onError(e); };\n\n    TransduceObserver.prototype.completed = function () {\n      this._xform['@@transducer/result'](this._o);\n    };\n\n    return TransduceObserver;\n  }(AbstractObserver));\n\n  function transformForObserver(o) {\n    return {\n      '@@transducer/init': function() {\n        return o;\n      },\n      '@@transducer/step': function(obs, input) {\n        return obs.onNext(input);\n      },\n      '@@transducer/result': function(obs) {\n        return obs.onCompleted();\n      }\n    };\n  }\n\n  /**\n   * Executes a transducer to transform the observable sequence\n   * @param {Transducer} transducer A transducer to execute\n   * @returns {Observable} An Observable sequence containing the results from the transducer.\n   */\n  observableProto.transduce = function(transducer) {\n    var source = this;\n    return new AnonymousObservable(function(o) {\n      var xform = transducer(transformForObserver(o));\n      return source.subscribe(new TransduceObserver(o, xform));\n    }, source);\n  };\n\n  var AnonymousObservable = Rx.AnonymousObservable = (function (__super__) {\n    inherits(AnonymousObservable, __super__);\n\n    // Fix subscriber to check for undefined or function returned to decorate as Disposable\n    function fixSubscriber(subscriber) {\n      return subscriber && isFunction(subscriber.dispose) ? subscriber :\n        isFunction(subscriber) ? disposableCreate(subscriber) : disposableEmpty;\n    }\n\n    function setDisposable(s, state) {\n      var ado = state[0], self = state[1];\n      var sub = tryCatch(self.__subscribe).call(self, ado);\n      if (sub === errorObj && !ado.fail(errorObj.e)) { thrower(errorObj.e); }\n      ado.setDisposable(fixSubscriber(sub));\n    }\n\n    function AnonymousObservable(subscribe, parent) {\n      this.source = parent;\n      this.__subscribe = subscribe;\n      __super__.call(this);\n    }\n\n    AnonymousObservable.prototype._subscribe = function (o) {\n      var ado = new AutoDetachObserver(o), state = [ado, this];\n\n      if (currentThreadScheduler.scheduleRequired()) {\n        currentThreadScheduler.schedule(state, setDisposable);\n      } else {\n        setDisposable(null, state);\n      }\n      return ado;\n    };\n\n    return AnonymousObservable;\n\n  }(Observable));\n\n  var AutoDetachObserver = (function (__super__) {\n    inherits(AutoDetachObserver, __super__);\n\n    function AutoDetachObserver(observer) {\n      __super__.call(this);\n      this.observer = observer;\n      this.m = new SingleAssignmentDisposable();\n    }\n\n    var AutoDetachObserverPrototype = AutoDetachObserver.prototype;\n\n    AutoDetachObserverPrototype.next = function (value) {\n      var result = tryCatch(this.observer.onNext).call(this.observer, value);\n      if (result === errorObj) {\n        this.dispose();\n        thrower(result.e);\n      }\n    };\n\n    AutoDetachObserverPrototype.error = function (err) {\n      var result = tryCatch(this.observer.onError).call(this.observer, err);\n      this.dispose();\n      result === errorObj && thrower(result.e);\n    };\n\n    AutoDetachObserverPrototype.completed = function () {\n      var result = tryCatch(this.observer.onCompleted).call(this.observer);\n      this.dispose();\n      result === errorObj && thrower(result.e);\n    };\n\n    AutoDetachObserverPrototype.setDisposable = function (value) { this.m.setDisposable(value); };\n    AutoDetachObserverPrototype.getDisposable = function () { return this.m.getDisposable(); };\n\n    AutoDetachObserverPrototype.dispose = function () {\n      __super__.prototype.dispose.call(this);\n      this.m.dispose();\n    };\n\n    return AutoDetachObserver;\n  }(AbstractObserver));\n\n  var InnerSubscription = function (s, o) {\n    this._s = s;\n    this._o = o;\n  };\n\n  InnerSubscription.prototype.dispose = function () {\n    if (!this._s.isDisposed && this._o !== null) {\n      var idx = this._s.observers.indexOf(this._o);\n      this._s.observers.splice(idx, 1);\n      this._o = null;\n    }\n  };\n\n  /**\n   *  Represents an object that is both an observable sequence as well as an observer.\n   *  Each notification is broadcasted to all subscribed observers.\n   */\n  var Subject = Rx.Subject = (function (__super__) {\n    inherits(Subject, __super__);\n    function Subject() {\n      __super__.call(this);\n      this.isDisposed = false;\n      this.isStopped = false;\n      this.observers = [];\n      this.hasError = false;\n    }\n\n    addProperties(Subject.prototype, Observer.prototype, {\n      _subscribe: function (o) {\n        checkDisposed(this);\n        if (!this.isStopped) {\n          this.observers.push(o);\n          return new InnerSubscription(this, o);\n        }\n        if (this.hasError) {\n          o.onError(this.error);\n          return disposableEmpty;\n        }\n        o.onCompleted();\n        return disposableEmpty;\n      },\n      /**\n       * Indicates whether the subject has observers subscribed to it.\n       * @returns {Boolean} Indicates whether the subject has observers subscribed to it.\n       */\n      hasObservers: function () { checkDisposed(this); return this.observers.length > 0; },\n      /**\n       * Notifies all subscribed observers about the end of the sequence.\n       */\n      onCompleted: function () {\n        checkDisposed(this);\n        if (!this.isStopped) {\n          this.isStopped = true;\n          for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n            os[i].onCompleted();\n          }\n\n          this.observers.length = 0;\n        }\n      },\n      /**\n       * Notifies all subscribed observers about the exception.\n       * @param {Mixed} error The exception to send to all observers.\n       */\n      onError: function (error) {\n        checkDisposed(this);\n        if (!this.isStopped) {\n          this.isStopped = true;\n          this.error = error;\n          this.hasError = true;\n          for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n            os[i].onError(error);\n          }\n\n          this.observers.length = 0;\n        }\n      },\n      /**\n       * Notifies all subscribed observers about the arrival of the specified element in the sequence.\n       * @param {Mixed} value The value to send to all observers.\n       */\n      onNext: function (value) {\n        checkDisposed(this);\n        if (!this.isStopped) {\n          for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n            os[i].onNext(value);\n          }\n        }\n      },\n      /**\n       * Unsubscribe all observers and release resources.\n       */\n      dispose: function () {\n        this.isDisposed = true;\n        this.observers = null;\n      }\n    });\n\n    /**\n     * Creates a subject from the specified observer and observable.\n     * @param {Observer} observer The observer used to send messages to the subject.\n     * @param {Observable} observable The observable used to subscribe to messages sent from the subject.\n     * @returns {Subject} Subject implemented using the given observer and observable.\n     */\n    Subject.create = function (observer, observable) {\n      return new AnonymousSubject(observer, observable);\n    };\n\n    return Subject;\n  }(Observable));\n\n  /**\n   *  Represents the result of an asynchronous operation.\n   *  The last value before the OnCompleted notification, or the error received through OnError, is sent to all subscribed observers.\n   */\n  var AsyncSubject = Rx.AsyncSubject = (function (__super__) {\n    inherits(AsyncSubject, __super__);\n\n    /**\n     * Creates a subject that can only receive one value and that value is cached for all future observations.\n     * @constructor\n     */\n    function AsyncSubject() {\n      __super__.call(this);\n      this.isDisposed = false;\n      this.isStopped = false;\n      this.hasValue = false;\n      this.observers = [];\n      this.hasError = false;\n    }\n\n    addProperties(AsyncSubject.prototype, Observer.prototype, {\n      _subscribe: function (o) {\n        checkDisposed(this);\n\n        if (!this.isStopped) {\n          this.observers.push(o);\n          return new InnerSubscription(this, o);\n        }\n\n        if (this.hasError) {\n          o.onError(this.error);\n        } else if (this.hasValue) {\n          o.onNext(this.value);\n          o.onCompleted();\n        } else {\n          o.onCompleted();\n        }\n\n        return disposableEmpty;\n      },\n      /**\n       * Indicates whether the subject has observers subscribed to it.\n       * @returns {Boolean} Indicates whether the subject has observers subscribed to it.\n       */\n      hasObservers: function () { checkDisposed(this); return this.observers.length > 0; },\n      /**\n       * Notifies all subscribed observers about the end of the sequence, also causing the last received value to be sent out (if any).\n       */\n      onCompleted: function () {\n        var i, len;\n        checkDisposed(this);\n        if (!this.isStopped) {\n          this.isStopped = true;\n          var os = cloneArray(this.observers), len = os.length;\n\n          if (this.hasValue) {\n            for (i = 0; i < len; i++) {\n              var o = os[i];\n              o.onNext(this.value);\n              o.onCompleted();\n            }\n          } else {\n            for (i = 0; i < len; i++) {\n              os[i].onCompleted();\n            }\n          }\n\n          this.observers.length = 0;\n        }\n      },\n      /**\n       * Notifies all subscribed observers about the error.\n       * @param {Mixed} error The Error to send to all observers.\n       */\n      onError: function (error) {\n        checkDisposed(this);\n        if (!this.isStopped) {\n          this.isStopped = true;\n          this.hasError = true;\n          this.error = error;\n\n          for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n            os[i].onError(error);\n          }\n\n          this.observers.length = 0;\n        }\n      },\n      /**\n       * Sends a value to the subject. The last value received before successful termination will be sent to all subscribed and future observers.\n       * @param {Mixed} value The value to store in the subject.\n       */\n      onNext: function (value) {\n        checkDisposed(this);\n        if (this.isStopped) { return; }\n        this.value = value;\n        this.hasValue = true;\n      },\n      /**\n       * Unsubscribe all observers and release resources.\n       */\n      dispose: function () {\n        this.isDisposed = true;\n        this.observers = null;\n        this.error = null;\n        this.value = null;\n      }\n    });\n\n    return AsyncSubject;\n  }(Observable));\n\n  var AnonymousSubject = Rx.AnonymousSubject = (function (__super__) {\n    inherits(AnonymousSubject, __super__);\n    function AnonymousSubject(observer, observable) {\n      this.observer = observer;\n      this.observable = observable;\n      __super__.call(this);\n    }\n\n    addProperties(AnonymousSubject.prototype, Observer.prototype, {\n      _subscribe: function (o) {\n        return this.observable.subscribe(o);\n      },\n      onCompleted: function () {\n        this.observer.onCompleted();\n      },\n      onError: function (error) {\n        this.observer.onError(error);\n      },\n      onNext: function (value) {\n        this.observer.onNext(value);\n      }\n    });\n\n    return AnonymousSubject;\n  }(Observable));\n\n  /**\n   *  Represents a value that changes over time.\n   *  Observers can subscribe to the subject to receive the last (or initial) value and all subsequent notifications.\n   */\n  var BehaviorSubject = Rx.BehaviorSubject = (function (__super__) {\n    inherits(BehaviorSubject, __super__);\n    function BehaviorSubject(value) {\n      __super__.call(this);\n      this.value = value;\n      this.observers = [];\n      this.isDisposed = false;\n      this.isStopped = false;\n      this.hasError = false;\n    }\n\n    addProperties(BehaviorSubject.prototype, Observer.prototype, {\n      _subscribe: function (o) {\n        checkDisposed(this);\n        if (!this.isStopped) {\n          this.observers.push(o);\n          o.onNext(this.value);\n          return new InnerSubscription(this, o);\n        }\n        if (this.hasError) {\n          o.onError(this.error);\n        } else {\n          o.onCompleted();\n        }\n        return disposableEmpty;\n      },\n      /**\n       * Gets the current value or throws an exception.\n       * Value is frozen after onCompleted is called.\n       * After onError is called always throws the specified exception.\n       * An exception is always thrown after dispose is called.\n       * @returns {Mixed} The initial value passed to the constructor until onNext is called; after which, the last value passed to onNext.\n       */\n      getValue: function () {\n        checkDisposed(this);\n        if (this.hasError) { thrower(this.error); }\n        return this.value;\n      },\n      /**\n       * Indicates whether the subject has observers subscribed to it.\n       * @returns {Boolean} Indicates whether the subject has observers subscribed to it.\n       */\n      hasObservers: function () { checkDisposed(this); return this.observers.length > 0; },\n      /**\n       * Notifies all subscribed observers about the end of the sequence.\n       */\n      onCompleted: function () {\n        checkDisposed(this);\n        if (this.isStopped) { return; }\n        this.isStopped = true;\n        for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n          os[i].onCompleted();\n        }\n\n        this.observers.length = 0;\n      },\n      /**\n       * Notifies all subscribed observers about the exception.\n       * @param {Mixed} error The exception to send to all observers.\n       */\n      onError: function (error) {\n        checkDisposed(this);\n        if (this.isStopped) { return; }\n        this.isStopped = true;\n        this.hasError = true;\n        this.error = error;\n\n        for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n          os[i].onError(error);\n        }\n\n        this.observers.length = 0;\n      },\n      /**\n       * Notifies all subscribed observers about the arrival of the specified element in the sequence.\n       * @param {Mixed} value The value to send to all observers.\n       */\n      onNext: function (value) {\n        checkDisposed(this);\n        if (this.isStopped) { return; }\n        this.value = value;\n        for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n          os[i].onNext(value);\n        }\n      },\n      /**\n       * Unsubscribe all observers and release resources.\n       */\n      dispose: function () {\n        this.isDisposed = true;\n        this.observers = null;\n        this.value = null;\n        this.error = null;\n      }\n    });\n\n    return BehaviorSubject;\n  }(Observable));\n\n  /**\n   * Represents an object that is both an observable sequence as well as an observer.\n   * Each notification is broadcasted to all subscribed and future observers, subject to buffer trimming policies.\n   */\n  var ReplaySubject = Rx.ReplaySubject = (function (__super__) {\n\n    var maxSafeInteger = Math.pow(2, 53) - 1;\n\n    function createRemovableDisposable(subject, observer) {\n      return disposableCreate(function () {\n        observer.dispose();\n        !subject.isDisposed && subject.observers.splice(subject.observers.indexOf(observer), 1);\n      });\n    }\n\n    inherits(ReplaySubject, __super__);\n\n    /**\n     *  Initializes a new instance of the ReplaySubject class with the specified buffer size, window size and scheduler.\n     *  @param {Number} [bufferSize] Maximum element count of the replay buffer.\n     *  @param {Number} [windowSize] Maximum time length of the replay buffer.\n     *  @param {Scheduler} [scheduler] Scheduler the observers are invoked on.\n     */\n    function ReplaySubject(bufferSize, windowSize, scheduler) {\n      this.bufferSize = bufferSize == null ? maxSafeInteger : bufferSize;\n      this.windowSize = windowSize == null ? maxSafeInteger : windowSize;\n      this.scheduler = scheduler || currentThreadScheduler;\n      this.q = [];\n      this.observers = [];\n      this.isStopped = false;\n      this.isDisposed = false;\n      this.hasError = false;\n      this.error = null;\n      __super__.call(this);\n    }\n\n    addProperties(ReplaySubject.prototype, Observer.prototype, {\n      _subscribe: function (o) {\n        checkDisposed(this);\n        var so = new ScheduledObserver(this.scheduler, o), subscription = createRemovableDisposable(this, so);\n\n        this._trim(this.scheduler.now());\n        this.observers.push(so);\n\n        for (var i = 0, len = this.q.length; i < len; i++) {\n          so.onNext(this.q[i].value);\n        }\n\n        if (this.hasError) {\n          so.onError(this.error);\n        } else if (this.isStopped) {\n          so.onCompleted();\n        }\n\n        so.ensureActive();\n        return subscription;\n      },\n      /**\n       * Indicates whether the subject has observers subscribed to it.\n       * @returns {Boolean} Indicates whether the subject has observers subscribed to it.\n       */\n      hasObservers: function () { checkDisposed(this); return this.observers.length > 0; },\n      _trim: function (now) {\n        while (this.q.length > this.bufferSize) {\n          this.q.shift();\n        }\n        while (this.q.length > 0 && (now - this.q[0].interval) > this.windowSize) {\n          this.q.shift();\n        }\n      },\n      /**\n       * Notifies all subscribed observers about the arrival of the specified element in the sequence.\n       * @param {Mixed} value The value to send to all observers.\n       */\n      onNext: function (value) {\n        checkDisposed(this);\n        if (this.isStopped) { return; }\n        var now = this.scheduler.now();\n        this.q.push({ interval: now, value: value });\n        this._trim(now);\n\n        for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n          var observer = os[i];\n          observer.onNext(value);\n          observer.ensureActive();\n        }\n      },\n      /**\n       * Notifies all subscribed observers about the exception.\n       * @param {Mixed} error The exception to send to all observers.\n       */\n      onError: function (error) {\n        checkDisposed(this);\n        if (this.isStopped) { return; }\n        this.isStopped = true;\n        this.error = error;\n        this.hasError = true;\n        var now = this.scheduler.now();\n        this._trim(now);\n        for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n          var observer = os[i];\n          observer.onError(error);\n          observer.ensureActive();\n        }\n        this.observers.length = 0;\n      },\n      /**\n       * Notifies all subscribed observers about the end of the sequence.\n       */\n      onCompleted: function () {\n        checkDisposed(this);\n        if (this.isStopped) { return; }\n        this.isStopped = true;\n        var now = this.scheduler.now();\n        this._trim(now);\n        for (var i = 0, os = cloneArray(this.observers), len = os.length; i < len; i++) {\n          var observer = os[i];\n          observer.onCompleted();\n          observer.ensureActive();\n        }\n        this.observers.length = 0;\n      },\n      /**\n       * Unsubscribe all observers and release resources.\n       */\n      dispose: function () {\n        this.isDisposed = true;\n        this.observers = null;\n      }\n    });\n\n    return ReplaySubject;\n  }(Observable));\n\n  /**\n  * Used to pause and resume streams.\n  */\n  Rx.Pauser = (function (__super__) {\n    inherits(Pauser, __super__);\n    function Pauser() {\n      __super__.call(this);\n    }\n\n    /**\n     * Pauses the underlying sequence.\n     */\n    Pauser.prototype.pause = function () { this.onNext(false); };\n\n    /**\n    * Resumes the underlying sequence.\n    */\n    Pauser.prototype.resume = function () { this.onNext(true); };\n\n    return Pauser;\n  }(Subject));\n\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    root.Rx = Rx;\n\n    define(function() {\n      return Rx;\n    });\n  } else if (freeExports && freeModule) {\n    // in Node.js or RingoJS\n    if (moduleExports) {\n      (freeModule.exports = Rx).Rx = Rx;\n    } else {\n      freeExports.Rx = Rx;\n    }\n  } else {\n    // in a browser or Rhino\n    root.Rx = Rx;\n  }\n\n  // All code before this point will be filtered from stack traces.\n  var rEndingLine = captureLine();\n\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rx-lite/rx.lite.js\n// module id = 2\n// module chunks = 0","var superagent = require('superagent');\n\nvar ajax = function(obj, cb) {\n  var url = obj.url;\n  var type = obj.method || obj.type || 'post';\n  var data = obj.data;\n  var request = superagent;\n\n  if (type.toLowerCase() === 'post') {\n    request = request.post( url ).send( data );\n  } else {\n    request = request.get( url );\n  }\n\n  request.end(function(res) {\n   return cb && res && cb(res.body || '');\n  });\n};\n\nmodule.exports = ajax;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ajax.js","var Rx = require('rx-lite');\nvar config = require('../config');\n\n\n/**\n*  user information event\n*  @memberof AlphaPoint\n*  @name userInformation\n*  @see {@link https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/subjects/behaviorsubject.md Rx.BehaviorSubject}\n*  @example\n*  var userInformation = AlphaPoint.userInformation.subscribe(\n*    function (data) {\n*      //data = {\n*      //  isAccepted: boolean,\n*      //  UseAuthy2FA: boolean,\n*      //  UseGoogle2FA: boolean,\n*      //  affiliateId: string,\n*      //  firstName: string,\n*      //  lastName: string,\n*      //  verificationLevels: number[]\n*      //}\n*    }\n*  );\n*\n*  // when finished with event subscription\n*  userInformation.dispose()\n*/\nvar userInformation = new Rx.BehaviorSubject({});\n\n/**\n*  user account event\n*  @memberof AlphaPoint\n*  @name accountInformation\n*  @see {@link https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/subjects/behaviorsubject.md Rx.BehaviorSubject}\n*  @example\n*  var accountInformation = AlphaPoint.accountInformation.subscribe(\n*    function (data) {\n*      //data = {\n*      //  currencies:[{\n*      //    balance: number,\n*      //    hold: number,\n*      //    name: string,\n*      //    unconfirmed: number\n*      //  }]\n*      //}\n*    }\n*  );\n*\n*  // when finished with event subscription\n*  accountInformation.dispose()\n*/\nvar accountInformation = new Rx.BehaviorSubject({});\n\n/**\n*  session event\n*  @memberof AlphaPoint\n*  @name session\n*  @see {@link https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/subjects/behaviorsubject.md Rx.BehaviorSubject}\n*  @example\n*  var session = AlphaPoint.session.subscribe(\n*    function (data) {\n*      //data = {\n*      //  accountId: number,\n*      //  expiryTimeMinutes: number,\n*      //  isAccepted: boolean,\n*      //  isFromAPIKey: boolean,\n*      //  lastActivityTime: number,\n*      //  sessionToken: string,\n*      //  timeLoggedOn: number,\n*      //  twoFaRequestType: string,\n*      //  userId: string\n*      //}\n*    }\n*  );\n*\n*  // when finished with event subscription\n*  session.dispose()\n*\n*  @param {string} test\n*/\nvar session = new Rx.BehaviorSubject({initial:true});\n\n/**\n*  account actions event\n*  @memberof AlphaPoint\n*  @name accountActions\n*  @see {@link https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/subjects/behaviorsubject.md Rx.BehaviorSubject}\n*  @example\n*  var accountActions = AlphaPoint.accountActions.subscribe(\n*    function (data) {\n*      //data = {\n*      //\n*      //}\n*    }\n*  );\n*\n*  // when finished with event subscription\n*  accountActions.dispose()\n*/\nvar accountActions = new Rx.BehaviorSubject([]);\n\n/**\n*  open orders event\n*  @memberof AlphaPoint\n*  @name openOrders\n*  @see {@link https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/subjects/behaviorsubject.md Rx.BehaviorSubject}\n*  @example\n*  var openOrders = AlphaPoint.openOrders.subscribe(\n*    function (data) {\n*      //data = {\n*      //\n*      //}\n*    }\n*  );\n*\n*  // when finished with event subscription\n*  openOrders.dispose()\n*/\nvar openOrders = new Rx.BehaviorSubject([]);\n\n/**\n*  L2 And Trades event\n*  @memberof AlphaPoint\n*  @name getL2AndTradesSubject\n*  @see {@link https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/subjects/subject.md Rx.Subject}\n*  @example\n*  var getL2AndTradesSubject = AlphaPoint.getL2AndTradesSubject.subscribe(\n*    function (data) {\n*      //data = {\n*      //\n*      //}\n*    }\n*  );\n*\n*  // when finished with event subscription\n*  getL2AndTradesSubject.dispose()\n*/\nvar getL2AndTradesSubject = new Rx.Subject();\n\nvar language = new Rx.BehaviorSubject({});\n\n\n\nvar getL2AndTrades = {};\nvar realTimeData = {};\n\nvar prodPair = new Rx.BehaviorSubject(config.prodPair);\n\n// var fromWebsocket = require('./fromWebsocket');\n// var getRealTimeSubject = fromWebsocket(config.charting_url);\nvar ajaxObserver = Rx.Observable.fromCallback( require('../ajax') );\n\nvar tickers = [];\n\nmodule.exports = {\n  userInformation: userInformation,\n  accountInformation: accountInformation,\n  session: session,\n  prodPair: prodPair,\n  getL2AndTrades: getL2AndTrades,\n  realTimeData: realTimeData,\n  getL2AndTradesSubject: getL2AndTradesSubject,\n  // getRealTimeSubject: getRealTimeSubject,\n  tickers: tickers,\n  accountActions: accountActions,\n  language: language,\n  openOrders: openOrders\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/setup.js","// Helper class that containes various helper functions, classes, and patterns\r\n\r\n// Event class helps with c# style events\r\n\r\nfunction getCookie(cname) {\r\n    var name = cname + \"=\";\r\n    var ca = document.cookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') c = c.substring(1);\r\n        if (c.indexOf(name) == 0) return c.substring(name.length, c.length);\r\n    }\r\n    return \"\";\r\n}\r\n\r\nfunction setCookie(cname, cvalue, exminutes) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exminutes * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \"; \" + expires;\r\n}\r\n\r\n// returns the data in the callback, or null if there was an error\r\nfunction getRequest(url, callback)\r\n{\r\n    var request = new XMLHttpRequest();\r\n    request.open('GET', url, true);\r\n\r\n    request.onload = function () {\r\n        if (request.status >= 200 && request.status < 400) {\r\n            // Success!\r\n            callback(request.responseText);\r\n        } else {\r\n            // We reached our target server, but it returned an error\r\n            callback(null);\r\n        }\r\n    };\r\n\r\n    request.onerror = function () {\r\n        callback(null);\r\n    };\r\n\r\n    request.send();\r\n}\r\n\r\nfunction setElementHtml(url, htmlElement) {\r\n    if (!htmlElement)\r\n    {\r\n        alert(\"setElementHtml(\" + url + \",htmlElement) .. error\");\r\n        return;\r\n    }\r\n    var request = new XMLHttpRequest();\r\n    request.open('GET', url, true);\r\n    request.onload = function () {\r\n        if (request.status >= 200 && request.status < 400) {\r\n            insertAndExecute(htmlElement, request.responseText);\r\n          //  $(htmlElement).html(request.responseText);\r\n        }\r\n    };\r\n    request.send();\r\n}\r\n\r\n\r\n// sorts an associative array in js\r\nfunction getSortedKeys(obj) {\r\n    var keys = []; for (var key in obj) keys.push(key);\r\n    return keys.sort(function (a, b) { return obj[a] - obj[b] });\r\n}\r\n\r\n\r\n\r\nfunction insertAndExecute(htmElem, text) {\r\n    htmElem.innerHTML = text;\r\n    var scripts = [];\r\n    ret = htmElem.childNodes;\r\n    for (var i = 0; ret[i]; i++) {\r\n        if (nodeName(ret[i], \"script\") && (!ret[i].type || ret[i].type.toLowerCase() === \"text/javascript\")) {\r\n            scripts.push(ret[i].parentNode ? ret[i].parentNode.removeChild(ret[i]) : ret[i]);\r\n        }\r\n    }\r\n\r\n    for (script in scripts) {\r\n        evalScript(scripts[script]);\r\n    }\r\n}\r\nfunction nodeName(elem, name) {\r\n    return elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase();\r\n}\r\nfunction evalScript(elem) {\r\n    data = (elem.text || elem.textContent || elem.innerHTML || \"\");\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0] || document.documentElement,\r\n    script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n    script.appendChild(document.createTextNode(data));\r\n    head.insertBefore(script, head.firstChild);\r\n    head.removeChild(script);\r\n\r\n    if (elem.parentNode) {\r\n        elem.parentNode.removeChild(elem);\r\n    }\r\n}\r\n/// Usage:     \r\n/// var radios = document.getElementsByName('abc');\r\n/// var selected = getSelectedRadioInput(radios);\r\nfunction getSelectedRadioInput(radios) {\r\n    for (var i = 0, length = radios.length; i < length; i++) {\r\n        if (radios[i].checked) {\r\n            return radios[i].value;\r\n        }\r\n    }\r\n}\r\n\r\n/// Usage: \r\n/// hide(document.querySelectorAll('.target'));\r\n/// hide(document.querySelector('.target'));\r\n/// hide(document.getElementById('target'));\r\nfunction hide(elements) {\r\n    elements = elements.length ? elements : [elements];\r\n    for (var index = 0; index < elements.length; index++) {\r\n        elements[index].style.display = 'none';\r\n    }\r\n}\r\n\r\n// Usage:\r\n/// var elements = document.querySelectorAll('.target');\r\n/// show(elements);\r\n/// show(elements, 'inline-block'); // The second param allows you to specify a display value\r\nfunction show(elements, specifiedDisplay) {\r\n    elements = elements.length ? elements : [elements];\r\n    for (var index = 0; index < elements.length; index++) {\r\n        elements[index].style.display = specifiedDisplay || 'block';\r\n    }\r\n}\r\n\r\n\r\n/// Event Class (http://stackoverflow.com/questions/15963984/simulate-c-sharp-like-events-in-javascript) ///\r\n/// Event Class\r\nfunction Event(sender) {\r\n    this._sender = sender;\r\n    this._listeners = [];\r\n}\r\n\r\nEvent.prototype = {\r\n    attach: function (listener) {\r\n        this._listeners.push(listener);\r\n    },\r\n    notify: function (args) {\r\n        var event = this;\r\n        event._listeners.forEach(function(listener) {\r\n            listener(event._sender, args);\r\n        });\r\n    }\r\n};\r\n\r\n/*\r\nAnd your my class. For example:\r\n\r\nfunction MyClass(name) {\r\n     var self = this;\r\n     self.Name = name;\r\n     self.nameChanged = new Event(this);\r\n\r\n     self.setName = function (newName){\r\n         self.Name = newName;\r\n         self.nameChanged.notify(newName);\r\n     }\r\n}\r\nSubscribe to event example code:\r\n\r\nvar my_class_obj = new MyClass(\"Test\");\r\nmy_class_obj.nameChanged.attach(function (sender,args){\r\n\r\n});\r\nmy_class_obj.setName(\"newName\");\r\nYou can attach more event handlers and all these event handlers will get called. And you can also add more events as you'd like: addressChanged event for example. This approach also simulate c# event (sender and args)\r\n\r\n*/\r\n/// END Event Class ///\r\n/// END Event Class ///\r\n\r\nfunction updateArrayByPx(array, trade) {\r\n  var current = null;\r\n\r\n  array.forEach(function(obj, i) {\r\n    if (obj.Price === trade.Price) {\r\n      if (!trade.Quantity) {\r\n        array.splice(i, 1);\r\n      } else {\r\n        obj.Quantity = trade.Quantity; // updating the quantity on an order\r\n        current = obj;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (!current && trade.Quantity) {\r\n    array.push(trade);\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nmodule.exports = {\r\n    getCookie: getCookie,\r\n    setCookie: setCookie,\r\n    getRequest: getRequest,\r\n    setElementHtml: setElementHtml,\r\n    getSortedKeys: getSortedKeys,\r\n    insertAndExecute: insertAndExecute,\r\n    nodeName: nodeName,\r\n    evalScript: evalScript,\r\n    getSelectedRadioInput: getSelectedRadioInput,\r\n    hide: hide,\r\n    show: show,\r\n    Event: Event,\r\n    updateArrayByPx: updateArrayByPx\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/helper.js","/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/is-object.js\n// module id = 6\n// module chunks = 0","var Rx = require('rx-lite');\n\n//List of BehaviorSubjects\nvar authenticateSubject = new Rx.BehaviorSubject([]);\nvar webAuthenticateSubject = new Rx.BehaviorSubject([]);\nvar products = new Rx.BehaviorSubject([]);\nvar instruments = new Rx.BehaviorSubject([]);\nvar oms = new Rx.BehaviorSubject([]);\nvar registerUser = new Rx.BehaviorSubject([]);\nvar resetPass = new Rx.BehaviorSubject([]);\nvar subscribe1 = new Rx.BehaviorSubject([]);\nvar subscribe2 = new Rx.BehaviorSubject([]);\nvar subscribe1Update = new Rx.BehaviorSubject([]);\nvar subscribe2Update = new Rx.BehaviorSubject([]);\nvar subscribe2UpdateBook = new Rx.BehaviorSubject([]);\nvar subscribeTradesSubject = new Rx.BehaviorSubject([]);\nvar getTickerHist = new Rx.BehaviorSubject([]);\nvar unsubscribe1 = new Rx.BehaviorSubject([]);\nvar unsubscribe2 = new Rx.BehaviorSubject([]);\nvar unsubscribeTrades = new Rx.BehaviorSubject([]);\nvar orderPrefillPriceAndSide = new Rx.BehaviorSubject({});\n\n//Authenticated\nvar auth2FA = new Rx.BehaviorSubject([]);\nvar Disable2FA = new Rx.BehaviorSubject([]);\nvar EnableGoogle2FA = new Rx.BehaviorSubject([]);\nvar getUser = new Rx.BehaviorSubject([]);\nvar setUser = new Rx.BehaviorSubject([]);\nvar setUserConfig = new Rx.BehaviorSubject([]);\nvar getUserConfig = new Rx.BehaviorSubject([]);\nvar getUserConfigVal = new Rx.BehaviorSubject([]);\nvar reqVerifyEmail = new Rx.BehaviorSubject([]);\nvar openorders = new Rx.BehaviorSubject([]);\nvar tradeReports = new Rx.BehaviorSubject([]);\nvar openquotes = new Rx.BehaviorSubject([]);\nvar accountTrades = new Rx.BehaviorSubject([]);\nvar accountTransactions = new Rx.BehaviorSubject([]);\nvar accountHistory = new Rx.BehaviorSubject([]);\nvar accountDepositHistory = new Rx.BehaviorSubject([]);\nvar accountWithDrawHistory = new Rx.BehaviorSubject([]);\nvar accountPositions = new Rx.BehaviorSubject([]);\nvar accountEvents = new Rx.BehaviorSubject([]);\nvar accountInfo = new Rx.BehaviorSubject([]);\nvar userAccounts = new Rx.BehaviorSubject([]);\nvar selectedAccount = new Rx.BehaviorSubject(null);\nvar orderHistory = new Rx.BehaviorSubject([]);\nvar orderfee = new Rx.BehaviorSubject([]);\nvar sendorder = new Rx.BehaviorSubject([]);\nvar submitBlockTradeEvent = new Rx.BehaviorSubject([]);\nvar cancel = new Rx.BehaviorSubject([]);\nvar cancelReplace = new Rx.BehaviorSubject([]);\nvar cancelAll = new Rx.BehaviorSubject([]);\nvar modify = new Rx.BehaviorSubject([]);\nvar rejectedOrders = new Rx.BehaviorSubject([]);\nvar sellOrders = new Rx.BehaviorSubject([]);\nvar buyOrders = new Rx.BehaviorSubject([]);\nvar sellOrdersUpdate = new Rx.BehaviorSubject([]);\nvar buyOrdersUpdate = new Rx.BehaviorSubject([]);\nvar lvl2Sells = new Rx.BehaviorSubject([]); // for Joe\nvar lvl2Buys = new Rx.BehaviorSubject([]); // for Joe\nvar lvl2SellsUpdate = new Rx.BehaviorSubject([]); // for Joe\nvar lvl2BuysUpdate = new Rx.BehaviorSubject([]); // for Joe\nvar lvl2RawUpdate = new Rx.BehaviorSubject([]); // for Joe\nvar lvl2Update = new Rx.BehaviorSubject([]);\nvar deposits = new Rx.BehaviorSubject([]);\nvar withdrawTemplateTypes = new Rx.BehaviorSubject([]);\nvar withdrawTemplate = new Rx.BehaviorSubject([]);\nvar submitWithdraw = new Rx.BehaviorSubject([]);\nvar createWithdrawTicket = new Rx.BehaviorSubject([]);\nvar createDeposit = new Rx.BehaviorSubject([]);\nvar keys = new Rx.BehaviorSubject([]);\nvar accountBalances = new Rx.BehaviorSubject([]);\nvar accountOrders = new Rx.BehaviorSubject([]);\nvar addApiKey = new Rx.BehaviorSubject([]);\nvar removeApiKey = new Rx.BehaviorSubject([]);\nvar myApiKeys = new Rx.BehaviorSubject([]);\nvar logoutEvent = new Rx.BehaviorSubject([]);\nvar openorderEvents = new Rx.BehaviorSubject([]);\nvar transfunds = new Rx.BehaviorSubject([]);\nvar requestfunds = new Rx.BehaviorSubject([]);\nvar getrequests = new Rx.BehaviorSubject([]);\nvar confirmrequests = new Rx.BehaviorSubject([]);\nvar rejectrequests = new Rx.BehaviorSubject([]);\nvar verifylevel = new Rx.BehaviorSubject([]);\nvar verificationLevelUpdate = new Rx.BehaviorSubject([]);\nvar sessionLoaded = new Rx.BehaviorSubject(false);\nvar userReports = new Rx.BehaviorSubject([]);\nvar userReportTickets = new Rx.BehaviorSubject([]);\nvar depositTemplate = new Rx.BehaviorSubject({});\n\nvar list = {\n  //Unauthenticated\n  authenticateSubject: authenticateSubject,\n  webAuthenticateSubject: webAuthenticateSubject,\n  products: products,\n  instruments: instruments,\n  oms: oms,\n  registerUser: registerUser,\n  resetPass: resetPass,\n  subscribe1: subscribe1,\n  subscribe2: subscribe2,\n  subscribe1Update: subscribe1Update,\n  subscribe2Update: subscribe2Update,\n  subscribe2UpdateBook: subscribe2UpdateBook,\n  subscribeTradesSubject: subscribeTradesSubject,\n  getTickerHist: getTickerHist,\n  unsubscribe1: unsubscribe1,\n  unsubscribe2: unsubscribe2,\n  unsubscribeTrades: unsubscribeTrades,\n  orderPrefillPriceAndSide: orderPrefillPriceAndSide,\n  buyOrders: buyOrders,\n  sellOrders: sellOrders,\n  buyOrdersUpdate: buyOrdersUpdate,\n  sellOrdersUpdate: sellOrdersUpdate,\n  lvl2Buys: lvl2Buys,\n  lvl2Sells: lvl2Sells,\n  lvl2BuysUpdate: lvl2BuysUpdate,\n  lvl2SellsUpdate: lvl2SellsUpdate,\n  lvl2RawUpdate: lvl2RawUpdate,\n  lvl2Update: lvl2Update,\n\n  //Authenticated\n  auth2FA: auth2FA,\n  Disable2FA: Disable2FA,\n  EnableGoogle2FA: EnableGoogle2FA,\n  getUser: getUser,\n  setUser: setUser,\n  setUserConfig: setUserConfig,\n  getUserConfig: getUserConfig,\n  getUserConfigVal: getUserConfigVal,\n  reqVerifyEmail: reqVerifyEmail,\n  openorders: openorders,\n  tradeReports: tradeReports,\n  openquotes: openquotes,\n  accountTrades: accountTrades,\n  accountTransactions: accountTransactions,\n  accountHistory: accountHistory,\n  accountDepositHistory: accountDepositHistory,\n  accountWithDrawHistory: accountWithDrawHistory,\n  accountPositions: accountPositions,\n  accountEvents: accountEvents,\n  accountInfo: accountInfo,\n  userAccounts: userAccounts,\n  orderHistory: orderHistory,\n  orderfee: orderfee,\n  sendorder: sendorder,\n  submitBlockTradeEvent: submitBlockTradeEvent,\n  cancel: cancel,\n  cancelReplace: cancelReplace,\n  cancelAll: cancelAll,\n  modify: modify,\n  deposits: deposits,\n  withdrawTemplateTypes: withdrawTemplateTypes,\n  withdrawTemplate: withdrawTemplate,\n  submitWithdraw: submitWithdraw,\n  createWithdrawTicket: createWithdrawTicket,\n  createDeposit: createDeposit,\n  selectedAccount: selectedAccount,\n  rejectedOrders: rejectedOrders,\n  keys: keys,\n  accountBalances: accountBalances,\n  accountOrders: accountOrders,\n  addApiKey: addApiKey,\n  removeApiKey: removeApiKey,\n  myApiKeys: myApiKeys,\n  logoutEvent: logoutEvent,\n  openorderEvents: openorderEvents,\n  transfunds: transfunds,\n  requestfunds: requestfunds,\n  getrequests: getrequests,\n  confirmrequests: confirmrequests,\n  rejectrequests: rejectrequests,\n  verifylevel: verifylevel,\n  verificationLevelUpdate: verificationLevelUpdate,\n  sessionLoaded: sessionLoaded,\n  userReports: userReports,\n  userReportTickets: userReportTickets,\n  depositTemplate: depositTemplate,\n};\n\nmodule.exports = list;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Test.js","var redirect = function (url){\r\n  var myPath = url.split('/'); //split by\r\n  myPath = myPath.pop(); // make url the last element in the array\r\n\r\n  // console.log(\"Local Storage\",localStorage);\r\n\r\n  console.log(\"Path\", myPath);\r\n\r\n  if(localStorage.SessionToken == \"undefined\" && (myPath !=\"\" && myPath !=\"index.html\" && myPath !=\"confirmWithdraw.html\" && myPath !=\"resetPassword.html\"  && myPath !=\"verifyEmail.html\"  && myPath !=\"trade.html\") ){\r\n\r\n    localStorage.setItem('coindirectRedirect', true);\r\n    console.log(\"Location\",myPath);\r\n\r\n    $.bootstrapGrowl('You are not logged in.',{ type: 'danger',allow_dismiss:true, align:AlphaPoint.config.growlwerPosition ,delay:AlphaPoint.config.growlwerDelay,offset: {from: 'top', amount: 30}, left:'70%'});\r\n    $.bootstrapGrowl('You will be redirected',{ type: 'danger',allow_dismiss:true, align:AlphaPoint.config.growlwerPosition ,delay:AlphaPoint.config.growlwerDelay,offset: {from: 'top', amount: 30}, left:'70%'});\r\n    setTimeout(function(){ document.location = \"index.html\" }, 4000)\r\n  }\r\n\r\n  var redirectedStatus = (localStorage.coindirectRedirect) ? JSON.parse(localStorage.coindirectRedirect) : false;\r\n  if(redirectedStatus && myPath ==\"index.html\"){\r\n    $.bootstrapGrowl('You have been redirected',{ type: 'danger',allow_dismiss:true, align:AlphaPoint.config.growlwerPosition ,delay:AlphaPoint.config.growlwerDelay,offset: {from: 'top', amount: 30}, left:'70%'});\r\n    localStorage.setItem('coindirectRedirect', false);\r\n  }\r\n\r\n  var redirectedStatusUsers = (localStorage.userSettingsUpdate) ? JSON.parse(localStorage.userSettingsUpdate) : false;\r\n  if(redirectedStatusUsers && myPath ==\"settings.html\"){\r\n    $.bootstrapGrowl('Account Information Updated',{ type: 'info',allow_dismiss:true, align:AlphaPoint.config.growlwerPosition ,delay:AlphaPoint.config.growlwerDelay,offset: {from: 'top', amount: 30}, left:'70%'});\r\n    localStorage.setItem('userSettingsUpdate', false);\r\n  }\r\n}\r\n\r\nmodule.exports = redirect;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/doRedirect.js","var config = require('./config');\r\nvar format = require('./formatOrders');\r\nvar orderBookCreate= require('./orderBookCreate');\r\nvar level1Update = [];\r\nvar updateArrayByPx = require('./socketReceive').updateArrayByPx;\r\n\r\nfunction init() {\r\n  document.APAPI.SubscribeToEvent('Logout', function(data) {\r\n    AlphaPoint.logoutV2.onNext(data);\r\n    if (data.result) AlphaPoint.logout();\r\n  });\r\n  document.APAPI.SubscribeToEvent('SubscribeLevel1', function(data) {\r\n      // var tickerBook = AlphaPoint.tickerBook.value;\r\n      // if(!tickerBook) tickerBook = []\r\n      // tickerBook.push(data)\r\n      AlphaPoint.tickerBook.onNext(data);\r\n  });\r\n  document.APAPI.SubscribeToEvent('SubscribeLevel2', function(data) {\r\n      AlphaPoint.subscribe2.onNext(data);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('RegisterNewUser', function(data) {\r\n    AlphaPoint.registerUser.onNext(data);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('GetUserInfo', function(data) {\r\n    AlphaPoint.getUser.onNext(data);\r\n  });\r\n  document.APAPI.SubscribeToEvent('GetUserConfig', function(data) {\r\n    AlphaPoint.getUserConfig.onNext(data);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('GetTickerHistory', function(data) {\r\n    AlphaPoint.getTickerHist.onNext(data);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('RequestVerifyEmail', function(data) {\r\n    AlphaPoint.reqVerifyEmail.onNext(data);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('Level1UpdateEvent', function(data) {\r\n\r\n    AlphaPoint.tickerBook.onNext(data);\r\n\r\n    var orderBook = AlphaPoint.orderBook.value;\r\n    level1Update.push(data);\r\n    AlphaPoint.subscribe1.onNext(level1Update);\r\n    if (!orderBook[data.InstrumentId]) orderBook[data.InstrumentId] = {};\r\n    orderBook[data.InstrumentId].ticker = data;\r\n    AlphaPoint.orderBook.onNext(orderBook);\r\n\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('Level2UpdateEvent', function(data) {\r\n    var orderBook = AlphaPoint.orderBook.value;\r\n    var orders = format.orders(data);\r\n\r\n    if (AlphaPoint.config.L2UpdateMethod == 2) {\r\n        return AlphaPoint.lvl2RawUpdate.onNext(data);\r\n    }\r\n\r\n    if (orders.length > 0) {\r\n      if (!orderBook[orders[0].ProductPairCode]) {\r\n        orderBook[orders[0].ProductPairCode] = {};\r\n      }\r\n\r\n      var buys = orders.filter(function(trade) {\r\n        return trade.Side == 0;\r\n      });\r\n\r\n      var sells = orders.filter(function(trade){\r\n        return trade.Side == 1;\r\n      })\r\n    }\r\n\r\n    if (buys.length > 0) {\r\n      if (orderBook[buys[0].ProductPairCode].buys) {\r\n        buys.forEach(function(buy) {\r\n          orderBook[buys[0].ProductPairCode].buys = updateArrayByPx((orderBook[buys[0].ProductPairCode] || {}).buys, buy);\r\n        });\r\n      } else {\r\n        orderBook[buys[0].ProductPairCode].buys = buys;\r\n      }\r\n\r\n      if (orderBook[buys[0].ProductPairCode].buys2) {\r\n        buys.forEach(function(buy) {\r\n          orderBook[buys[0].ProductPairCode].buys = updateArrayByPx((orderBook[buys[0].ProductPairCode] || {}).buys2, buy);\r\n        });\r\n      } else {\r\n      orderBook[buys[0].ProductPairCode].buys2 = buys;\r\n      }\r\n\r\n      orderBook[buys[0].ProductPairCode].buys.sort(function (a, b) {\r\n        if (a.Price < b.Price) return 1;\r\n        if (a.Price > b.Price) return -1;\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    if (sells.length > 0) {\r\n      if (orderBook[sells[0].ProductPairCode].sells) {\r\n        sells.forEach(function(sell) {\r\n          (orderBook[sells[0].ProductPairCode] || {} ).sells = updateArrayByPx((orderBook[sells[0].ProductPairCode] || {}).sells, sell);\r\n        });\r\n      } else {\r\n        orderBook[sells[0].ProductPairCode].sells = sells;\r\n      }\r\n\r\n      if (orderBook[sells[0].ProductPairCode].sells2) {\r\n        sells.forEach(function(sell) {\r\n          (orderBook[sells[0].ProductPairCode] || {}).sells = updateArrayByPx((orderBook[sells[0].ProductPairCode] || {}).sells, sell);\r\n        });\r\n      } else {\r\n        orderBook[sells[0].ProductPairCode].sells2 = sells;\r\n      }\r\n\r\n      orderBook[sells[0].ProductPairCode].sells.sort(function(a, b) {\r\n        if (a.Price > b.Price) return 1;\r\n        if (a.Price < b.Price) return -1;\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    AlphaPoint.orderBook.onNext(orderBook);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('OrderTradeEvent', function(data) {\r\n    var newTrades = AlphaPoint.accountTrades.value;\r\n\r\n    newTrades.push(data)\r\n    AlphaPoint.accountTrades.onNext(newTrades);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('OrderStateEvent', function(data) {\r\n    AlphaPoint.accountBalances.onNext(data);\r\n\r\n    if (data.OrderState === 'Canceled') {\r\n      var newOrders = AlphaPoint.openorders.value.filter(function(order) {\r\n        return order.OrderId !== data.OrderId;\r\n      });\r\n\r\n      if (data.OrderType === 'BlockTrade') {\r\n        return AlphaPoint.tradeReports.onNext(\r\n          AlphaPoint.tradeReports.value.filter(function(order) {\r\n            return order.OrderId !== data.OrderId;\r\n          })\r\n        );\r\n      }\r\n\r\n      AlphaPoint.openorders.onNext(newOrders);\r\n    }\r\n\r\n    if (data.OrderState === 'Working') {\r\n      var newOrders = AlphaPoint.openorders.value.filter(function(order) {\r\n        return order.OrderId !== data.OrderId;\r\n      });\r\n\r\n      if (data.OrderType === 'BlockTrade') {\r\n        return AlphaPoint.tradeReports.onNext(AlphaPoint.tradeReports.value.concat(data));\r\n      }\r\n\r\n      newOrders.push(data);\r\n      AlphaPoint.openorders.onNext(newOrders);\r\n    }\r\n\r\n    if (data.OrderState === 'FullyExecuted') {\r\n      var newOrders = AlphaPoint.openorders.value.filter(function(order) {\r\n          return order.OrderId !== data.OrderId;\r\n      });\r\n\r\n      AlphaPoint.openorders.onNext(newOrders);\r\n    }\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('AccountPositionEvent', function(data) {\r\n    var oldPositions = AlphaPoint.accountPositions.value;\r\n\r\n    for (var j = 0; j < oldPositions.length; j++) {\r\n      if (oldPositions[j].ProductId == data.ProductId) oldPositions[j] = data;\r\n    }\r\n    AlphaPoint.accountPositions.onNext(oldPositions);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('NewOrderRejectEvent', function(data) {\r\n    AlphaPoint.rejectedOrders.onNext(data);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('MarketStateUpdate', function(data) {\r\n    var instrument = AlphaPoint.instruments.value.find(function(instrument) {\r\n      return instrument.InstrumentId === data.VenueInstrumentId;\r\n    });\r\n\r\n    $.bootstrapGrowl(\r\n      'Market for ' + instrument.Symbol + ' is ' + data.NewStatus,\r\n      Object.assign({}, AlphaPoint.config.growlerDefaultOptions, { type: 'info' })\r\n    );\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('TradeDataUpdateEvent', function(data) {\r\n    var trades = format.trades(data) || [];\r\n    var orderBook = AlphaPoint.orderBook.value;\r\n\r\n    if (trades.length) {\r\n      if (!orderBook[trades[0].ProductPairCode]) orderBook[trades[0].ProductPairCode] = {};\r\n      trades.forEach(function(trade) {\r\n        if (orderBook[trades[0].ProductPairCode].trades) {\r\n          return orderBook[trades[0].ProductPairCode].trades.push(trade);\r\n        }\r\n        return orderBook[trades[0].ProductPairCode].trades = [].concat(trade);\r\n      });\r\n    }\r\n    AlphaPoint.orderBook.onNext(orderBook);\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('LogoutEvent', function(data) {\r\n    AlphaPoint.logout();\r\n  });\r\n\r\n  document.APAPI.SubscribeToEvent('VerificationLevelUpdateEvent', function(data) {\r\n    if (data.VerificationStatus === 'Approved') {\r\n      $.bootstrapGrowl(\r\n        'Your verification has been ' + data.VerificationStatus,\r\n        Object.assign({}, AlphaPoint.config.growlerDefaultOptions, { type: 'success' })\r\n      );\r\n      $.bootstrapGrowl(\r\n        'You are now level ' + data.VerificationLevel + ' verified',\r\n        Object.assign({}, AlphaPoint.config.growlerDefaultOptions, { type: 'success' })\r\n      );\r\n    }\r\n    if (data.VerificationStatus != \"Approved\") {\r\n      $.bootstrapGrowl(data.VerificationStatus, Object.assign({}, AlphaPoint.config.growlerDefaultOptions, { type: 'success' }));\r\n    }\r\n    AlphaPoint.verificationLevelUpdate.onNext(data);\r\n  });\r\n}\r\n\r\nmodule.exports = init;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/socketReceive.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 10\n// module chunks = 0","var AP_API = require('./SocketAPI');\nvar APObjects = require('./APObjects');\nvar initSubscriptions = require('./socketReceive');\nvar library = require('./library');\n\nwindow.AP_API = AP_API;\nwindow.AlphaPoint = library;\nwindow.setElementHtml = require('./helper').setElementHtml;\n\ndocument.APAPI = new AP_API();\ndocument.wsConnection = document.APAPI.Connect(localStorage.getItem('lastUsedServer') || APConfig.API_V2_URL);\n\ndocument.AlphaPoint = {};\ndocument.AlphaPoint.OrderHelpers = {};\nAPObjects.initOrderHelpers();\n\ndocument.APAPI.addOnOpenCallback(function() {\n  var apiRef = document.APAPI;\n\n  initSubscriptions();\n  apiRef.Session = new APObjects.SessionClass(apiRef);\n  apiRef.Session.Init(function () {\n    apiRef.IsConnectedEvent.notify(true);\n  }); // lets init the session, and raise the connected event\n\n  library.socketOpen.onNext(true);\n\n  if (localStorage.SessionToken && localStorage.SessionToken !== 'undefined') {\n    var token = { SessionToken: localStorage.SessionToken };\n\n    AlphaPoint.WebAuthenticate(token);\n  }\n});\n\ndocument.APAPI.addOnCloseCallback(function() {\n  var apiRef = document.APAPI;\n\n  apiRef.IsConnectedEvent.notify(false);\n  library.socketOpen.onNext(false);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-emitter/index.js\n// module id = 12\n// module chunks = 0","var Event = require('./helper').Event;\r\n\r\n// AlphaPoint Javascript API Client\r\n// Native JS, no jquery\r\n\r\n// Contains all the alphapoint objects for a session\r\n// Uses the Event pattern in helper.js\r\n\r\n// User Info\r\n// Account Info\r\n// Balances\r\n// My Open Orders\r\n// My Recent Trades\r\n// My Account Actions\r\n// My Positions\r\n\r\n// CLASS API (AlphaPoint API)\r\n\r\n//document.API.Session\r\n//document.API.Session.Products[0].Info,Name/Increment/ETC\r\n//document.API.Session.Instruments[0].OpenOrders\r\n//document.API.Session.Instruments[0].OrderEvent\r\n//document.API.Session.Instruments[0].RecentTrades\r\n//document.API.Session.Instruments[0].NewTradesEvent\r\n//document.API.Session.Instruments[0].Info\r\n// can loop through document.API.Instruments\r\n\r\n//document.API.Session.Accounts[0].Balances\r\n//document.API.Session.Accounts[0].OpenOrders\r\n//document.API.Session.Accounts[0].RecentAccountTransactions\r\n//document.API.Session.Accounts[0].AccountTransactionsEvent\r\n//document.API.Session.Accounts[0].Info\r\n\r\n// This does the logic and state holding for the connection (application level)\r\n// public class Session()\r\nfunction SessionClass(api) {\r\n  var par = this;\r\n  var apiRef = api;\r\n  var userMenu = document.getElementById('userMenu');\r\n  var accountIndicator = document.getElementById('currentSelectedAccount');\r\n\r\n  this.SelectedInstrumentId = null; // this is used on the dashboard for what instrument all the UI widgets are on\r\n  // public Dictionary[InstrumentId] = Instrument;\r\n  this.Instruments = {};\r\n  // public Dictionary[ProductId] = prod;\r\n  this.OMSId = 1;\r\n  this.Products = {};\r\n  this.selectedAccount = null; // this is used on the dashboard for what account all the UI widgets will use\r\n  this.userAccounts = [];\r\n\r\n\r\n  this.Init = function (completedCallback) {\r\n    var completedSegments = 0;\r\n\r\n    apiRef.RPCCall('GetOMSs', { OperatorId: APConfig.OperatorId }, function(data) {\r\n      par.OmsId = data[0].OMSId || data[0].Id;\r\n      AlphaPoint.oms.onNext(data[0].OMSId || data[0].Id);\r\n\r\n      // lets fetch the products\r\n      apiRef.RPCCall('GetProducts', { OMSId: par.OmsId }, function (rv) {\r\n        AlphaPoint.products.onNext(rv);\r\n        // lets populate the products list;\r\n        rv.forEach(function(product) {\r\n          par.Products[product.ProductId] = product;\r\n        });\r\n        sectionDoneInternal();\r\n      });\r\n\r\n      apiRef.RPCCall('GetInstruments', { OMSId: par.OmsId }, function (rv) {\r\n        rv.forEach(function(ins) {\r\n          var orderBook = AlphaPoint.orderBook.value;\r\n          var tickerBook = AlphaPoint.tickerBook.value;\r\n\r\n          if (!orderBook[ins.InstrumentId]) orderBook[ins.InstrumentId] = {};\r\n          orderBook[ins.InstrumentId].Symbol = ins.Symbol;\r\n          orderBook[ins.InstrumentId].InstrumentId = ins.InstrumentId;\r\n          AlphaPoint.orderBook.onNext(orderBook);\r\n\r\n          if (!tickerBook) tickerBook= [];\r\n          AlphaPoint.tickerBook.onNext(tickerBook);\r\n\r\n          // lets populate the products list;\r\n          var newIns = new InstrumentClass(apiRef);\r\n          newIns.Info = ins;\r\n          par.Instruments[ins.InstrumentId] = newIns;\r\n        });\r\n\r\n        sectionDoneInternal();\r\n        AlphaPoint.instruments.onNext(rv);\r\n      });\r\n\r\n      // document.APAPI.RPCCall('GetUserAccounts', { AccountId: 1, OMSId: par.OmsId }, processUserAccounts);\r\n    });\r\n\r\n    function sectionDoneInternal() {\r\n      completedSegments++;\r\n      if (completedSegments === 2) completedCallback();\r\n    }\r\n  };\r\n\r\n  this.UserObj = null;\r\n  this.Accounts = [];\r\n\r\n  this.IsAuthenticated = false;\r\n  this.IsAuthenticatedEvent = new Event(this);\r\n\r\n  apiRef.SubscribeToEvent('AuthenticateUser', function (rv) {\r\n    if (par.IsAuthenticated == true) return;\r\n    if (rv.Authenticated == true) {\r\n      par.IsAuthenticated = true;\r\n      par.UserObj = rv.User;\r\n\r\n      apiRef.RPCCall('GetUserAccounts', { \"OMSId\": par.OmsId }, processUserAccounts);\r\n    } else {\r\n      if (errorCallback) errorCallback(rv);\r\n    }\r\n  });\r\n\r\n  apiRef.SubscribeToEvent('WebAuthenticateUser', function (rv) {\r\n    if (par.IsAuthenticated === true) return;\r\n    if (rv.Authenticated === true) {\r\n      if (rv.Requires2FA === true) return;\r\n      par.IsAuthenticated = true;\r\n      AlphaPoint.session.onNext(rv);\r\n      if (!par.OmsId) { // If no public API\r\n        par.Init(function () {\r\n          apiRef.IsConnectedEvent.notify(true);\r\n        });\r\n      }\r\n      apiRef.RPCCall('GetUserInfo', { \"UserId\": rv.UserId }, function (usrRV) {\r\n        par.UserObj = usrRV;\r\n        apiRef.RPCCall('GetUserAccounts', { \"OMSId\": par.OmsId }, processUserAccounts);\r\n      });\r\n    } else {\r\n      window.localStorage.setItem('SessionToken', 'undefined');\r\n    }\r\n  }.bind(this));\r\n\r\n\r\n  this.changeCurrentAccount = function(accountId) {\r\n    var currentAccount = par.Accounts.find(function(account) {\r\n      return account.AccountId === +accountId;\r\n    });\r\n\r\n    AlphaPoint.selectedAccount.onNext(+accountId);\r\n    par.selectedAccount = +accountId;\r\n    $('#userMenu li:not(#logoutLinkContainer)').remove();\r\n    accountIndicator.innerHTML = currentAccount.AccountInfo.AccountName || accountId;\r\n\r\n    par.userAccounts.filter(function(account) {\r\n      return account != par.selectedAccount;\r\n    }).forEach(function(accountId) {\r\n      var otherAccount = par.Accounts.find(function(account) {\r\n        return account.AccountId === accountId;\r\n      });\r\n      var listEl = document.createElement('li');\r\n\r\n      listEl.innerHTML = '<a data-id=\"' + accountId + '\">Account ' + (otherAccount.AccountInfo.AccountName || accountId);\r\n      if (document.getElementById('logoutLinkContainer')) {\r\n        userMenu.insertBefore(listEl, document.getElementById('logoutLinkContainer'));\r\n      } else {\r\n        userMenu.appendChild(listEl);\r\n      }\r\n    });\r\n  }\r\n\r\n  function processUserAccounts(data) {\r\n    // This is a list of account numbers\r\n    var accountsLength = data.length;\r\n    var selectedAccount = document.APAPI.Session.selectedAccount || data[0];\r\n\r\n    function completedLoadingAcc() {\r\n      accountsLength--;\r\n      if (accountsLength === 0) {\r\n        par.IsAuthenticatedEvent.notify(par.UserObj);\r\n        if (AlphaPoint.config.apexSite) {\r\n          par.changeCurrentAccount(data[0]);\r\n        }\r\n      }\r\n    }\r\n\r\n    data.forEach(function(accountId) {\r\n      var newAcc = new AccountClass(apiRef, accountId);\r\n\r\n      AlphaPoint.getAccountTransactions(accountId);\r\n      AlphaPoint.getRequestTransfers(accountId);\r\n      par.Accounts.push(newAcc);\r\n      newAcc.Init(function () { // account initiated\r\n        completedLoadingAcc();\r\n      });\r\n    });\r\n\r\n    AlphaPoint.getAccountInfo({ AccountId: selectedAccount, OMSId: par.OmsId });\r\n    AlphaPoint.getAPIKey({ UserId: AlphaPoint.userData.value.UserId });\r\n    AlphaPoint.getUserCon({ UserId: AlphaPoint.userData.value.UserId });\r\n\r\n    if (accountsLength) {\r\n      par.userAccounts = data;\r\n      AlphaPoint.userAccounts.onNext(data);\r\n      document.querySelector('.user-menu-container').classList.add('multiple-accounts');\r\n      AlphaPoint.selectedAccount.onNext(data[0]);\r\n    }\r\n\r\n    if (AlphaPoint.userAccounts.value) AlphaPoint.synched.onNext(true);\r\n  }\r\n  // Account list, populated with accounts for the authed user\r\n  // get the accounts by using GetUserAccounts\r\n}\r\n\r\nfunction AccountClass(apiRef, accountId) {\r\n  // all account stuff for one account\r\n  // we automatically subscribe to accounts\r\n  var par = this;\r\n\r\n  this.IsSubscribed = false;\r\n\r\n  this.Init = function (completedCallback) {\r\n    // lets subscribe tot he account stuff.\r\n    // open orders\r\n    // balances\r\n    // etc\r\n\r\n    //GetOpenOrders\r\n    //GetAccountPositions\r\n\r\n    //GetOrderHistory\r\n    //GetAccountTransactions\r\n    //GetAccountTrades\r\n\r\n    //SubscribeAccountEvents\r\n\r\n    //SendOrder\r\n    //ModifyOrder\r\n    //CancelReplaceOrder\r\n    //CancelOrder\r\n    //CancelAllOrders\r\n\r\n    var taskCount = 0;\r\n\r\n    function taskCompleted() {\r\n      taskCount++;\r\n      if (taskCount === 8) {\r\n        if (completedCallback) completedCallback();\r\n      }\r\n    }\r\n\r\n    apiRef.RPCCall('GetAccountInfo', { 'OMSId': document.APAPI.Session.OmsId, 'AccountId': accountId }, function(rv) {\r\n      par.AccountInfo = rv;\r\n      taskCompleted();\r\n    });\r\n\r\n    apiRef.RPCCall('GetOpenOrders', { \"OMSId\": document.APAPI.Session.OmsId, \"AccountId\": accountId }, function (rv) {\r\n      var orders = rv.filter(function(order) { return !order.IsQuote; });\r\n      // This is a list of open order\r\n      rv.forEach(function(order) {\r\n        par.OpenOrders[order.OrderId] = order;\r\n      });\r\n      AlphaPoint.openorders.onNext(AlphaPoint.openorders.value.concat(orders));\r\n\r\n      // console.log(\"GetOpenOrders complete\");\r\n      taskCompleted();\r\n    });\r\n\r\n    apiRef.RPCCall('GetOpenTradeReports', { \"OMSID\": document.APAPI.Session.OmsId, \"AccountId\": accountId }, function (rv) {\r\n      // This is a list of open trade reports\r\n      rv.forEach(function(order) {\r\n        par.OpenTradeReports[order.OrderId] = order;\r\n      });\r\n      AlphaPoint.tradeReports.onNext(AlphaPoint.tradeReports.value.concat(rv));\r\n      taskCompleted();\r\n    });\r\n\r\n    apiRef.RPCCall('GetOpenQuotes', {\r\n      \"OMSId\": document.APAPI.Session.OmsId,\r\n      \"AccountId\": accountId,\r\n      \"InstrumentId\": document.APAPI.Session.SelectedInstrumentId\r\n    }, function (rv) {\r\n      var orders = Object.keys(rv).map(function(side) { return rv[side]; }).filter(function(order) { return order !== null; });\r\n\r\n      // This is an object with latest open bid quote and open ask quote\r\n      par.OpenQuotes = rv;\r\n      AlphaPoint.openquotes.onNext([].concat(orders));\r\n      AlphaPoint.openorders.onNext(AlphaPoint.openorders.value.concat(orders));\r\n      AlphaPoint.config.debug && console.log(\"GetOpenQuotes complete\");\r\n      taskCompleted();\r\n    });\r\n\r\n    apiRef.RPCCall('GetAccountPositions', { \"OMSId\": document.APAPI.Session.OmsId, \"AccountId\": accountId }, function (rv) {\r\n      rv.forEach(function(balance) {\r\n        par.AccountPositions[balance.ProductId] = balance;\r\n      });\r\n      AlphaPoint.accountPositions.onNext(AlphaPoint.accountPositions.value.concat(rv));\r\n\r\n      AlphaPoint.config.debug && console.log(\"GetAccountPositions complete\");\r\n      taskCompleted();\r\n    });\r\n\r\n    apiRef.RPCCall('GetOrderHistory', { \"OMSId\": document.APAPI.Session.OmsId, \"AccountId\": accountId }, function (rv) {\r\n      rv.forEach(function(order) {\r\n        if (order.OrderState !== 'Working') {\r\n          par.InactiveOrders.push(order);\r\n          if (par.InactiveOrders.length > par.InactiveOrdersCacheLength) par.InactiveOrders.pop();\r\n        }\r\n      });\r\n      AlphaPoint.orderHistory.onNext(AlphaPoint.orderHistory.value.concat(rv));\r\n\r\n      AlphaPoint.config.debug && console.log(\"GetOrderHistory complete\");\r\n      taskCompleted();\r\n    });\r\n\r\n    apiRef.RPCCall('GetAccountTrades', { \"OMSId\": document.APAPI.Session.OmsId, \"AccountId\": accountId }, function (rv) {\r\n      rv.forEach(function(trade) {\r\n        par.Trades.push(trade);\r\n      });\r\n      AlphaPoint.accountTrades.onNext(AlphaPoint.accountTrades.value.concat(rv));\r\n\r\n      AlphaPoint.config.debug && console.log(\"GetAccountTrades complete\");\r\n      taskCompleted();\r\n    });\r\n\r\n    apiRef.RPCCall('SubscribeAccountEvents', { \"OMSId\": document.APAPI.Session.OmsId, \"AccountId\": accountId }, function (rv) {\r\n      if (rv.Subscribed === true) par.IsSubscribed = true;\r\n      AlphaPoint.accountEvents.onNext(rv); // Not sure if we need this\r\n\r\n      AlphaPoint.config.debug && console.log(\"SubscribeAccountEvents complete\");\r\n      taskCompleted();\r\n    });\r\n  };\r\n\r\n  this.AccountId = accountId;\r\n  // Region: Trades\r\n  this.Trades = [];\r\n  this.NewTradesUpdateEvent = new Event(this);\r\n  apiRef.SubscribeToEvent('OrderTradeEvent', orderTradeEvent_HandlerFcn);\r\n\r\n  function orderTradeEvent_HandlerFcn(obj) {\r\n    par.Trades.push(obj);\r\n    par.NewTradesUpdateEvent.notify(obj);\r\n  }\r\n  // End Region: Trades\r\n\r\n  // Region: Open orders and Inactive Orders\r\n  apiRef.SubscribeToEvent('OrderStateEvent', orderStateEvent_HandlerFcn);\r\n\r\n  function orderStateEvent_HandlerFcn(order) {\r\n    // check if cur dictionary contains it\r\n    var containsKey = par.OpenOrders[order.OrderId] !== undefined;\r\n\r\n    if (order.OrderState !== 'Working') {\r\n      par.InactiveOrders.push(order);\r\n      if (par.InactiveOrders.length > par.InactiveOrdersCacheLength) par.InactiveOrders.pop();\r\n      par.InactiveOrdersUpdateEvent.notify(order);\r\n      if (!containsKey) return; // we don't have it and it's not working, it's not an open order and we don't want it\r\n    }\r\n\r\n    var eventArgs = new OpenOrdersUpdateEvent_EventArgs();\r\n\r\n    eventArgs.NewOrderState = order;\r\n    if (containsKey) {\r\n      eventArgs.OldOrderState = par.OpenOrders[order.OrderId];\r\n    } else {\r\n      eventArgs.OldOrderState = null;\r\n    }\r\n\r\n    if (order.OrderState !== 'Working') {\r\n      delete par.OpenOrders[order.OrderId];\r\n    } else {\r\n      par.OpenOrders[order.OrderId] = order;\r\n    }\r\n\r\n    par.OpenOrdersUpdateEvent.notify(eventArgs);\r\n  }\r\n\r\n  // public Dictionary[OrderId] = OrderObj\r\n  this.OpenOrders = {};\r\n  this.OpenTradeReports = {};\r\n  this.OpenOrdersUpdateEvent = new Event(this); // sends a OpenOrdersUpdateEvent_EventArgs object with old and new state\r\n  this.InactiveOrdersCacheLength = 100;\r\n  this.InactiveOrders = [];\r\n  this.InactiveOrdersUpdateEvent = new Event(this); // sends a new inactive order added to the list\r\n  // End Region: Open orders and Inactive Orders\r\n\r\n  // Region: AccountPosition\r\n  apiRef.SubscribeToEvent('AccountPositionEvent', accountPositionEvent_HandlerFcn);\r\n    function accountPositionEvent_HandlerFcn(obj) {\r\n      var eventArgs = new AccountPositionsUpdateEvent_EventArgs();\r\n      eventArgs.NewAccountPosition = obj;\r\n      var containsKey = par.AccountPositions[obj.ProductId] !== undefined;\r\n\r\n      if (containsKey) eventArgs.OldAccountPosition = par.AccountPositions[obj.ProductId];\r\n      else eventArgs.OldAccountPosition = null;\r\n\r\n      par.AccountPositions[obj.ProductId] = obj;\r\n      par.AccountPositionsUpdateEvent.notify(eventArgs);\r\n    }\r\n\r\n    // public Dictionary[ProductId] = AccPositionObj\r\n    this.AccountPositions = {};\r\n    this.AccountPositionsUpdateEvent = new Event(this);\r\n    // End Region: AccountPosition\r\n\r\n    this.SendOrder = function (orderSendData) {\r\n      console.log(orderSendData)\r\n      apiRef.RPCCall('SendOrder', orderSendData, function (rv) {\r\n        console.log(rv);\r\n      });\r\n    };\r\n\r\n    this.CancelOrder = function (orderId) {\r\n      apiRef.RPCCall('CancelOrder', { OmsId: document.APAPI.Session.OmsId, OrderId: orderId }, function (rv) {\r\n    });\r\n  };\r\n\r\n  //{\r\n  // \"AccountId\": 4, //Your Account Id [Integer]\r\n  // \"OMSId\": 1,  //OMS Id [Integer] Always 1\r\n  // \"InstrumentId\": 1 //Instrument Id [Integer]\r\n  //}\r\n\r\n  this.CancelAllOrders = function (instrumentId) {\r\n    apiRef.RPCCall('CancelAllOrders', { OmsId: document.APAPI.Session.OmsId, InstrumentId: instrumentId, AccountId: par.AccountId }, function (rv) {});\r\n  };\r\n}\r\n\r\n//{\r\n//    \"AccountId\": 5, //Your Account Id [Integer]\r\n//    \"ClientOrderId\": 99, //Set this to your own id if you wish to use one. It will be useful for recognizing future order states related to this call. [64 bit Integer]\r\n//    \"Quantity\": 1, //Quantity of the Order [Decimal]\r\n//    \"DisplayQuantity\": 0, //Quantity to Display on the Market. If your order is for 1000, and you only want to show 100 at a time in market data, set this to 100. Set to 0 to display all. [Decimal]\r\n//    \"LimitPrice\": 95, //The limit price for this order. [Decimal]\r\n//    \"OrderIdOCO\": 0, //If you would like to have this order cancel another on execution, set this field to the other order's server order id. Omit or set to 0 if no OCO is required. [64 Bit Integer]\r\n//    \"OrderType\": \"Limit\", //The type of order. [String] Values are \"Market\", \"Limit\", \"StopMarket\", \"StopLimit\", \"TrailingStopMarket\", \"TrailingStopLimit\"\r\n//    \"PegPriceType\": \"Last\", //When entering a Stop/Trailing order, set this to the type of price you would like to peg the Stop to. [String] Values are \"Last\", \"Bid\", \"Ask\", \"Midpoint\"\r\n//    \"InstrumentId\": 1, //The Instrument Id [Integer]\r\n//    \"RefPrice\": 0, //When entering a Trailing order, set this to the current price of the market. This ensures the trailing offset is the amount intended in a fast moving market. [Decimal]\r\n//    \"Side\": \"Buy\", //\"Buy\" or \"Sell\"\r\n//    \"StopPrice\": \"96\", //The Stop Price for this order, if it is a stop order. Otherwise you may omit this field. [Decimal]\r\n//    \"TimeInForce\": \"1\", //\"GTC\" (Good Till' Canceled), \"IOC\" (Immediate or Cancel), \"FOK\" (Fill or Kill)\r\n//    \"OMSId\": \"1\" // OMS Id [Integer] Always 1.\r\n//}\r\n\r\n// https://yap.cx/APIDOC.html#SendOrder\r\nfunction OrderSendDataClass() {\r\n  this.AccountId = 0;\r\n  this.ClientOrderId = 0;\r\n  this.Quantity = 0;\r\n  this.DisplayQuantity = 0;\r\n  this.LimitPrice = 0;\r\n  this.OrderIdOCO = 0;\r\n  this.OrderType = document.AlphaPoint.OrderHelpers.OrderType.Unknown;\r\n  this.PegPriceType = document.AlphaPoint.OrderHelpers.PegPriceType.Unknown;\r\n  this.InstrumentId = 0;\r\n  this.RefPrice = 0;\r\n  this.Side = document.AlphaPoint.OrderHelpers.Side.Unknown;\r\n  this.StopPrice = 0;\r\n  this.TimeInForce = document.AlphaPoint.OrderHelpers.TimeInForce.GTC;\r\n  this.OMSId = document.APAPI.Session.OmsId;\r\n  this.Distance = 0;\r\n  // this.SubAccount = \"Exchange\";\r\n}\r\n\r\nfunction initOrderHelpers() {\r\n  /// Market Order - 1\r\n  document.AlphaPoint.OrderHelpers.CreateMarketOrderSendData = function (insId, accId, side, qty) {\r\n    var osd = new OrderSendDataClass();\r\n\r\n    osd.AccountId = accId;\r\n    osd.ClientOrderId = 0;\r\n    osd.DisplayQuantity = 0; // display all\r\n    osd.Quantity = qty;\r\n    osd.OrderType = document.AlphaPoint.OrderHelpers.OrderType.Market;\r\n    osd.InstrumentId = insId;\r\n    osd.Side = side;\r\n    osd.OMSId = document.APAPI.Session.OmsId;\r\n    osd.TimeInForce = \"GTC\";//document.AlphaPoint.OrderHelpers.TimeInForce.GTC;\r\n    return osd;\r\n  }\r\n\r\n  /// Limit Order - 2\r\n  document.AlphaPoint.OrderHelpers.CreateLimitOrderSendData = function (insId, accId, side, qty, px) {\r\n    var osd = new OrderSendDataClass();\r\n\r\n    osd.AccountId = accId;\r\n    osd.ClientOrderId = 0;\r\n    osd.DisplayQuantity = 0; // display all\r\n    osd.Quantity = qty;\r\n    osd.LimitPrice = px;\r\n    osd.OrderType = document.AlphaPoint.OrderHelpers.OrderType.Limit;\r\n    osd.InstrumentId = insId;\r\n    osd.Side = side;\r\n    osd.OMSId = document.APAPI.Session.OmsId;\r\n    osd.TimeInForce = document.AlphaPoint.OrderHelpers.TimeInForce.GTC;\r\n    return osd;\r\n  }\r\n\r\n  /// Stop Market - 3\r\n  document.AlphaPoint.OrderHelpers.CreateStopMarketOrderSendData = function (insId, accId, side, qty, stopPx, pegType) {\r\n    var osd = new OrderSendDataClass();\r\n\r\n    osd.AccountId = accId;\r\n    osd.ClientOrderId = 0;\r\n    osd.DisplayQuantity = 0; // display all\r\n    osd.Quantity = qty;\r\n    osd.OrderType = document.AlphaPoint.OrderHelpers.OrderType.Market;\r\n    osd.InstrumentId = insId;\r\n    osd.Side = side;\r\n    osd.OMSId = document.APAPI.Session.OmsId;\r\n    osd.TimeInForce = \"GTC\";//document.AlphaPoint.OrderHelpers.TimeInForce.GTC;\r\n    osd.StopPrice = stopPx;\r\n    osd.PegPriceType = pegType;\r\n    return osd;\r\n  }\r\n\r\n  /// Stop Limit - 4\r\n  document.AlphaPoint.OrderHelpers.CreateStopLimitOrderSendData = function (insId, accId, side, qty, px, stopPx, pegType) {\r\n    var osd = new OrderSendDataClass();\r\n\r\n    osd.AccountId = accId;\r\n    osd.ClientOrderId = 0;\r\n    osd.DisplayQuantity = 0; // display all\r\n    osd.Quantity = qty;\r\n    osd.LimitPrice = px;\r\n    osd.OrderType = document.AlphaPoint.OrderHelpers.OrderType.Limit;\r\n    osd.InstrumentId = insId;\r\n    osd.Side = side;\r\n    osd.OMSId = document.APAPI.Session.OmsId;\r\n    osd.TimeInForce = document.AlphaPoint.OrderHelpers.TimeInForce.GTC;\r\n    osd.StopPrice = stopPx;\r\n    osd.PegPriceType = pegType;\r\n    return osd;\r\n  }\r\n\r\n  /// Trailing Stop Market - 5\r\n  document.AlphaPoint.OrderHelpers.CreateTrailingStopMarketOrderSendData = function (insId, accId, side, qty, dist, refPx, pegType) {\r\n    var osd = new OrderSendDataClass();\r\n\r\n    osd.AccountId = accId;\r\n    osd.ClientOrderId = 0;\r\n    osd.DisplayQuantity = 0; // display all\r\n    osd.Quantity = qty;\r\n    osd.OrderType = document.AlphaPoint.OrderHelpers.OrderType.Market;\r\n    osd.InstrumentId = insId;\r\n    osd.Side = side;\r\n    osd.OMSId = document.APAPI.Session.OmsId;\r\n    osd.TimeInForce = \"GTC\";//document.AlphaPoint.OrderHelpers.TimeInForce.GTC;\r\n    osd.Distance = dist;\r\n    osd.RefPrice = refPx;\r\n    osd.PegPriceType = pegType;\r\n    return osd;\r\n  }\r\n\r\n  /// Trailing Stop Limit - 6\r\n  document.AlphaPoint.OrderHelpers.CreateTrailingStopLimitOrderSendData = function (insId, accId, side, qty, px, dist, refPx, pegType) {\r\n    var osd = new OrderSendDataClass();\r\n\r\n    osd.AccountId = accId;\r\n    osd.ClientOrderId = 0;\r\n    osd.DisplayQuantity = 0; // display all\r\n    osd.Quantity = qty;\r\n    osd.LimitPrice = px;\r\n    osd.OrderType = document.AlphaPoint.OrderHelpers.OrderType.Limit;\r\n    osd.InstrumentId = insId;\r\n    osd.Side = side;\r\n    osd.OMSId = document.APAPI.Session.OmsId;\r\n    osd.TimeInForce = document.AlphaPoint.OrderHelpers.TimeInForce.GTC;\r\n    return osd;\r\n  }\r\n\r\n  document.AlphaPoint.OrderHelpers.OrderType = {\r\n    Unknown: 0,\r\n    Market: 1,\r\n    Limit: 2,\r\n    StopMarket: 3,\r\n    StopLimit: 4,\r\n    TrailingStopMarket: 5,\r\n    TrailingStopLimit: 6\r\n  }\r\n\r\n  document.AlphaPoint.OrderHelpers.Side = {\r\n    Unknown: 3,\r\n    Buy: 0,\r\n    Sell: 1,\r\n    Short: 2\r\n  }\r\n\r\n  document.AlphaPoint.OrderHelpers.TimeInForce = {\r\n    Unknown: 0,\r\n    GTC: 1,\r\n    IOC: 2,\r\n    FOK: 3\r\n  }\r\n\r\n  document.AlphaPoint.OrderHelpers.PegPriceType = {\r\n    Unknown: 0,\r\n    Last: 1,\r\n    Bid: 2,\r\n    Ask: 3\r\n  }\r\n}\r\n\r\n// public class OpenOrdersUpdateEvent_EventArgs(). OldOrderState will be null if there is none\r\nfunction OpenOrdersUpdateEvent_EventArgs() {\r\n  this.OldOrderState = null;\r\n  this.NewOrderState = null;\r\n}\r\n\r\n// public class AccountPositionsUpdateEvent_EventArgs(), OldAccountPosition will be null if there is none\r\nfunction AccountPositionsUpdateEvent_EventArgs() {\r\n  this.OldAccountPosition = null;\r\n  this.NewAccountPosition = null;\r\n}\r\n\r\n// public class Instrument()\r\nfunction InstrumentClass(api) {\r\n  var apiRef = api;\r\n  var par = this;\r\n\r\n  apiRef.SubscribeToEvent('Level2UpdateEvent', Level2UpdateEvent_HandlerFcn);\r\n  apiRef.SubscribeToEvent('Level1UpdateEvent', Level1UpdateEvent_HandlerFcn);\r\n  apiRef.SubscribeToEvent('TradeDataUpdateEvent', TradesUpdateEvent_HandlerFcn);\r\n\r\n  // Info\r\n  this.Info = null;\r\n  // LEVEL 2, Subscription, Event, and Data Objects\r\n\r\n  function getBestSellPrice() {\r\n    var minAskPrice = Number.MAX_VALUE;\r\n\r\n    if (!Object.keys(par.L2Sells).length) {\r\n      var minAskPrice = 0;\r\n    } else {\r\n      for (var key in par.L2Sells) {\r\n        if (par.L2Sells[key].Price < minAskPrice) {\r\n          minAskPrice = par.L2Sells[key].Price;\r\n        }\r\n      }\r\n    }\r\n\r\n    return minAskPrice;\r\n  }\r\n\r\n  function getBestBuyPrice() {\r\n    var maxBidPrice = 0;\r\n    for (var key in par.L2Buys) {\r\n      if (par.L2Buys[key].Price > maxBidPrice) {\r\n        maxBidPrice = par.L2Buys[key].Price;\r\n      }\r\n    }\r\n    return maxBidPrice;\r\n  }\r\n\r\n  this.IsLevel2Subscribed = false;\r\n  this.L2CacheLength = 300;\r\n  this.L2Buys = {}; // L2Buys[Price] = new L2Item();\r\n  this.L2Sells = {}; // L2Sells[Price] = new L2Item();\r\n  this.L2BestBuyPrice = null;\r\n  this.L2BestSellPrice = null;\r\n  this.SubscribeLevel2 = function(bSubscribe, completeCallback) {\r\n    if (bSubscribe) {\r\n      if (par.IsLevel2Subscribed) return; //Already subscribed\r\n      par.IsLevel2Subscribed = true;\r\n\r\n      var req = {\r\n        \"OMSId\": 1,  //OMS Identifier [Integer] Always 1\r\n        \"InstrumentId\": par.Info.InstrumentId,  //Instrument's Identifer [Integer]\r\n        \"Depth\": par.L2CacheLength //The Depth of the book to subscribe to updates for. In this example, you would receive 10 price levels on each side of the market. [Integer]\r\n      };\r\n      // lets subscribe\r\n      apiRef.RPCCall('SubscribeLevel2', req, function (rv) {\r\n        Level2UpdateEvent_HandlerFcn(rv);// first update, maybe just populate the book\r\n        if (completeCallback) completeCallback();\r\n      });\r\n    } else { // unsibscribe\r\n      if (!par.IsLevel2Subscribed) return; //Already unsubscribed\r\n      par.IsLevel2Subscribed = false;\r\n      var req = {\r\n        \"OMSId\": 1,  //OMS Identifier [Integer] Always 1\r\n        \"InstrumentId\": par.Info.InstrumentId,  //Instrument's Identifer [Integer]\r\n      };\r\n\r\n      apiRef.RPCCall('UnsubscribeLevel2', req, function (rv) {\r\n          par.L2Buys = {};\r\n          par.L2Sells = {};\r\n          if (completeCallback) completeCallback();\r\n      });\r\n    }\r\n  };\r\n\r\n  function Level2UpdateEvent_HandlerFcn(d) {\r\n    // check if it's for me?\r\n    if (!par.IsLevel2Subscribed) return;\r\n    if (d.length === 0) return;\r\n    if (!d[0]) return;\r\n    if (d[0][7] !== par.Info.InstrumentId) return; // if the first element is not for this instrument class exit\r\n\r\n    var Level2DataClass_ArrayObj = [];\r\n\r\n    d.forEach(function(el, index) {\r\n      var l2Data = new Level2DataClass(el);\r\n\r\n      Level2DataClass_ArrayObj.push(l2Data);\r\n\r\n      AlphaPoint.lvl2Update.onNext(l2Data);\r\n\r\n      if (l2Data.Side === 0) { // buy\r\n        if (l2Data.ActionType === 0 || l2Data.ActionType === 1 ) { // new or update\r\n          par.L2Buys[l2Data.Price] = l2Data;\r\n        } else if (l2Data.ActionType === 2) { // delete\r\n          delete par.L2Buys[l2Data.Price];\r\n        }\r\n      } else if (l2Data.Side === 1) { // sell\r\n        if (l2Data.ActionType === 0 || l2Data.ActionType === 1) { // new or update\r\n          par.L2Sells[l2Data.Price] = l2Data;\r\n        } else if (l2Data.ActionType === 2) { // delete\r\n          delete par.L2Sells[l2Data.Price];\r\n        }\r\n      }\r\n    });\r\n\r\n    par.L2BestBuyPrice = getBestBuyPrice();\r\n    par.L2BestSellPrice = getBestSellPrice();\r\n    $(\"#L1Bid\").html(par.L2BestBuyPrice.toFixed(2));\r\n    $(\"#L1Ask\").html(par.L2BestSellPrice.toFixed(2));\r\n    par.L2ChangedEvent.notify(Level2DataClass_ArrayObj);\r\n  }\r\n  this.L2ChangedEvent = new Event(this); // Array of Level2DataClass\r\n\r\n  // LEVEL 1, Subscription, Event, and Data Objects\r\n  this.IsLevel1Subscribed = false;\r\n  this.L1Data = null;\r\n  this.L1ChangedEvent = new Event(this); // Level1DataClass\r\n\r\n  this.SubscribeLevel1 = function (bSubscribe, completeCallback) {\r\n    if (bSubscribe) {\r\n      if (par.IsLevel1Subscribed) return; //Already subscribed\r\n      par.IsLevel1Subscribed = true;\r\n      par.L1ChangedEvent.attach(updateTickerData);\r\n      var req = {\r\n        \"OMSId\": 1,  //OMS Identifier [Integer] Always 1\r\n        \"InstrumentId\": par.Info.InstrumentId,  //Instrument's Identifer [Integer]\r\n      };\r\n      // lets subscribe\r\n      apiRef.RPCCall('SubscribeLevel1', req, function (rv) {\r\n        Level1UpdateEvent_HandlerFcn(rv);// first update, maybe just populate the book\r\n        if (completeCallback) completeCallback();\r\n      });\r\n    } else { // unsibscribe\r\n      if (!par.IsLevel1Subscribed) return; //Already unsubscribed\r\n      par.IsLevel1Subscribed = false;\r\n      var req = {\r\n        \"OMSId\": 1,  //OMS Identifier [Integer] Always 1\r\n        \"InstrumentId\": par.Info.InstrumentId,  //Instrument's Identifer [Integer]\r\n      };\r\n\r\n      apiRef.RPCCall('UnsubscribeLevel1', req, function (rv) {\r\n        par.L1Data = null;\r\n        if (completeCallback) completeCallback();\r\n      });\r\n    }\r\n  };\r\n\r\n  function Level1UpdateEvent_HandlerFcn(data) {\r\n    if (par.IsLevel1Subscribed === false) return; // check if it's for me?\r\n    par.L1Data = data;\r\n    par.L1ChangedEvent.notify(data);\r\n  }\r\n\r\n  function updateTickerData(sender, data) {\r\n    var l1Data = data;\r\n    //update the L1 data\r\n    if (l1Data) {\r\n      $(\"#L1LastPrice\").html(l1Data.LastTradedPx.toFixed(2));\r\n      $(\"#L124HRChange\").html(l1Data.Rolling24HrPxChange.toFixed(2) + \"%\");\r\n      // $(\"#L1Bid\").html(l1Data.BestBid.toFixed(2));\r\n      // $(\"#L1Ask\").html(l1Data.BestOffer.toFixed(2));\r\n      $(\"#L124HRVolume\").html(l1Data.Rolling24HrVolume.toFixed(2) + \" \" + document.APAPI.Session.Instruments[l1Data.InstrumentId].Info.Product1Symbol);\r\n      $(\"#L124HRLow\").html(l1Data.SessionLow.toFixed(2));\r\n      $(\"#L124HRHigh\").html(l1Data.SessionHigh.toFixed(2));\r\n    }\r\n  }\r\n\r\n  // TRADES, Recent and New trades\r\n  this.RecentTradesCacheLength = 100;\r\n  this.IsTradesSubscribed = false;\r\n  this.RecentTrades = []; // array of recent trades\r\n  this.TradesChangedEvent = new Event(this); // Param contains new trades\r\n  this.SubscribeTrades = function (bSubscribe, completeCallback) {\r\n    if (bSubscribe) {\r\n      if (par.IsTradesSubscribed) return; //Already subscribed\r\n      par.IsTradesSubscribed = true;\r\n      var req = {\r\n        \"OMSId\": 1,  //OMS Identifier [Integer] Always 1\r\n        \"InstrumentId\": par.Info.InstrumentId,  //Instrument's Identifer [Integer]\r\n        \"IncludeLastCount\": par.RecentTradesCacheLength\r\n      };\r\n      // lets subscribe\r\n      apiRef.RPCCall('SubscribeTrades', req, function (rv) {\r\n        TradesUpdateEvent_HandlerFcn(rv);// first update, maybe just populate the book\r\n        if (completeCallback) completeCallback();\r\n      });\r\n    } else { // unsibscribe\r\n      if (!par.IsTradesSubscribed) return; //Already unsubscribed\r\n      par.IsTradesSubscribed = false;\r\n      var req = {\r\n        \"OMSId\": 1,  //OMS Identifier [Integer] Always 1\r\n        \"InstrumentId\": par.Info.InstrumentId,  //Instrument's Identifer [Integer]\r\n      };\r\n\r\n      apiRef.RPCCall('UnsubscribeTrades', req, function (rv) {\r\n        par.RecentTrades = [];\r\n        if (completeCallback) completeCallback();\r\n      });\r\n    }\r\n  };\r\n\r\n  function TradesUpdateEvent_HandlerFcn(d) {\r\n    // check if it's for me?\r\n    if (par.IsTradesSubscribed == false) return;\r\n    if (d.length == 0) return;\r\n    if (!d[0]) return;\r\n    if (d[0][1] != par.Info.InstrumentId) return; // if the first element is not for this instrument class exit\r\n\r\n    var NewTradesDataClass_ArrayObj = new Array(d.length);\r\n    for (var i in d) {\r\n      //if (d[7] != par.Info.InstrumentId) // its its not for me, skip\r\n      //    continue;\r\n      var tradeData = new TradesDataClass(d[i]);\r\n      NewTradesDataClass_ArrayObj.push(tradeData);\r\n      par.RecentTrades.push(tradeData);\r\n      if (par.RecentTrades.length > par.RecentTradesCacheLength) par.RecentTrades.pop();\r\n    }\r\n\r\n    par.TradesChangedEvent.notify(NewTradesDataClass_ArrayObj);\r\n  }\r\n}\r\n\r\n// Return from server\r\nfunction TradesDataClass(obj) {\r\n  this.TradeId = obj[0];\r\n  this.InstrumentId = obj[1];\r\n  this.Quantity = obj[2];\r\n  this.Price = obj[3];\r\n  this.Order1Id = obj[4];\r\n  this.Order2Id = obj[5];\r\n  this.Timestamp = obj[6];\r\n  this.Direction = obj[7];\r\n  this.TakerSide = obj[8];\r\n}\r\n// Return from server\r\nfunction Level2DataClass(obj) {\r\n  this.UpdateId = obj[0];\r\n  this.NumberOfAccounts = obj[1];\r\n  this.UpdateDateTime = obj[2]; //Timestamp [64 bit Integer] .NET UTC Ticks. See code snippets for examples on converting this to other formats.\r\n  this.ActionType = obj[3]; //Change Type [Integer] 0=New, 1=Update, 2=Delete\r\n  this.LastTradePrice = obj[4];\r\n  this.NumberOfOrders = obj[5];\r\n  this.Price = obj[6];\r\n  this.ProductPairCode = obj[7];\r\n  this.Quantity = obj[8];\r\n  this.Side = obj[9];\r\n}\r\n\r\nmodule.exports = {\r\n  SessionClass: SessionClass,\r\n  initOrderHelpers: initOrderHelpers\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/APObjects.js","var Event = require('./helper.js').Event;\n\n// LOW LEVEL API, RPC, Events, IsConnected, Session\n// public class AP_API()\nfunction AP_API() {\n    var par = this;\n    var wsConnection = null;\n    var nextIvalue = 0;\n\n    var onOpenCallbacks = [];\n    var onCloseCallbacks = [];\n\n    // private Dictionary[frame.id] = callback;\n    var RPCCall_ReplyWaitObjects = {}\n\n    // private Dictionary[eventName] = callback\n    var RPCEvent_EventWaitObjects = {};\n\n    //############# PUBLIC FIELDS & EVENTS ###############\n    // this.wsUri = APConfig.API_V2_URL;\n    //public bool IsConnected = false;\n    this.IsConnected = false;\n    this.IsConnectedEvent = new Event(this);\n    //############# END PUBLIC FIELDS & EVENTS ###############\n\n    this.addOnOpenCallback = function(callback) {\n        onOpenCallbacks.push(callback);\n    };\n\n    this.addOnCloseCallback = function(callback) {\n        onCloseCallbacks.push(callback);\n    };\n\n    // public void Connect();\n    this.Connect = function (wsUri) {\n        wsConnection = new WebSocket(wsUri);\n\n        wsConnection.onopen = internalOpen;\n        wsConnection.onclose = internalClose;\n        wsConnection.onmessage = internalOnMessage;\n        wsConnection.onerror = internalOnError;\n        wsConnection.SubscribeToEvent = this.SubscribeToEvent;\n        wsConnection.RPCCall = this.RPCCall;\n        wsConnection.RPCCallLevel2 = this.RPCCallLevel2;\n\n        return wsConnection;\n    };\n\n    // public void RPCCall(function_name, paramObject, callback);\n    this.RPCCall = function (function_name, paramObject, callback, level) {\n        var frame = {\n            \"m\": level || 0,\n            \"i\": nextIvalue,\n            \"n\": function_name,\n            \"o\": paramObject ? JSON.stringify(paramObject) : ''\n        };\n\n        wsConnection.send(JSON.stringify(frame));\n        if (callback && typeof callback === 'function') {\n            RPCCall_ReplyWaitObjects[nextIvalue] = callback;\n        }\n        nextIvalue += 2;\n    };\n\n    this.SubscribeToEvent = function (eventName, callback) {\n        if (RPCEvent_EventWaitObjects[eventName] === undefined) {\n            RPCEvent_EventWaitObjects[eventName] = [];\n        }\n        RPCEvent_EventWaitObjects[eventName].push(callback);\n    };\n\n    this.closeConnection = function() {\n        wsConnection.close();\n    };\n\n    // private void internalOpen();\n    function internalOpen(d) {\n        par.IsConnected = true;\n        par.IsConnectedEvent.notify();\n        onOpenCallbacks.forEach(function(callback) { callback(); });\n    }\n\n    // private void internalClose();\n    function internalClose(d) {\n        par.IsConnected = false;\n        onCloseCallbacks.forEach(function(callback) { callback(); });\n    }\n\n    // private void internalOnMessage(ev); hooked into this.wsConnection.onmessage = internalOnMessage;\n    function internalOnMessage(ev) {\n        var frame = JSON.parse(ev.data);\n        var rpcCallback = RPCCall_ReplyWaitObjects[frame.i];\n\n        if (rpcCallback) {\n            if (frame.o != '') {\n                try {\n                    rpcCallback(JSON.parse(frame.o));\n                } catch(e) {\n                    // console.error(e);\n                }\n            } else {\n                rpcCallback();\n            }\n            delete RPCCall_ReplyWaitObjects[frame.i];\n        }\n\n        if (RPCEvent_EventWaitObjects[frame.n]) {\n            if (frame.o != '') {\n                for (var i = 0; i < RPCEvent_EventWaitObjects[frame.n].length; ++i) {\n                    try {\n                        RPCEvent_EventWaitObjects[frame.n][i](JSON.parse(frame.o));\n                    } catch(e) {\n                        console.error(e);\n                    }\n                }\n            } else {\n                for (var i = 0; i < RPCEvent_EventWaitObjects[frame.n].length; ++i) {\n                    RPCEvent_EventWaitObjects[frame.n][i]();\n                }\n            }\n        }\n    }\n\n    function internalOnError(evt) {\n        console.log(\"ERROR MESSAGE\",evt);\n    }\n} // END CLASS AP_API()\n\nmodule.exports = AP_API;\n\n\n\n// WEBPACK FOOTER //\n// ./src/SocketAPI.js","var logs = require('./logs');\r\n\r\nvar subscribeAccountEvents = function(accountId) {\r\n  var requestPayload = {AccountId: accountId, OMSId: AlphaPoint.oms.value} || {} ;\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('SubscribeAccountEvents', requestPayload, function(data) {});\r\n  });\r\n};\r\n\r\nmodule.exports = subscribeAccountEvents;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/accountEventsSubscribe.js","var logs = require('./logs');\r\n\r\nvar Authenticate = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('AuthenticateUser', requestPayload, function(data) {\r\n      AlphaPoint.authenticateSubject.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = Authenticate;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/authenticate.js","var logs = require('./logs');\r\n\r\nvar authenticate2FA = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('Authenticate2FA', requestPayload, function(data) {\r\n      AlphaPoint.auth2FA.onNext(data);\r\n      logs.userData.onNext(data);\r\n\r\n      // Getting a SessionToken\r\n      if (data.Authenticated) {\r\n        logs.session.onNext(data);\r\n        logs.session.subscribe(function (data) {\r\n            if(data.SessionToken) localStorage.setItem(\"SessionToken\", data.SessionToken);\r\n        });\r\n        logs.userData.subscribe(function(data) {\r\n            localStorage.setItem(\"UserId\", data.UserId)\r\n        });\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = authenticate2FA;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/authenticate2FA.js","var logs = require('./logs');\r\n\r\nvar cancelAllOrders= function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('CancelAllOrders', requestPayload, console.log);\r\n  })\r\n};\r\n\r\nmodule.exports = cancelAllOrders\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/cancelAllOrders.js","//var socket = require (\"./\");\r\n\r\nvar logs = require('./logs');\r\n\r\n// var Message = require('./socketSend');\r\n// var Message = require('../connection/socketSend');\r\n\r\nvar cancelOrder = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('CancelOrder', requestPayload, function(data) {\r\n      AlphaPoint.cancel.onNext(data);\r\n      console.log(data);\r\n    });\r\n    // Message('CancelOrder', requestPayload);\r\n  });\r\n};\r\n\r\nmodule.exports = cancelOrder;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/cancelOrder.js","var logs = require('./logs');\r\n\r\nvar cancelReplaceOrder = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('CancelReplaceOrder', requestPayload, console.log);\r\n  });\r\n};\r\n\r\nmodule.exports = cancelReplaceOrder;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/cancelReplaceOrder.js","var logs = require('./logs');\r\n\r\nvar confirmRequestTransfers = function(data) {\r\n  requestPayload = data || {} ;\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('ConfirmRequestTransferFunds', requestPayload, function(data) {\r\n      AlphaPoint.confirmrequests.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = confirmRequestTransfers;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/confirmRequestTransfers.js","var logs = require('./logs');\r\n\r\nvar createAPIKey = function(requestPayload) {\r\n  console.log(\"AlphaPoint.userID\",AlphaPoint.userData);\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('AddUserAPIKey', requestPayload, function(data) {\r\n      AlphaPoint.addApiKey.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = createAPIKey;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/createAPIKeys.js","var logs = require('./logs');\n\nvar registerNewUser = function(requestPayload) {\n  requestPayload = requestPayload || {};\n\n  logs.socketOpen.filter(function(open) {\n    return open;\n  }).take(1).subscribe(function(open) {\n    document.APAPI.RPCCall('RegisterNewUser', requestPayload);\n  });\n}\n\nmodule.exports = registerNewUser;\n\n\n\n// WEBPACK FOOTER //\n// ./src/createAccount.js","var logs = require('./logs');\r\n\r\nvar createDepositTicket = function(data) {\r\n  var requestPayload = {\r\n    OMSId: AlphaPoint.oms.value,\r\n    accountId: data.accountId,\r\n    assetId: data.productId,\r\n    assetName: data.currencyCode,\r\n    amount: data.amount,\r\n    RequestUser: data.accountId,\r\n    OperatorId: AlphaPoint.config.OperatorId,\r\n    Status: data.status,\r\n    DepositInfo: data.depositInfo\r\n  };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('createDepositTicket', requestPayload, function(data) {\r\n      AlphaPoint.createDeposit.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\n\r\nmodule.exports = createDepositTicket;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/createDepositTicket.js","var logs = require('./logs');\r\n\r\nvar createWithdrawTicket = function(data) {\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('createWithdrawTicket', data, function(data) {\r\n      AlphaPoint.createWithdrawTicket.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = createWithdrawTicket;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/createWithdrawTicket.js","var logs = require('./logs');\r\n\r\nvar disable2FA = function(requestPayload) {\r\n  requestPayload = requestPayload || {};  \r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('Disable2FA', requestPayload, function(data) {\r\n      AlphaPoint.Disable2FA.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = disable2FA;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/disable2FA.js","var logs = require('./logs');\r\n\r\nvar enableGoogle2FA = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n    \r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('EnableGoogle2FA', requestPayload, function(data) {\r\n      AlphaPoint.EnableGoogle2FA.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = enableGoogle2FA;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/enableGoogle2fa.js","var Rx = require('rx-lite');\r\n\r\nvar orders = function(arrayOrders) {\r\n  var orders = arrayOrders.length ? arrayOrders.map(function(info) {\r\n    var order = {\r\n      UpdateId: info[0],\r\n      Account: info[1],\r\n      TimeStamp:info[2],\r\n      ActionType: info[3],\r\n      LastTradePrice: info[4],\r\n      Orders: info[5],\r\n      Price: +info[6],\r\n      ProductPairCode: info[7],\r\n      Quantity: +info[8],\r\n      Side: info[9],\r\n    };\r\n    \r\n    return order;\r\n  }) : [];\r\n\r\n  return orders;\r\n};\r\n\r\nvar trades = function(arrayTrades) {\r\n  var trades =  arrayTrades.length ? arrayTrades.map(function(info) {\r\n    var trade = {\r\n      TradeId: info[0],\r\n      ProductPairCode: info[1],\r\n      Quantity: +info[2],\r\n      Price: +info[3],\r\n      Order1: info[4],\r\n      Order2: info[5],\r\n      TradeTime:info[6],\r\n      Direction: info[7],\r\n      Side: info[8],\r\n      IsBlockTrade: info[9] ? true : false,\r\n    };\r\n    \r\n    return trade;\r\n  }) : [];\r\n\r\n  return trades;\r\n};\r\n\r\nmodule.exports = {\r\n  orders:orders,\r\n  trades:trades,\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/formatOrders.js","var config = require('./config');\r\nvar logs = require('./logs');\r\n\r\nvar getLogout = function() {\r\n  var requestPayload = {};\r\n  \r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('Logout', requestPayload);\r\n    logs.session.onNext({});\r\n    document.location = AlphaPoint.config.logoutRedirect;\r\n  });\r\n};\r\n\r\nmodule.exports = getLogout;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/get-logout.js","var logs = require('./logs');\r\n\r\nvar getAPIKey = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetUserAPIKeys', requestPayload, function(data) {\r\n      AlphaPoint.myApiKeys.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getAPIKey;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getAPIKeys.js","var logs = require('./logs');\r\n\r\nvar getAccountDepositHistory = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetAccountDepositHistory', requestPayload, function(data) {\r\n      AlphaPoint.accountDepositHistory.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getAccountDepositHistory;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getAccountDepositHistory.js","var logs = require('./logs');\r\n\r\nvar getAccountHistory = function(requestPayload) {\r\n  var requestPayload = {\r\n    AccountId:AlphaPoint.userAccounts.value,\r\n    OMSId:AlphaPoint.oms.value\r\n  };\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetAccountHistory', requestPayload, function(data) {\r\n      AlphaPoint.accountHistory.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getAccountHistory;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getAccountHistory.js","var logs = require('./logs');\r\n\r\nvar getAccountInfo = function(requestPayload){\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetAccountInfo', requestPayload, function(data) {\r\n      AlphaPoint.config.debug && console.log(\"GetAccountInfo\", data);\r\n      AlphaPoint.accountInfo.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getAccountInfo;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getAccountInfo.js","var logs = require('./logs');\r\n\r\nvar getAccountPositions = function(accountId) {\r\n  if (AlphaPoint.oms.value == false) return;\r\n\r\n  var requestPayload = {\r\n    AccountId: accountId,\r\n    OMSId: AlphaPoint.oms.value\r\n  };\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetAccountPositions', requestPayload, function(data) {\r\n      AlphaPoint.accountPositions.onNext(AlphaPoint.accountPositions.value.concat(data));\r\n    });\r\n  });\r\n};\r\n\r\n\r\nmodule.exports = getAccountPositions;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getAccountPositions.js","var logs = require('./logs');\r\n\r\nvar getAccountTrades = function(accountId) {\r\n  var requestPayload = {\r\n    AccountId: accountId,\r\n    OMSId: AlphaPoint.oms.value,\r\n    StartIndex: 0,\r\n    Count: 100\r\n  };\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetAccountTrades', requestPayload, function(data) {\r\n      AlphaPoint.accountTrades.onNext(AlphaPoint.accountTrades.value.concat(data));\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getAccountTrades;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getAccountTrades.js","var logs = require('./logs');\r\n\r\nvar getAccountTransactions = function(accountId) {\r\n  var requestPayload = {\r\n    AccountId: accountId,\r\n    OMSId: AlphaPoint.oms.value,\r\n    StartIndex: 0,\r\n    Count: 100\r\n  };\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetAccountTransactions', requestPayload, function(data) {\r\n      AlphaPoint.accountTransactions.onNext(AlphaPoint.accountTransactions.value.concat(data));\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getAccountTransactions;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getAccountTransactions.js","var logs = require('./logs');\r\n\r\nvar getAccountWithDrawHistory = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetAccountWithDrawHistory', requestPayload, function(data) {\r\n      console.log(\"GetAccountWithdrawHistory\",data);\r\n      AlphaPoint.accountWithDrawHistory.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getAccountWithDrawHistory;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getAccountWithDrawHistory.js","var logs = require('./logs');\r\n\r\nvar getDepositInfo = function(requestPayload) {\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetDepositInfo', requestPayload, function(data) {\r\n      var keys = data.DepositInfo && JSON.parse(data.DepositInfo);\r\n      AlphaPoint.keys.onNext(keys)\r\n      AlphaPoint.deposits.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getDepositInfo;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getDepositInfo.js","var logs = require('./logs');\n\nvar getDepositRequestInfoTemplate = function(requestPayload) {\n  logs.socketOpen.filter(function(open) {\n    return open;\n  }).take(1).subscribe(function(open) {\n    document.APAPI.RPCCall('GetDepositRequestInfoTemplate', requestPayload, function(data) {\n      console.log('GetDepositRequestInfoTemplate response: ', data);\n      AlphaPoint.depositTemplate.onNext(data || {});\n    });\n  });\n};\n\nmodule.exports = getDepositRequestInfoTemplate;\n\n\n\n// WEBPACK FOOTER //\n// ./src/getDepositRequestInfoTemplate.js","var logs = require('./logs');\r\n\r\nvar getInstruments = function() {\r\n  var requestPayload = { OMSId:AlphaPoint.oms.value };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetInstruments', requestPayload, function(data) {\r\n      AlphaPoint.instruments.onNext(data);\r\n\r\n      data.forEach(function(ins) {\r\n        var orderBook = AlphaPoint.orderBook.value;\r\n        var tickerBook = AlphaPoint.tickerBook.value;\r\n        \r\n        if (!orderBook[ins.InstrumentId]) orderBook[ins.InstrumentId] = {};\r\n        orderBook[ins.InstrumentId].Symbol = ins.Symbol;\r\n        orderBook[ins.InstrumentId].InstrumentId = ins.InstrumentId;\r\n        AlphaPoint.orderBook.onNext(orderBook);\r\n      \r\n        if (!tickerBook) tickerBook= [];\r\n        AlphaPoint.tickerBook.onNext(tickerBook);\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\n\r\nmodule.exports = getInstruments;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getInstruments.js","var ajax = require('./ajax');\r\nvar config = require('./config');\r\nvar events = require('./events/setup');\r\n\r\nvar cache = {};\r\n\r\nvar getLanguage = function(data, callback) {\r\n  data = data || {};\r\n  data.language = data.language || config.defaultLanguage;\r\n\r\n  if (!data.language) return callback && callback({});\r\n\r\n  if (cache[data.language]) return callback && callback(cache[data.language]);\r\n\r\n  ajax({url: config.languagesLocation + '/' + data.language + '.json', type: 'GET' }, function(res) {\r\n    if (res) {\r\n      events.language.onNext(res);\r\n      if (callback) { callback(res); }\r\n    } else {\r\n      ajax({url: config.languagesLocation + '/' + config.defaultLanguage + '.json', type: 'GET' }, function(res) {\r\n        if (res) {\r\n          events.language.onNext(res);\r\n          if (callback) { callback(res); }\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = getLanguage;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getLanguage.js","var config = require('./config');\r\nvar logs = require('./logs');\r\n\r\nvar getOMS = function() {\r\n  var requestPayload = { OperatorId: config.OperatorId };\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetOMSs', requestPayload, function(data) {\r\n      AlphaPoint.oms.onNext(data[0].OMSId);\r\n      AlphaPoint.getInstruments();\r\n      AlphaPoint.getProducts();\r\n      AlphaPoint.getUserAccounts(1);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getOMS;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getOMSs.js","var logs = require('./logs');\r\n\r\nvar getOpenOrders = function(accountId) {\r\n  if ( AlphaPoint.oms.value == false || AlphaPoint.userAccounts.value == false ) return;\r\n\r\n  var requestPayload = {\r\n    AccountId: accountId,\r\n    OMSId: AlphaPoint.oms.value\r\n  };\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetOpenOrders', requestPayload, function(data) {\r\n      AlphaPoint.openorders.onNext(AlphaPoint.openorders.value.concat(data));\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getOpenOrders;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getOpenOrders.js","var logs = require('./logs');\r\n\r\nvar getOrderFee = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetOrderFee', requestPayload, function(data) {\r\n      AlphaPoint.orderfee.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getOrderFee;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getOrderFee.js","var logs = require('./logs');\r\n\r\nvar getOrderHistory = function(accountId) {\r\n  var requestPayload = {\r\n    AccountId: accountId,\r\n    OMSId: AlphaPoint.oms.value\r\n  };\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetOrderHistory', requestPayload, function(data) {\r\n      AlphaPoint.orderHistory.onNext(AlphaPoint.orderHistory.value.concat(data));\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getOrderHistory;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getOrderHistory.js","var logs = require('./logs');\r\n\r\nvar getProducts= function() {\r\n  if (AlphaPoint.oms.value == false) return;\r\n  var requestPayload = { OMSId: AlphaPoint.oms.value };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetProducts', requestPayload, function(data) {\r\n      AlphaPoint.products.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getProducts;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getProducts.js","var logs = require('./logs');\r\n\r\nvar getRequestTransfers = function(accountId) {\r\n  var requestPayload = {\r\n    OMSId:AlphaPoint.oms.value,\r\n    OperatorId:AlphaPoint.config.OperatorId,\r\n    PayerAccountId: accountId,\r\n    Status:0\r\n  };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetRequestTransfers', requestPayload, function(data) {\r\n      AlphaPoint.getrequests.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getRequestTransfers;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getRequestTransfers.js","var logs = require('./logs');\r\n\r\nvar getUserAccounts = function(AccountId) {\r\n  var requestPayload = { AccountId: AccountId, OMSId: AlphaPoint.oms.value } || {};\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetUserAccounts', requestPayload, function(data) {\r\n      const selectedAccount = document.APAPI.Session.selectedAccount;\r\n\r\n      AlphaPoint.userAccounts.onNext(data);\r\n      data.forEach(function(accountId) {\r\n        AlphaPoint.getOpenOrders(accountId);\r\n        AlphaPoint.getAccountPositions(accountId);\r\n        AlphaPoint.getAccountTrades(accountId);\r\n        AlphaPoint.getAccountTransactions(accountId);\r\n        AlphaPoint.subscribeAccountEvents(accountId);\r\n        AlphaPoint.getOrderHistory(accountId);\r\n        AlphaPoint.getRequestTransfers(accountId);\r\n      });\r\n      AlphaPoint.getAccountInfo({ AccountId: document.APAPI.Session.selectedAccount, OMSId: AlphaPoint.oms.value });\r\n      AlphaPoint.getAPIKey({ UserId: AlphaPoint.userData.value.UserId });\r\n      AlphaPoint.getUserCon({ UserId: AlphaPoint.userData.value.UserId });\r\n      if (AlphaPoint.userAccounts.value) AlphaPoint.synched.onNext(true);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getUserAccounts;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getUserAccounts.js","var logs = require('./logs');\r\n\r\nvar getUserCon = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetUserConfig', requestPayload, function(data) {\r\n      AlphaPoint.getUserConfig.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getUserCon;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getUserConfig.js","var logs = require('./logs');\r\n\r\nvar getUserConfigValue = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetUserConfigValue', requestPayload, function(data) {\r\n      AlphaPoint.getUserConfigVal.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getUserConfigValue;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getUserConfigValue.js","var logs = require('./logs');\r\n\r\nvar getUserInfo = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetUserInfo', requestPayload, function(data) {\r\n      AlphaPoint.getUser.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\n\r\nmodule.exports = getUserInfo;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getUserInfo.js","var logs = require('./logs');\n\nvar getUserReportTickets = function() {\n  var requestPayload = {\n    UserId: AlphaPoint.userData.value.UserId\n  };\n\n  logs.session.filter(function(open) {\n    return open.SessionToken;\n  }).take(1).subscribe(function(open) {\n    document.APAPI.RPCCall('GetUserReportTickets', requestPayload, function(data) {\n      AlphaPoint.userReportTickets.onNext(data);\n    });\n  });\n};\n\nmodule.exports = getUserReportTickets;\n\n\n\n// WEBPACK FOOTER //\n// ./src/getUserReportTickets.js","var logs = require('./logs');\n\nvar getUserReportWriterResultRecords = function() {\n  var requestPayload = {};\n\n  logs.session.filter(function(open) {\n    return open.SessionToken;\n  }).take(1).subscribe(function(open) {\n    document.APAPI.RPCCall('GetUserReportWriterResultRecords', requestPayload, function(data) {\n      AlphaPoint.userReports.onNext(data);\n    });\n  });\n};\n\nmodule.exports = getUserReportWriterResultRecords;\n\n\n\n// WEBPACK FOOTER //\n// ./src/getUserReportWriterResultRecords.js","var logs = require('./logs');\r\n\r\nvar getWithdrawTemplate= function(data) {\r\n  var requestPayload = {\r\n    OMSId:AlphaPoint.oms.value,\r\n    AccountId:data.accountId,\r\n    ProductId:data.productId,\r\n    templateType: data.templateType\r\n  };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetWithdrawTemplate', requestPayload, function(data) {\r\n      AlphaPoint.withdrawTemplate.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getWithdrawTemplate;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getWithdrawTemplate.js","var logs = require('./logs');\r\n\r\nvar getWithdrawTemplateTypes= function(data) {\r\n  var requestPayload = {\r\n    OMSId:AlphaPoint.oms.value,\r\n    AccountId:data.accountId,\r\n    ProductId:data.productId,\r\n  };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('GetWithdrawTemplateTypes', requestPayload, function(data) {\r\n      AlphaPoint.withdrawTemplateTypes.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = getWithdrawTemplateTypes;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/getWithdrawTemplateTypes.js","var config = require('./config');\nvar Rx = require('rx-lite');\nvar queryString = require('query-string');\nvar logs = require('./logs.js');\nvar list = require('./Test.js');\nvar redirect = require('./doRedirect');\n\n\n/** @namespace **/\nvar AlphaPoint = {\n  config: config,\n\n  //Websocket Library Starts here\n  WebAuthenticate: require('./webAuthenticate'),\n  Authenticate: require('./authenticate'),\n  logout: require('./logout'),\n  getLogout: require('./get-logout'),\n  getProducts: require('./getProducts'),\n  getInstruments: require('./getInstruments'),\n  getOMS: require('./getOMSs'),\n  registerNewUser: require('./createAccount'),\n  resetPassword: require('./resetPassword'),\n  subscribeLvl1: require('./subscribe1'),\n  subscribeLvl2: require('./subscribe2'),\n  subscribeTrades: require('./subscribeTrades'),\n  unsubscribeLvl1: require('./unsubscribe1'),\n  unsubscribeLvl2: require('./unsubscribe2'),\n  unsubscribeTradesCall: require('./unsubscribeTrades'),\n  authenticate2FA: require('./authenticate2FA'),\n  disable2FA: require('./disable2FA'),\n  enableGoogle2FA: require('./enableGoogle2fa'),\n  getUserInfo: require('./getUserInfo'),\n  setUserInfo: require('./setUserInfo'),\n  setUserCon: require('./setUserConfig'),\n  getUserCon: require('./getUserConfig'),\n  getUserConfigValue: require('./getUserConfigValue'),\n  getOpenOrders: require('./getOpenOrders'),\n  getAccountTrades: require('./getAccountTrades'),\n  getAccountTransactions: require('./getAccountTransactions'),\n  getAccountHistory: require('./getAccountHistory'),\n  getAccountDepositHistory: require('./getAccountDepositHistory'),\n  getAccountWithDrawHistory: require('./getAccountWithDrawHistory'),\n  getAccountPositions: require('./getAccountPositions'),\n  subscribeAccountEvents: require('./accountEventsSubscribe'),\n  getAccountInfo: require('./getAccountInfo'),\n  getUserAccounts: require('./getUserAccounts'),\n  getOrderHistory: require('./getOrderHistory'),\n  getOrderFee: require('./getOrderFee'),\n  sendOrder: require('./sendOrder'),\n  submitBlockTrade: require('./submitBlockTrade'),\n  cancelOrder: require('./cancelOrder'),\n  cancelReplaceOrder: require('./cancelReplaceOrder'),\n  cancelAllOrders: require('./cancelAllOrders'),\n  modifyOrder: require('./modifyOrder'),\n  getDepositInfo: require('./getDepositInfo'),\n  getDepositRequestInfoTemplate: require('./getDepositRequestInfoTemplate'),\n  getWithdrawTemplateTypes: require('./getWithdrawTemplateTypes'),\n  getWithdrawTemplate: require('./getWithdrawTemplate'),\n  withdraw: require('./withdraw'),\n  createAPIKey: require('./createAPIKeys'),\n  deleteAPIKey: require('./removeAPIKeys'),\n  getAPIKey: require('./getAPIKeys'),\n  createDepositTicket: require('./createDepositTicket'),\n  createWithdrawTicket: require('./createWithdrawTicket'),\n  transferFunds: require('./transferFunds'),\n  requestFunds: require('./requestFunds'),\n  getRequestTransfers: require('./getRequestTransfers'),\n  confirmRequestTransfers: require('./confirmRequestTransfers'),\n  rejectRequestTransfers: require('./rejectRequestTransfers'),\n  validateUserRegistration: require('./validateUserRegistration'),\n  setUserKYCData:require('./setUserKYCData'), // For Depth Chart\n  getLanguage: require('./getLanguage'),\n  translation: require('./translation'),\n  redirect: require('./doRedirect'),\n  getUserReportWriterResultRecords: require('./getUserReportWriterResultRecords'),\n  getUserReportTickets: require('./getUserReportTickets'),\n\n  // BehaviorSubjects\n  list:  require('./Test'),\n  selectedAccount: list.selectedAccount,\n  authenticateSubject: list.authenticateSubject,\n  webAuthenticateSubject: list.webAuthenticateSubject,\n  products: list.products,\n  instruments: list.instruments,\n  oms: list.oms,\n  registerUser: list.registerUser,\n  resetPass: list.resetPass,\n  subscribe1: list.subscribe1,\n  subscribe2: list.subscribe2,\n  subscribe1Update: list.subscribe1Update,\n  subscribe2Update: list.subscribe2Update,\n  subscribe2UpdateBook: list.subscribe2Update,\n  subscribeTradesSubject: list.subscribeTradesSubject,\n  getTickerHist: list.getTickerHist,\n  unsubscribe1: list.unsubscribe1,\n  unsubscribe2: list.unsubscribe2,\n  unsubscribeTrades: list.unsubscribeTrades,\n  orderPrefillPriceAndSide: list.orderPrefillPriceAndSide,\n  auth2FA: list.auth2FA,\n  Disable2FA: list.Disable2FA,\n  EnableGoogle2FA: list.EnableGoogle2FA,\n  getUser: list.getUser,\n  setUser: list.setUser,\n  setUserConfig: list.setUserConfig,\n  getUserConfig: list.getUserConfig,\n  getUserConfigVal: list.getUserConfigVal,\n  reqVerifyEmail: list.reqVerifyEmail,\n  openorders: list.openorders,\n  tradeReports: list.tradeReports,\n  openquotes: list.openquotes,\n  accountTrades: list.accountTrades,\n  accountTransactions: list.accountTransactions,\n  accountHistory: list.accountHistory,\n  accountDepositHistory: list.accountDepositHistory,\n  accountWithDrawHistory: list.accountWithDrawHistory,\n  accountPositions: list.accountPositions,\n  accountEvents: list.accountEvents,\n  accountInfo: list.accountInfo,\n  userAccounts: list.userAccounts,\n  orderfee: list.orderfee,\n  orderHistory: list.orderHistory,\n  sendorder: list.sendorder,\n  submitBlockTradeEvent: list.submitBlockTradeEvent,\n  cancel: list.cancel,\n  cancelReplace: list.cancelReplace,\n  cancelAll: list.cancelAll,\n  modify: list.modify,\n  deposits: list.deposits,\n  withdrawTemplateTypes: list.withdrawTemplateTypes,\n  withdrawTemplate: list.withdrawTemplate,\n  submitWithdraw: list.submitWithdraw,\n  createDeposit: list.createDeposit,\n  keys: list.keys,\n  rejectedOrders: list.rejectedOrders,\n  buyOrders: list.buyOrders,\n  sellOrders: list.sellOrders,\n  buyOrdersUpdate: list.buyOrdersUpdate,\n  sellOrdersUpdate: list.sellOrdersUpdate,\n  lvl2Buys: list.lvl2Buys,\n  lvl2Sells: list.lvl2Sells,\n  lvl2BuysUpdate: list.lvl2BuysUpdate,\n  lvl2SellsUpdate: list.lvl2SellsUpdate,\n  lvl2RawUpdate: list.lvl2RawUpdate,\n  lvl2Update: list.lvl2Update,\n  accountBalances: list.accountBalances,\n  accountOrders: list.accountOrders,\n  addApiKey: list.addApiKey,\n  removeApiKey: list.removeApiKey,\n  myApiKeys: list.myApiKeys,\n  logoutEvent: list.logoutEvent,\n  openorderEvents: list.openorderEvents,\n  transfunds: list.transfunds,\n  requestfunds: list.requestfunds,\n  getrequests: list.getrequests,\n  confirmrequests: list.confirmrequests,\n  rejectrequests: list.rejectrequests,\n  verifylevel: list.verifylevel,\n  verificationLevelUpdate: list.verificationLevelUpdate,\n  sessionLoaded: list.sessionLoaded,\n  userReports: list.userReports,\n  userReportTickets: list.userReportTickets,\n  depositTemplate: list.depositTemplate,\n\n  // Captured data\n  logs : require('./logs.js'),\n  userData: logs.userData,\n  session: logs.session,\n  socketOpen: logs.socketOpen,\n  prodPair: logs.prodPair,\n  orderBook : logs.orderBook,\n  tickerBook : logs.tickerBook,\n  tickerData : logs.tickerData,\n  logoutV2 : logs.logoutV2,\n  loginStatusRedirect: logs.loginStatusRedirect,\n  prodProduct: logs.prodProduct,\n  setProductPair: logs.prodPair.onNext.bind(logs.prodPair),\n  setProduct: logs.prodProduct.onNext.bind(logs.prodProduct),\n  synched: logs.synched,\n  instrumentChange: logs.instrumentChange,\n  language: logs.language, // not sure what this is doing currently\n  queryString: queryString\n};\n\nmodule.exports = AlphaPoint;\n\n\n\n// WEBPACK FOOTER //\n// ./src/library.js","var config = require('./config');\nvar logs = require('./logs.js');\n\nfunction reset() {\n  logs.session.onNext({})\n}\n\nvar logout = function(data) {\n  data = data || {};\n  data.SessionToken = data.SessionToken\n\n  if (data.SessionToken) {\n    logs.session.onNext({})\n    document.location = AlphaPoint.config.logoutRedirect;\n  } else {\n    reset();\n    document.location = AlphaPoint.config.logoutRedirect;\n  }\n};\n\nmodule.exports = logout;\n\n\n\n// WEBPACK FOOTER //\n// ./src/logout.js","var logs = require('./logs');\r\n\r\nvar modifyOrder = function(requestPayload) {\r\n  var requestPayload = {\r\n    OMSId:localStorage.oms,\r\n    OrderId:2565\r\n  };\r\n\r\n  logs.session.filter(function(open) {\r\n    return open.SessionToken;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('ModifyOrder', requestPayload, console.log);\r\n  });\r\n};\r\n\r\nmodule.exports = modifyOrder;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/modifyOrder.js","var Rx = require('rx-lite');\r\nvar orderBook = function(orders) {};\r\n\r\nvar orderBookCreate = { orderBook: orderBook };\r\n\r\nmodule.exports = orderBookCreate\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/orderBookCreate.js","var logs = require('./logs');\r\n\r\nvar rejectRequestTransfers = function(data) {\r\n  requestPayload = data || {} ;\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('RejectRequestTransferFunds', requestPayload, function(data) {\r\n      console.log(\"RejectRequestTransferFunds\", data);\r\n      AlphaPoint.rejectrequests.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = rejectRequestTransfers;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/rejectRequestTransfers.js","var logs = require('./logs');\r\n\r\nvar deleteAPIKey = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('RemoveUserAPIKey', requestPayload, function(data) {\r\n      console.log(\"RemoveUserAPIKey\", data);\r\n      AlphaPoint.removeApiKey.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = deleteAPIKey;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/removeAPIKeys.js","var logs = require('./logs');\r\n\r\nvar requestFunds = function(data) {\r\n  requestPayload = data || {} ;\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('RequestTransferFunds', requestPayload, function(data) {\r\n      AlphaPoint.requestfunds.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = requestFunds;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/requestFunds.js","var logs = require('./logs');\r\n\r\nvar resetPassword = function(data) {\r\n  var requestPayload = {\r\n    userName:data.UserName\r\n  };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('ResetPassword',requestPayload, function(data) {\r\n      AlphaPoint.resetPass.onNext(data);\r\n      if (data.result) {\r\n        $.bootstrapGrowl('Please check your email for password reset link', { \r\n          type: 'info',\r\n          allow_dismiss: true,\r\n          align: AlphaPoint.config.growlwerPosition,\r\n          delay: AlphaPoint.config.growlwerDelay,\r\n          offset: { from: 'top', amount: 30 },\r\n          left: '70%'\r\n        });\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = resetPassword;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/resetPassword.js","var logs = require('./logs');\r\n\r\nvar sendOrder = function(data) {\r\n  requestPayload = data || {} ;\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('SendOrder', requestPayload, function(data) {\r\n      AlphaPoint.sendorder.onNext(data);\r\n      console.log(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = sendOrder;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/sendOrder.js","var logs = require('./logs');\r\n\r\nvar setUserCon = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('SetUserConfig', requestPayload, function(data) {\r\n      AlphaPoint.setUserConfig.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = setUserCon;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/setUserConfig.js","var logs = require('./logs');\r\n\r\nvar setUserInfo = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('SetUserInfo', requestPayload, function(data) {\r\n      AlphaPoint.setUser.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = setUserInfo;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/setUserInfo.js","var config = require('./config');\r\nvar ajax = require('./ajax');\r\nvar events = require('./events/setup');\r\n\r\n/**\r\n*  {@link AlphaPoint.getUserInfo} callback\r\n*  @callback AlphaPoint~getUserInfoCallback\r\n*  @param {object} response\r\n*  @param {boolean} response.isAccepted\r\n*  @param {string} response.rejectReason\r\n*  @param {string} response.affiliateId\r\n*  @param {string} response.firstName\r\n*  @param {string} response.lastName\r\n*  @param {boolean} response.UseAuthy2FA\r\n*  @param {boolean} response.UseGoogle2FA\r\n*  @param {boolean} response.GoogleAuthSiteName\r\n*  @param {number[]} response.verificationLevels\r\n*/\r\n\r\n/**\r\n*  getUserInfo\r\n*  @memberof AlphaPoint\r\n*  @param {object} data\r\n*  @param {string} data.firstName\r\n*  @param {string} data.lastName\r\n*  @param {boolean} data.UseAuthy2FA\r\n*  @param {boolean} data.UseGoogle2FA\r\n*  @param {string} [data.sessionToken=Logged in sessionToken]\r\n*  @param {AlphaPoint~getUserInfoCallback} [callback] - The callback that handles the response.\r\n*/\r\nvar setUserKYCData = function(data, callback) {\r\n  data = data || {};\r\n\r\n  var newData = {};\r\n  newData.sessionToken = data.sessionToken || events.session.value.sessionToken;\r\n\r\n  var userKYC_KVP = [];\r\n  for (var key in data) {\r\n    if (data[key] === undefined) data[key]='';\r\n    if (key !== 'sessionToken' && key !== 'idFrontB64' && key!=='idBackB64' && key!=='idHeldB64') {\r\n      userKYC_KVP.push({key:key, value: data[key].toString()});\r\n    }\r\n  }\r\n  newData.userKYC_KVP = userKYC_KVP;\r\n  newData.idFrontB64 = data['idFrontB64'];\r\n  newData.idBackB64 = data['idBackB64'];\r\n  newData.idHeldB64 = data['idHeldB64'];\r\n\r\n  if ( !newData.sessionToken || !newData.userKYC_KVP.length ) {\r\n    console.log('setUserInfo missing fields');\r\n    return;\r\n  }\r\n  console.log(\"kyc data: \"+JSON.stringify(newData));\r\n  ajax({ url: config.http.SetUserKYCData, data: newData}, function(res) {\r\n    console.log(res);\r\n    return callback && callback(res);\r\n  });\r\n};\r\n\r\nmodule.exports = setUserKYCData;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/setUserKYCData.js","var logs = require('./logs');\n\nvar submitBlockTrade = function(data) {\n  requestPayload = data || {} ;\n\n  logs.socketOpen.filter(function(open) {\n    return open;\n  }).take(1).subscribe(function(open) {\n    document.APAPI.RPCCall('SubmitBlockTrade', requestPayload, function(data) {\n      AlphaPoint.submitBlockTradeEvent.onNext(data);\n    });\n  });\n};\n\nmodule.exports = submitBlockTrade;\n\n\n\n// WEBPACK FOOTER //\n// ./src/submitBlockTrade.js","var logs = require('./logs');\r\n\r\nvar subscribeLvl1 = function(requestPayload) {\r\n  var InstrumentId = requestPayload;\r\n  requestPayload = { OMSId: AlphaPoint.oms.value, InstrumentId: InstrumentId };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('SubscribeLevel1', requestPayload, function(data) {\r\n      var level1Trades = [];\r\n      var tickerBook = AlphaPoint.tickerBook.value;\r\n\r\n      level1Trades.push(data);\r\n      AlphaPoint.subscribe1.onNext(level1Trades);\r\n      if (!tickerBook) tickerBook = [];\r\n      tickerBook.push(data)\r\n      AlphaPoint.tickerBook.onNext(tickerBook);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = subscribeLvl1;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/subscribe1.js","var logs = require('./logs');\r\n\r\nvar subscribeLvl2 = function(requestPayload) {\r\n  var InstrumentId = requestPayload;\r\n  request\r\n  Payload = { OMSId: AlphaPoint.oms.value, InstrumentId: InstrumentId, Depth: 250 };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('SubscribeLevel2', requestPayload, function(data) {\r\n      var orders = format.orders(data);\r\n      var orderBook = AlphaPoint.orderBook.value;\r\n      var buys = orders.filter(function(order) {\r\n        return order.Side == 0;\r\n      });\r\n\r\n      buys.sort(function (a, b){\r\n        if (a.Price < b.Price) return 1;\r\n        if (a.Price > b.Price) return -1;\r\n        return 0;\r\n      });\r\n\r\n      if (orders.length > 0) {\r\n        if (!orderBook[orders[0].ProductPairCode]) {\r\n          orderBook[orders[0].ProductPairCode] = {};\r\n        }\r\n        orderBook[orders[0].ProductPairCode].buys = buys;\r\n        orderBook[orders[0].ProductPairCode].buys2 = buys;\r\n      }\r\n\r\n      var sells = orders.filter(function(order) {\r\n        return order.Side == 1;\r\n      })\r\n\r\n      sells.sort(function (a, b) {\r\n        if (a.Price > b.Price) return 1;\r\n        if (a.Price < b.Price) return -1;\r\n        return 0;\r\n      });\r\n\r\n      if (orders.length) {\r\n        orderBook[orders[0].ProductPairCode].sells = sells;\r\n        orderBook[orders[0].ProductPairCode].sells2 = sells;\r\n      }\r\n      AlphaPoint.orderBook.onNext(orderBook);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = subscribeLvl2;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/subscribe2.js","var logs = require('./logs');\r\n\r\nvar subscribeTrades = function(requestPayload) {\r\n  var InstrumentId = requestPayload;\r\n  \r\n  requestPayload = { OMSId: AlphaPoint.oms.value, InstrumentId: InstrumentId, IncludeLastCount: 20 };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('SubscribeTrades', requestPayload, function(data) {\r\n      var trades = format.trades(data);\r\n      var orderBook = AlphaPoint.orderBook.value;\r\n\r\n      if(trades.length) {\r\n        if (!orderBook[trades[0].ProductPairCode]) {\r\n          orderBook[trades[0].ProductPairCode] = {};\r\n        }\r\n        orderBook[trades[0].ProductPairCode].trades = trades;\r\n      } else {\r\n      }\r\n      AlphaPoint.orderBook.onNext(orderBook);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = subscribeTrades;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/subscribeTrades.js","var logs = require('./logs');\r\n\r\nvar transferFunds = function(data) {\r\n  requestPayload = data || {} ;\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('TransferFunds', requestPayload, function(data) {\r\n      AlphaPoint.transfunds.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = transferFunds;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/transferFunds.js","var events = require('./events/setup');\r\n\r\nfunction nested(obj, attrString) {\r\n  if (!attrString.split || !attrString.split) return null;\r\n\r\n  var path = attrString.split(\".\");\r\n  for (var i in path) {\r\n    obj = obj[path[i]];\r\n    if (!obj) return '';\r\n  }\r\n  return obj;\r\n}\r\n\r\nvar translation = function(path, callback) {\r\n  var result = nested(events.language.value, path);\r\n\r\n  return result;\r\n};\r\n\r\nmodule.exports = translation;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/translation.js","var logs = require('./logs');\r\n\r\nvar unsubscribeLvl1 = function() {\r\n  var InstrumentId;\r\n  var prodPair = AlphaPoint.prodPair.value;\r\n\r\n  AlphaPoint.instruments.subscribe(function(data) {\r\n    if (prodPair === 'BTCUSD') InstrumentId = data.length && data[0].InstrumentId;\r\n    if (prodPair === 'LTCUSD') InstrumentId = data.length && data[1].InstrumentId;\r\n  });\r\n\r\n  requestPayload = { OMSId: AlphaPoint.oms.value, InstrumentId: InstrumentId };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('UnsubscribeLevel1', requestPayload, console.log);\r\n  });\r\n};\r\n\r\nmodule.exports = unsubscribeLvl1;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/unsubscribe1.js","var logs = require('./logs');\r\n\r\nvar unsubscribeLvl2 = function(id) {\r\n  var InstrumentId;\r\n  var prodPair = AlphaPoint.prodPair.value;\r\n\r\n  requestPayload = { OMSId: AlphaPoint.oms.value, InstrumentId: InstrumentId };\r\n  requestPayload = { OMSId: AlphaPoint.oms.value, InstrumentId: id };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('UnsubscribeLevel2', requestPayload, console.log);\r\n  });\r\n};\r\n\r\nmodule.exports = unsubscribeLvl2;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/unsubscribe2.js","var logs = require('./logs');\r\n\r\nvar unsubscribeTradesCall = function() {\r\n  var InstrumentId;\r\n  AlphaPoint.instruments.subscribe(function(data) {\r\n    InstrumentId = data.length && data[0].InstrumentId;\r\n  });\r\n\r\n  requestPayload = { OMSId: AlphaPoint.oms.value, InstrumentId: InstrumentId };\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('UnsubscribeTrades', requestPayload, console.log);\r\n  });\r\n};\r\n\r\nmodule.exports = unsubscribeTradesCall;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/unsubscribeTrades.js","var logs = require('./logs');\r\n\r\nvar validateUserRegistration = function(data) {\r\n  requestPayload = data || {} ;\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('ValidateUserRegistration', requestPayload, function(data) {\r\n      var res = JSON.parse(data.result);\r\n      AlphaPoint.verifylevel.onNext(res);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = validateUserRegistration;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/validateUserRegistration.js","var logs = require('./logs');\r\n\r\nvar WebAuthenticate = function(requestPayload) {\r\n  requestPayload = requestPayload || {};\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n    document.APAPI.RPCCall('WebAuthenticateUser', requestPayload, function(data) {\r\n      AlphaPoint.webAuthenticateSubject.onNext(data);\r\n      logs.session.onNext(data);\r\n      logs.userData.onNext(data);\r\n\r\n      //Getting a SessionToken\r\n      logs.session.subscribe(function(data) {\r\n        localStorage.setItem(\"SessionToken\", data.SessionToken);\r\n      });\r\n\r\n      // To handle User Id\r\n      logs.userData.subscribe(function(data) {\r\n        localStorage.setItem(\"UserId\" ,data.UserId)\r\n      });\r\n    });\r\n\r\n  });\r\n};\r\n\r\nmodule.exports = WebAuthenticate;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/webAuthenticate.js","var logs = require('./logs');\r\n\r\nvar withdraw = function(data) {\r\n  var requestPayload;\r\n\r\n  switch (data.templateType) {\r\n    case \"FIAT\": {\r\n      requestPayload = {\r\n        OMSId: AlphaPoint.oms.value,\r\n        accountId: data.accountId,\r\n        productId: data.productId,\r\n        amount: data.amount,\r\n        templateForm: JSON.stringify({\r\n          TemplateType: data.templateType,\r\n          bankAddress: data.bankAddress,\r\n          fullName: data.fullName,\r\n          language: data.language,\r\n          comment: data.comment,\r\n          bankAccountNumber: data.bankAccountNumber,\r\n          bankAccountName: data.bankAccountName,\r\n          swiftCode: data.swiftCode\r\n        }),\r\n        TemplateType: data.templateType\r\n      };\r\n      break;\r\n    }\r\n    case \"ETH\": {\r\n      requestPayload = {\r\n        OMSId: AlphaPoint.oms.value,\r\n        accountId: data.accountId,\r\n        productId: data.productId,\r\n        amount: data.amount,\r\n        templateForm: JSON.stringify({\r\n          TemplateType: data.templateType,\r\n          Adress: data.sendToAddress\r\n        }),\r\n        TemplateType: data.templateType\r\n      };\r\n      break;\r\n    }\r\n    case \"XMR\": {\r\n      requestPayload = {\r\n        OMSId: AlphaPoint.oms.value,\r\n        accountId: data.accountId,\r\n        productId: data.productId,\r\n        amount: data.amount,\r\n        templateForm: JSON.stringify({\r\n          TemplateType: data.templateType,\r\n          Address: data.sendToAddress,\r\n          PaymentId: data.PaymentId\r\n        }),\r\n        TemplateType: data.templateType\r\n      };\r\n      break;\r\n    }\r\n    default: {\r\n      requestPayload = {\r\n        OMSId: AlphaPoint.oms.value,\r\n        accountId: data.accountId,\r\n        productId: data.productId,\r\n        amount: data.amount,\r\n        templateForm: JSON.stringify({\r\n          TemplateType: data.templateType,\r\n          Comment: ' ',\r\n          ExternalAddress: data.sendToAddress\r\n        }),\r\n        TemplateType: data.templateType\r\n      };\r\n    }\r\n  };\r\n\r\n  logs.socketOpen.filter(function(open) {\r\n    return open;\r\n  }).take(1).subscribe(function(open) {\r\n      document.APAPI.RPCCall('CreateWithdrawTicket', requestPayload, function (data) {\r\n      AlphaPoint.submitWithdraw.onNext(data);\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = withdraw;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/withdraw.js","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 80\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 81\n// module chunks = 0","'use strict';\nvar strictUriEncode = require('strict-uri-encode');\nvar objectAssign = require('object-assign');\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result || accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nexports.extract = function (str) {\n\treturn str.split('?')[1] || '';\n};\n\nexports.parse = function (str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^(\\?|#|&)/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeURIComponent(val);\n\n\t\tformatter(decodeURIComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n};\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort().map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/query-string/index.js\n// module id = 82\n// module chunks = 0","'use strict';\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/strict-uri-encode/index.js\n// module id = 83\n// module chunks = 0","/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('component-emitter');\nvar RequestBase = require('./request-base');\nvar isObject = require('./is-object');\nvar isFunction = require('./is-function');\nvar ResponseBase = require('./response-base');\nvar shouldRetry = require('./should-retry');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = exports = module.exports = function(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only verison of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n      status = 204;\n  }\n  this._setStatusProperties(status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (null === this.text && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method != 'HEAD'\n      ? this._parseBody(this.text ? this.text : this.xhr.response)\n      : null;\n  }\n}\n\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if(this.req._parser) {\n    return this.req._parser(this, str);\n  }\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n        new_err.original = err;\n        new_err.response = res;\n        new_err.status = res.status;\n      }\n    } catch(e) {\n      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\nEmitter(Request.prototype);\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (typeof pass === 'object' && pass !== null) { // pass is optional and can substitute for options\n    options = pass;\n  }\n  if (!options) {\n    options = {\n      type: 'function' === typeof btoa ? 'basic' : 'auto',\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', 'Basic ' + btoa(user + ':' + pass));\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n      \n    case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', 'Bearer ' + user);\n    break;  \n  }\n  return this;\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, options){\n  if (file) {\n    if (this._data) {\n      throw Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  // console.log(this._retries, this._maxRetries)\n  if (this._maxRetries && this._retries++ < this._maxRetries && shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function(){\n  console.warn(\"This is not supported in browser version of superagent\");\n  return this;\n};\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.pipe = Request.prototype.write = function(){\n  throw Error(\"Streaming is not supported in browser version of superagent\");\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\nRequest.prototype._appendQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;\n  }\n\n  if (this._sort) {\n    var index = this.url.indexOf('?');\n    if (index >= 0) {\n      var queryArr = this.url.substring(index + 1).split('&');\n      if (isFunction(this._sort)) {\n        queryArr.sort(this._sort);\n      } else {\n        queryArr.sort();\n      }\n      this.url = this.url.substring(0, index) + '?' + queryArr.join('&');\n    }\n  }\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nRequest.prototype._isHost = function _isHost(obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n}\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  if (this._endCalled) {\n    console.warn(\"Warning: .end() was called twice. This is not supported in superagent\");\n  }\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._appendQueryString();\n\n  return this._end();\n};\n\nRequest.prototype._end = function() {\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = function(){\n    var readyState = xhr.readyState;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n    if (4 != readyState) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  }\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n\n    if (this.header.hasOwnProperty(field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn){\n  var req = request('DELETE', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/client.js\n// module id = 84\n// module chunks = 0","/**\n * Check if `fn` is a function.\n *\n * @param {Function} fn\n * @return {Boolean}\n * @api private\n */\nvar isObject = require('./is-object');\n\nfunction isFunction(fn) {\n  var tag = isObject(fn) ? Object.prototype.toString.call(fn) : '';\n  return tag === '[object Function]';\n}\n\nmodule.exports = isFunction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/is-function.js\n// module id = 85\n// module chunks = 0","/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in RequestBase.prototype) {\n    obj[key] = RequestBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function _clearTimeout(){\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, read, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function timeout(options){\n  if (!options || 'object' !== typeof options) {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    return this;\n  }\n\n  for(var option in options) {\n    switch(option) {\n      case 'deadline':\n        this._timeout = options.deadline;\n        break;\n      case 'response':\n        this._responseTimeout = options.response;\n        break;\n      default:\n        console.warn(\"Unknown timeout option\", option);\n    }\n  }\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function retry(count){\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  return this;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function() {\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    if (this._endCalled) {\n      console.warn(\"Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises\");\n    }\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\nRequestBase.prototype.catch = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\nRequestBase.prototype.ok = function(cb) {\n  if ('function' !== typeof cb) throw Error(\"Callback required\");\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function(res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nRequestBase.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function(name, val) {\n\n  // name should be either a string or an object.\n  if (null === name ||  undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    console.error(\".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  if (Array.isArray(val)) {\n    for (var i in val) {\n      this.field(name, val[i]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  if ('boolean' === typeof val) {\n    val = '' + val;\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nRequestBase.prototype.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function(on){\n  // This is browser-only functionality. Node side is no-op.\n  if(on==undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.send = function(data){\n  var isObj = isObject(data);\n  var type = this._header['content-type'];\n\n  if (this._formData) {\n    console.error(\".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObj && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObj || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function(sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function(reason, timeout, errno){\n  if (this._aborted) {\n    return;\n  }\n  var err = new Error(reason + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  err.errno = errno;\n  this.timedout = true;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function() {\n  var self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  }\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(function(){\n      self._timeoutError('Response timeout of ', self._responseTimeout, 'ETIMEDOUT');\n    }, this._responseTimeout);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/request-base.js\n// module id = 86\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in ResponseBase.prototype) {\n    obj[key] = ResponseBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function(field){\n    return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function(header){\n    // TODO: moar!\n    // TODO: make this a util\n\n    // content-type\n    var ct = header['content-type'] || '';\n    this.type = utils.type(ct);\n\n    // params\n    var params = utils.params(ct);\n    for (var key in params) this[key] = params[key];\n\n    this.links = {};\n\n    // links\n    try {\n        if (header.link) {\n            this.links = utils.parseLinks(header.link);\n        }\n    } catch (err) {\n        // ignore\n    }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function(status){\n    var type = status / 100 | 0;\n\n    // status / class\n    this.status = this.statusCode = status;\n    this.statusType = type;\n\n    // basics\n    this.info = 1 == type;\n    this.ok = 2 == type;\n    this.redirect = 3 == type;\n    this.clientError = 4 == type;\n    this.serverError = 5 == type;\n    this.error = (4 == type || 5 == type)\n        ? this.toError()\n        : false;\n\n    // sugar\n    this.accepted = 202 == status;\n    this.noContent = 204 == status;\n    this.badRequest = 400 == status;\n    this.unauthorized = 401 == status;\n    this.notAcceptable = 406 == status;\n    this.forbidden = 403 == status;\n    this.notFound = 404 == status;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/response-base.js\n// module id = 87\n// module chunks = 0","var ERROR_CODES = [\n  'ECONNRESET',\n  'ETIMEDOUT',\n  'EADDRINFO',\n  'ESOCKETTIMEDOUT'\n];\n\n/**\n * Determine if a request should be retried.\n * (Borrowed from segmentio/superagent-retry)\n *\n * @param {Error} err\n * @param {Response} [res]\n * @returns {Boolean}\n */\nmodule.exports = function shouldRetry(err, res) {\n  if (err && err.code && ~ERROR_CODES.indexOf(err.code)) return true;\n  if (res && res.status && res.status >= 500) return true;\n  // Superagent timeout\n  if (err && 'timeout' in err && err.code == 'ECONNABORTED') return true;\n  if (err && 'crossDomain' in err) return true;\n  return false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/should-retry.js\n// module id = 88\n// module chunks = 0","\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = function(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = function(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */);\n    var key = parts.shift();\n    var val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = function(str){\n  return str.split(/ *, */).reduce(function(obj, str){\n    var parts = str.split(/ *; */);\n    var url = parts[0].slice(1, -1);\n    var rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    obj[rel] = url;\n    return obj;\n  }, {});\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = function(header, shouldStripCookie){\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header['host'];\n  if (shouldStripCookie) {\n    delete header['cookie'];\n  }\n  return header;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/superagent/lib/utils.js\n// module id = 89\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 90\n// module chunks = 0"],"sourceRoot":""}